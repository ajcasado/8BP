                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module ciclo
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _reverse
                             13 	.globl _DisplayChar
                             14 	.globl __8BP_umap_inv6
                             15 	.globl __8BP_moverall_inv2
                             16 	.globl __8BP_mover_inv3
                             17 	.globl __8BP_map2sp_inv2
                             18 	.globl __8BP_layout_inv3
                             19 	.globl __8BP_stars_inv5
                             20 	.globl __8BP_setupsp_inv4
                             21 	.globl __8BP_setupsp_inv3
                             22 	.globl __8BP_setlimits_inv4
                             23 	.globl __8BP_routesp_inv2
                             24 	.globl __8BP_printspall_inv4
                             25 	.globl __8BP_printsp_inv2
                             26 	.globl __8BP_printsp_inv3
                             27 	.globl __8BP_printat_inv
                             28 	.globl _getDescriptor
                             29 	.globl __8BP_music_inv4
                             30 	.globl __8BP_locatesp_inv3
                             31 	.globl __8BP_colspall_inv2
                             32 	.globl __8BP_colsp_inv2
                             33 	.globl __8BP_colsp_inv3
                             34 	.globl __8BP_colay_inv2
                             35 	.globl __8BP_colay_inv3
                             36 	.globl __8BP_3D_inv3
                             37 	.globl _comandos_8BP_V41
                             38 	.globl _strlen
                             39 	.globl _abs
                             40 	.globl __basic_rnd_x
                             41 	.globl _tr
                             42 	.globl _ener
                             43 	.globl _enesq
                             44 	.globl _eney
                             45 	.globl _enex
                             46 	.globl _eneim
                             47 	.globl _keyb
                             48 	.globl _tinta
                             49 	.globl _rb
                             50 	.globl _evtipo
                             51 	.globl _evdir
                             52 	.globl _rk
                             53 	.globl _offr
                             54 	.globl _xene
                             55 	.globl _yene
                             56 	.globl _direk
                             57 	.globl _enek
                             58 	.globl _inmune
                             59 	.globl _vidas
                             60 	.globl _level
                             61 	.globl _Nbanda
                             62 	.globl _tabu
                             63 	.globl _pot
                             64 	.globl _p2
                             65 	.globl _p1
                             66 	.globl _pfin2
                             67 	.globl _pfin1
                             68 	.globl _pini
                             69 	.globl _dif
                             70 	.globl _dir
                             71 	.globl _bomb
                             72 	.globl _pres
                             73 	.globl _modo
                             74 	.globl _fr
                             75 	.globl _der
                             76 	.globl _iz
                             77 	.globl _dw
                             78 	.globl _up
                             79 	.globl _scroll
                             80 	.globl _banda
                             81 	.globl _muertos
                             82 	.globl _j
                             83 	.globl _i
                             84 	.globl _t
                             85 	.globl _f2
                             86 	.globl _f1
                             87 	.globl _fps
                             88 	.globl _tb
                             89 	.globl _ta
                             90 	.globl _k
                             91 	.globl _enesp
                             92 	.globl _nextm
                             93 	.globl _m
                             94 	.globl _enecount
                             95 	.globl _dirsp
                             96 	.globl _seq
                             97 	.globl _po
                             98 	.globl _puntos
                             99 	.globl _cor
                            100 	.globl _col
                            101 	.globl _y
                            102 	.globl _x
                            103 	.globl _c
                            104 	.globl _model
                            105 	.globl __8BP_rink_N_inverse_list
                            106 	.globl __8BP_rink_N_color1
                            107 	.globl __8BP_3D_3
                            108 	.globl __8BP_3D_1
                            109 	.globl __8BP_anima_1
                            110 	.globl __8BP_animall
                            111 	.globl __8BP_auto_1
                            112 	.globl __8BP_autoall_1
                            113 	.globl __8BP_autoall
                            114 	.globl __8BP_colay
                            115 	.globl __8BP_colay_2
                            116 	.globl __8BP_colay_1
                            117 	.globl __8BP_colay_3
                            118 	.globl __8BP_colsp_3
                            119 	.globl __8BP_colsp_2
                            120 	.globl __8BP_colsp_1
                            121 	.globl __8BP_colspall
                            122 	.globl __8BP_colspall_1
                            123 	.globl __8BP_colspall_2
                            124 	.globl __8BP_locatesp_3
                            125 	.globl __8BP_music_4
                            126 	.globl __8BP_music
                            127 	.globl __8BP_printat_4
                            128 	.globl __8BP_printsp_3
                            129 	.globl __8BP_printsp_2
                            130 	.globl __8BP_printsp_1
                            131 	.globl __8BP_printspall_4
                            132 	.globl __8BP_printspall_1
                            133 	.globl __8BP_printspall
                            134 	.globl __8BP_routeall
                            135 	.globl __8BP_routesp_2
                            136 	.globl __8BP_routesp_1
                            137 	.globl __8BP_setlimits_4
                            138 	.globl __8BP_setupsp_3
                            139 	.globl __8BP_setupsp_4
                            140 	.globl __8BP_stars_5
                            141 	.globl __8BP_stars
                            142 	.globl __8BP_layout_3
                            143 	.globl __8BP_map2sp_2
                            144 	.globl __8BP_map2sp_1
                            145 	.globl __8BP_mover_3
                            146 	.globl __8BP_mover_1
                            147 	.globl __8BP_moverall_2
                            148 	.globl __8BP_moverall
                            149 	.globl __8BP_peek_2
                            150 	.globl __8BP_poke_2
                            151 	.globl __8BP_rink_1
                            152 	.globl __8BP_rink_N
                            153 	.globl __8BP_umap_6
                            154 	.globl __basic_time
                            155 	.globl __basic_rnd
                            156 	.globl __basic_border
                            157 	.globl __basic_print
                            158 	.globl __basic_inkey
                            159 	.globl __basic_str
                            160 	.globl __basic_call
                            161 	.globl __basic_locate
                            162 	.globl __basic_sound
                            163 	.globl __basic_ink
                            164 	.globl __basic_peek
                            165 	.globl __basic_poke
                            166 	.globl __basic_pen_txt
                            167 	.globl __basic_pen_graph
                            168 	.globl __basic_paper
                            169 	.globl __basic_plot
                            170 	.globl __basic_move
                            171 	.globl __basic_draw
                            172 	.globl _creaDispEne_1990
                            173 	.globl _procesaEvento_1500
                            174 	.globl _procesaEventoBanda_1880
                            175 ;--------------------------------------------------------
                            176 ; special function registers
                            177 ;--------------------------------------------------------
                            178 ;--------------------------------------------------------
                            179 ; ram data
                            180 ;--------------------------------------------------------
                            181 	.area _DATA
   0000                     182 __8BP_rink_N_color1::
   0000                     183 	.ds 1
   0001                     184 __8BP_rink_N_inverse_list::
   0001                     185 	.ds 34
   0023                     186 __basic_str_buffer_65536_273:
   0023                     187 	.ds 11
   002E                     188 _model::
   002E                     189 	.ds 2
   0030                     190 _c::
   0030                     191 	.ds 2
   0032                     192 _x::
   0032                     193 	.ds 2
   0034                     194 _y::
   0034                     195 	.ds 2
   0036                     196 _col::
   0036                     197 	.ds 2
   0038                     198 _cor::
   0038                     199 	.ds 2
   003A                     200 _puntos::
   003A                     201 	.ds 2
   003C                     202 _po::
   003C                     203 	.ds 18
   004E                     204 _seq::
   004E                     205 	.ds 32
   006E                     206 _dirsp::
   006E                     207 	.ds 64
   00AE                     208 _enecount::
   00AE                     209 	.ds 16
   00BE                     210 _m::
   00BE                     211 	.ds 2
   00C0                     212 _nextm::
   00C0                     213 	.ds 2
   00C2                     214 _enesp::
   00C2                     215 	.ds 2
   00C4                     216 _k::
   00C4                     217 	.ds 2
   00C6                     218 _ta::
   00C6                     219 	.ds 2
   00C8                     220 _tb::
   00C8                     221 	.ds 2
   00CA                     222 _fps::
   00CA                     223 	.ds 2
   00CC                     224 _f1::
   00CC                     225 	.ds 2
   00CE                     226 _f2::
   00CE                     227 	.ds 2
   00D0                     228 _t::
   00D0                     229 	.ds 2
   00D2                     230 _i::
   00D2                     231 	.ds 2
   00D4                     232 _j::
   00D4                     233 	.ds 2
   00D6                     234 _muertos::
   00D6                     235 	.ds 2
   00D8                     236 _banda::
   00D8                     237 	.ds 2
   00DA                     238 _scroll::
   00DA                     239 	.ds 1
   00DB                     240 _up::
   00DB                     241 	.ds 1
   00DC                     242 _dw::
   00DC                     243 	.ds 1
   00DD                     244 _iz::
   00DD                     245 	.ds 1
   00DE                     246 _der::
   00DE                     247 	.ds 1
   00DF                     248 _fr::
   00DF                     249 	.ds 1
   00E0                     250 _modo::
   00E0                     251 	.ds 1
   00E1                     252 _pres::
   00E1                     253 	.ds 1
   00E2                     254 _bomb::
   00E2                     255 	.ds 1
   00E3                     256 _dir::
   00E3                     257 	.ds 2
   00E5                     258 _dif::
   00E5                     259 	.ds 2
   00E7                     260 _pini::
   00E7                     261 	.ds 2
   00E9                     262 _pfin1::
   00E9                     263 	.ds 2
   00EB                     264 _pfin2::
   00EB                     265 	.ds 2
   00ED                     266 _p1::
   00ED                     267 	.ds 2
   00EF                     268 _p2::
   00EF                     269 	.ds 2
   00F1                     270 _pot::
   00F1                     271 	.ds 2
   00F3                     272 _tabu::
   00F3                     273 	.ds 2
   00F5                     274 _Nbanda::
   00F5                     275 	.ds 2
   00F7                     276 _level::
   00F7                     277 	.ds 1
   00F8                     278 _vidas::
   00F8                     279 	.ds 1
   00F9                     280 _inmune::
   00F9                     281 	.ds 2
   00FB                     282 _enek::
   00FB                     283 	.ds 2
   00FD                     284 _direk::
   00FD                     285 	.ds 2
   00FF                     286 _yene::
   00FF                     287 	.ds 2
   0101                     288 _xene::
   0101                     289 	.ds 2
   0103                     290 _offr::
   0103                     291 	.ds 2
   0105                     292 _rk::
   0105                     293 	.ds 2
   0107                     294 _evdir::
   0107                     295 	.ds 2
   0109                     296 _evtipo::
   0109                     297 	.ds 2
   010B                     298 _rb::
   010B                     299 	.ds 2
   010D                     300 _tinta::
   010D                     301 	.ds 2
   010F                     302 _keyb::
   010F                     303 	.ds 1
   0110                     304 _eneim::
   0110                     305 	.ds 2
   0112                     306 _enex::
   0112                     307 	.ds 2
   0114                     308 _eney::
   0114                     309 	.ds 2
   0116                     310 _enesq::
   0116                     311 	.ds 2
   0118                     312 _ener::
   0118                     313 	.ds 2
   011A                     314 _tr::
   011A                     315 	.ds 2
                            316 ;--------------------------------------------------------
                            317 ; ram data
                            318 ;--------------------------------------------------------
                            319 	.area _INITIALIZED
   0000                     320 __basic_rnd_x::
   0000                     321 	.ds 2
                            322 ;--------------------------------------------------------
                            323 ; absolute external ram data
                            324 ;--------------------------------------------------------
                            325 	.area _DABS (ABS)
                            326 ;--------------------------------------------------------
                            327 ; global & static initialisations
                            328 ;--------------------------------------------------------
                            329 	.area _HOME
                            330 	.area _GSINIT
                            331 	.area _GSFINAL
                            332 	.area _GSINIT
                            333 ;mini_BASIC/minibasic.h:178: static char buffer[]="          ";
   0000 21r23r00      [10]  334 	ld	hl, #__basic_str_buffer_65536_273
   0003 36 20         [10]  335 	ld	(hl), #0x20
   0005 21r24r00      [10]  336 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0001)
   0008 36 20         [10]  337 	ld	(hl), #0x20
   000A 21r25r00      [10]  338 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0002)
   000D 36 20         [10]  339 	ld	(hl), #0x20
   000F 21r26r00      [10]  340 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0003)
   0012 36 20         [10]  341 	ld	(hl), #0x20
   0014 21r27r00      [10]  342 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0004)
   0017 36 20         [10]  343 	ld	(hl), #0x20
   0019 21r28r00      [10]  344 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0005)
   001C 36 20         [10]  345 	ld	(hl), #0x20
   001E 21r29r00      [10]  346 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0006)
   0021 36 20         [10]  347 	ld	(hl), #0x20
   0023 21r2Ar00      [10]  348 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0007)
   0026 36 20         [10]  349 	ld	(hl), #0x20
   0028 21r2Br00      [10]  350 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0008)
   002B 36 20         [10]  351 	ld	(hl), #0x20
   002D 21r2Cr00      [10]  352 	ld	hl, #(__basic_str_buffer_65536_273 + 0x0009)
   0030 36 20         [10]  353 	ld	(hl), #0x20
   0032 21r2Dr00      [10]  354 	ld	hl, #(__basic_str_buffer_65536_273 + 0x000a)
   0035 36 00         [10]  355 	ld	(hl), #0x00
                            356 ;--------------------------------------------------------
                            357 ; Home
                            358 ;--------------------------------------------------------
                            359 	.area _HOME
                            360 	.area _HOME
                            361 ;--------------------------------------------------------
                            362 ; code
                            363 ;--------------------------------------------------------
                            364 	.area _CODE
                            365 ;8BP_wrapper/8BP.h:103: void comandos_8BP_V41(){
                            366 ;	---------------------------------
                            367 ; Function comandos_8BP_V41
                            368 ; ---------------------------------
   0000                     369 _comandos_8BP_V41::
                            370 ;8BP_wrapper/8BP.h:133: __endasm;
                     645D   371 	_3D	== 0x645D;
                     6FCC   372 	ANIMA	== 0x6fcc;
                     7716   373 	ANIMALL	== 0x7716;
                     7184   374 	AUTO	== 0x7184;
                     71D2   375 	AUTOALL	== 0x71d2;
                     7201   376 	COLAY	== 0x7201;
                     73AC   377 	COLSP	== 0x73ac;
                     75B1   378 	COLSPALL	== 0x75b1;
                     7062   379 	LAYOUT	== 0x7062;
                     6C71   380 	LOCATESP	== 0x6C71;
                     6499   381 	MAP2SP	== 0x6499;
                     753E   382 	MOVER	== 0x753e;
                     76F0   383 	MOVERALL	== 0x76f0;
                     6F58   384 	MUSIC	== 0x6F58;
                     6931   385 	PEEK	== 0x6931;
                     6944   386 	POKE	== 0x6944;
                     6064   387 	PRINTAT	== 0x6064;
                     6C94   388 	PRINTSP	== 0x6C94;
                     62A1   389 	PRINTSPALL	== 0x62a1;
                     7630   390 	RINK	== 0x7630;
                     65F7   391 	ROUTESP	== 0x65f7;
                     65D6   392 	ROUTEALL	== 0x65d6;
                     6870   393 	SETLIMITS	== 0x6870;
                     7101   394 	SETUPSP	== 0x7101;
                     743C   395 	STARS	== 0x743c;
                     5F2F   396 	UMAP	== 0x5f2f;
                            397 ;8BP_wrapper/8BP.h:134: }
   0000 C9            [10]  398 	ret
                            399 ;8BP_wrapper/8BP.h:137: void _8BP_3D_inv3(int offsety,int sp_fin, int flag)
                            400 ;	---------------------------------
                            401 ; Function _8BP_3D_inv3
                            402 ; ---------------------------------
   0001                     403 __8BP_3D_inv3::
                            404 ;8BP_wrapper/8BP.h:148: __endasm;			
   0001 3E 03         [ 7]  405 	ld	a, #3
   0003 DD 21 02 00   [14]  406 	ld	ix,#2 ;posicion primer parametro 
   0007 DD 39         [15]  407 	add ix,sp;
   0009 CD 5D 64      [17]  408 	call	_3D ;
                            409 ;8BP_wrapper/8BP.h:150: }
   000C C9            [10]  410 	ret
                            411 ;8BP_wrapper/8BP.h:152: void _8BP_3D_3(int flag, int sp_fin,int offsety)  
                            412 ;	---------------------------------
                            413 ; Function _8BP_3D_3
                            414 ; ---------------------------------
   000D                     415 __8BP_3D_3::
                            416 ;8BP_wrapper/8BP.h:154: _8BP_3D_inv3(offsety,sp_fin,flag);
   000D C1            [10]  417 	pop	bc
   000E E1            [10]  418 	pop	hl
   000F E5            [11]  419 	push	hl
   0010 C5            [11]  420 	push	bc
   0011 E5            [11]  421 	push	hl
   0012 FD 21 06 00   [14]  422 	ld	iy, #6
   0016 FD 39         [15]  423 	add	iy, sp
   0018 FD 6E 00      [19]  424 	ld	l, 0 (iy)
   001B FD 66 01      [19]  425 	ld	h, 1 (iy)
   001E E5            [11]  426 	push	hl
   001F FD 23         [10]  427 	inc	iy
   0021 FD 23         [10]  428 	inc	iy
   0023 FD 6E 00      [19]  429 	ld	l, 0 (iy)
   0026 FD 66 01      [19]  430 	ld	h, 1 (iy)
   0029 E5            [11]  431 	push	hl
   002A CDr01r00      [17]  432 	call	__8BP_3D_inv3
   002D F1            [10]  433 	pop	af
   002E F1            [10]  434 	pop	af
   002F F1            [10]  435 	pop	af
                            436 ;8BP_wrapper/8BP.h:155: }
   0030 C9            [10]  437 	ret
                            438 ;8BP_wrapper/8BP.h:157: void _8BP_3D_1(int flag) 
                            439 ;	---------------------------------
                            440 ; Function _8BP_3D_1
                            441 ; ---------------------------------
   0031                     442 __8BP_3D_1::
                            443 ;8BP_wrapper/8BP.h:164: __endasm;			
   0031 3E 01         [ 7]  444 	ld	a, #1
   0033 DD 21 02 00   [14]  445 	ld	ix,#2 ;posicion primer parametro 
   0037 DD 39         [15]  446 	add ix,sp;
   0039 CD 5D 64      [17]  447 	call	_3D ;
                            448 ;8BP_wrapper/8BP.h:166: }
   003C C9            [10]  449 	ret
                            450 ;8BP_wrapper/8BP.h:168: void _8BP_anima_1(int sp) 
                            451 ;	---------------------------------
                            452 ; Function _8BP_anima_1
                            453 ; ---------------------------------
   003D                     454 __8BP_anima_1::
                            455 ;8BP_wrapper/8BP.h:175: __endasm;			
   003D 3E 01         [ 7]  456 	ld	a, #1
   003F DD 21 02 00   [14]  457 	ld	ix,#2 ;posicion primer parametro 
   0043 DD 39         [15]  458 	add ix,sp;
   0045 CD CC 6F      [17]  459 	call	ANIMA ;
                            460 ;8BP_wrapper/8BP.h:177: }
   0048 C9            [10]  461 	ret
                            462 ;8BP_wrapper/8BP.h:179: void _8BP_animall() 
                            463 ;	---------------------------------
                            464 ; Function _8BP_animall
                            465 ; ---------------------------------
   0049                     466 __8BP_animall::
                            467 ;8BP_wrapper/8BP.h:184: __endasm;			
   0049 3E 00         [ 7]  468 	ld	a,#0
   004B CD 16 77      [17]  469 	call	ANIMALL ;
                            470 ;8BP_wrapper/8BP.h:186: }
   004E C9            [10]  471 	ret
                            472 ;8BP_wrapper/8BP.h:188: void _8BP_auto_1(int sp) 
                            473 ;	---------------------------------
                            474 ; Function _8BP_auto_1
                            475 ; ---------------------------------
   004F                     476 __8BP_auto_1::
                            477 ;8BP_wrapper/8BP.h:195: __endasm;			
   004F 3E 01         [ 7]  478 	ld	a, #1
   0051 DD 21 02 00   [14]  479 	ld	ix,#2 ;posicion primer parametro 
   0055 DD 39         [15]  480 	add ix,sp;
   0057 CD 84 71      [17]  481 	call	AUTO ;
                            482 ;8BP_wrapper/8BP.h:197: }
   005A C9            [10]  483 	ret
                            484 ;8BP_wrapper/8BP.h:199: void _8BP_autoall_1(int flag) 
                            485 ;	---------------------------------
                            486 ; Function _8BP_autoall_1
                            487 ; ---------------------------------
   005B                     488 __8BP_autoall_1::
                            489 ;8BP_wrapper/8BP.h:206: __endasm;			
   005B 3E 01         [ 7]  490 	ld	a, #1
   005D DD 21 02 00   [14]  491 	ld	ix,#2 ;posicion primer parametro 
   0061 DD 39         [15]  492 	add ix,sp;
   0063 CD D2 71      [17]  493 	call	AUTOALL ;
                            494 ;8BP_wrapper/8BP.h:208: }
   0066 C9            [10]  495 	ret
                            496 ;8BP_wrapper/8BP.h:210: void _8BP_autoall() 
                            497 ;	---------------------------------
                            498 ; Function _8BP_autoall
                            499 ; ---------------------------------
   0067                     500 __8BP_autoall::
                            501 ;8BP_wrapper/8BP.h:215: __endasm;			
   0067 3E 00         [ 7]  502 	ld	a, #0
   0069 CD D2 71      [17]  503 	call	AUTOALL ;
                            504 ;8BP_wrapper/8BP.h:217: }
   006C C9            [10]  505 	ret
                            506 ;8BP_wrapper/8BP.h:219: void _8BP_colay_inv3( int sp,int* colision,int umbral)
                            507 ;	---------------------------------
                            508 ; Function _8BP_colay_inv3
                            509 ; ---------------------------------
   006D                     510 __8BP_colay_inv3::
                            511 ;8BP_wrapper/8BP.h:226: __endasm;		
   006D 3E 03         [ 7]  512 	ld	a, #3
   006F DD 21 02 00   [14]  513 	ld	ix,#2 ;posicion primer parametro 
   0073 DD 39         [15]  514 	add ix,sp;
   0075 CD 01 72      [17]  515 	CALL	COLAY
                            516 ;8BP_wrapper/8BP.h:228: }
   0078 C9            [10]  517 	ret
                            518 ;8BP_wrapper/8BP.h:230: void _8BP_colay()
                            519 ;	---------------------------------
                            520 ; Function _8BP_colay
                            521 ; ---------------------------------
   0079                     522 __8BP_colay::
                            523 ;8BP_wrapper/8BP.h:235: __endasm;		
   0079 3E 00         [ 7]  524 	ld	a, #0
   007B CD 01 72      [17]  525 	CALL	COLAY
                            526 ;8BP_wrapper/8BP.h:237: }
   007E C9            [10]  527 	ret
                            528 ;8BP_wrapper/8BP.h:239: void _8BP_colay_inv2(int sp, int* colision)
                            529 ;	---------------------------------
                            530 ; Function _8BP_colay_inv2
                            531 ; ---------------------------------
   007F                     532 __8BP_colay_inv2::
                            533 ;8BP_wrapper/8BP.h:246: __endasm;		
   007F 3E 02         [ 7]  534 	ld	a, #2
   0081 DD 21 02 00   [14]  535 	ld	ix,#2 ;posicion primer parametro 
   0085 DD 39         [15]  536 	add ix,sp;
   0087 CD 01 72      [17]  537 	CALL	COLAY
                            538 ;8BP_wrapper/8BP.h:248: }
   008A C9            [10]  539 	ret
                            540 ;8BP_wrapper/8BP.h:249: void _8BP_colay_2(int* colision, int sp)
                            541 ;	---------------------------------
                            542 ; Function _8BP_colay_2
                            543 ; ---------------------------------
   008B                     544 __8BP_colay_2::
                            545 ;8BP_wrapper/8BP.h:251: _8BP_colay_inv2(sp, colision);
   008B C1            [10]  546 	pop	bc
   008C E1            [10]  547 	pop	hl
   008D E5            [11]  548 	push	hl
   008E C5            [11]  549 	push	bc
   008F E5            [11]  550 	push	hl
   0090 21 06 00      [10]  551 	ld	hl, #6
   0093 39            [11]  552 	add	hl, sp
   0094 4E            [ 7]  553 	ld	c, (hl)
   0095 23            [ 6]  554 	inc	hl
   0096 46            [ 7]  555 	ld	b, (hl)
   0097 C5            [11]  556 	push	bc
   0098 CDr7Fr00      [17]  557 	call	__8BP_colay_inv2
   009B F1            [10]  558 	pop	af
   009C F1            [10]  559 	pop	af
                            560 ;8BP_wrapper/8BP.h:252: }
   009D C9            [10]  561 	ret
                            562 ;8BP_wrapper/8BP.h:255: void _8BP_colay_1(int sp)
                            563 ;	---------------------------------
                            564 ; Function _8BP_colay_1
                            565 ; ---------------------------------
   009E                     566 __8BP_colay_1::
                            567 ;8BP_wrapper/8BP.h:262: __endasm;		
   009E 3E 01         [ 7]  568 	ld	a, #1
   00A0 DD 21 02 00   [14]  569 	ld	ix,#2 ;posicion primer parametro 
   00A4 DD 39         [15]  570 	add ix,sp;
   00A6 CD 01 72      [17]  571 	CALL	COLAY
                            572 ;8BP_wrapper/8BP.h:264: }
   00A9 C9            [10]  573 	ret
                            574 ;8BP_wrapper/8BP.h:267: void _8BP_colay_3(int umbral, int* colision, int sp)
                            575 ;	---------------------------------
                            576 ; Function _8BP_colay_3
                            577 ; ---------------------------------
   00AA                     578 __8BP_colay_3::
                            579 ;8BP_wrapper/8BP.h:269: _8BP_colay_inv3( sp,colision,umbral);
   00AA C1            [10]  580 	pop	bc
   00AB E1            [10]  581 	pop	hl
   00AC E5            [11]  582 	push	hl
   00AD C5            [11]  583 	push	bc
   00AE E5            [11]  584 	push	hl
   00AF FD 21 06 00   [14]  585 	ld	iy, #6
   00B3 FD 39         [15]  586 	add	iy, sp
   00B5 FD 6E 00      [19]  587 	ld	l, 0 (iy)
   00B8 FD 66 01      [19]  588 	ld	h, 1 (iy)
   00BB E5            [11]  589 	push	hl
   00BC FD 23         [10]  590 	inc	iy
   00BE FD 23         [10]  591 	inc	iy
   00C0 FD 6E 00      [19]  592 	ld	l, 0 (iy)
   00C3 FD 66 01      [19]  593 	ld	h, 1 (iy)
   00C6 E5            [11]  594 	push	hl
   00C7 CDr6Dr00      [17]  595 	call	__8BP_colay_inv3
   00CA F1            [10]  596 	pop	af
   00CB F1            [10]  597 	pop	af
   00CC F1            [10]  598 	pop	af
                            599 ;8BP_wrapper/8BP.h:270: }
   00CD C9            [10]  600 	ret
                            601 ;8BP_wrapper/8BP.h:274: void _8BP_colsp_inv3( int b, int a,int operation)
                            602 ;	---------------------------------
                            603 ; Function _8BP_colsp_inv3
                            604 ; ---------------------------------
   00CE                     605 __8BP_colsp_inv3::
                            606 ;8BP_wrapper/8BP.h:283: __endasm;		
   00CE 3E 03         [ 7]  607 	ld	a, #3
   00D0 DD 21 02 00   [14]  608 	ld	ix,#2 ;posicion primer parametro 
   00D4 DD 39         [15]  609 	add ix,sp;
   00D6 CD AC 73      [17]  610 	CALL	COLSP
                            611 ;8BP_wrapper/8BP.h:285: }
   00D9 C9            [10]  612 	ret
                            613 ;8BP_wrapper/8BP.h:287: void _8BP_colsp_inv2(int* colision,int sp)
                            614 ;	---------------------------------
                            615 ; Function _8BP_colsp_inv2
                            616 ; ---------------------------------
   00DA                     617 __8BP_colsp_inv2::
                            618 ;8BP_wrapper/8BP.h:295: __endasm;		
   00DA 3E 02         [ 7]  619 	ld	a, #2
   00DC DD 21 02 00   [14]  620 	ld	ix,#2 ;posicion primer parametro 
   00E0 DD 39         [15]  621 	add ix,sp;
   00E2 CD AC 73      [17]  622 	CALL	COLSP
                            623 ;8BP_wrapper/8BP.h:297: }
   00E5 C9            [10]  624 	ret
                            625 ;8BP_wrapper/8BP.h:299: void _8BP_colsp_3(int operation, int a, int b)  
                            626 ;	---------------------------------
                            627 ; Function _8BP_colsp_3
                            628 ; ---------------------------------
   00E6                     629 __8BP_colsp_3::
                            630 ;8BP_wrapper/8BP.h:301: _8BP_colsp_inv3(b,a,operation);
   00E6 C1            [10]  631 	pop	bc
   00E7 E1            [10]  632 	pop	hl
   00E8 E5            [11]  633 	push	hl
   00E9 C5            [11]  634 	push	bc
   00EA E5            [11]  635 	push	hl
   00EB FD 21 06 00   [14]  636 	ld	iy, #6
   00EF FD 39         [15]  637 	add	iy, sp
   00F1 FD 6E 00      [19]  638 	ld	l, 0 (iy)
   00F4 FD 66 01      [19]  639 	ld	h, 1 (iy)
   00F7 E5            [11]  640 	push	hl
   00F8 FD 23         [10]  641 	inc	iy
   00FA FD 23         [10]  642 	inc	iy
   00FC FD 6E 00      [19]  643 	ld	l, 0 (iy)
   00FF FD 66 01      [19]  644 	ld	h, 1 (iy)
   0102 E5            [11]  645 	push	hl
   0103 CDrCEr00      [17]  646 	call	__8BP_colsp_inv3
   0106 F1            [10]  647 	pop	af
   0107 F1            [10]  648 	pop	af
   0108 F1            [10]  649 	pop	af
                            650 ;8BP_wrapper/8BP.h:302: }
   0109 C9            [10]  651 	ret
                            652 ;8BP_wrapper/8BP.h:304: void _8BP_colsp_2(int sp, int* colision)  
                            653 ;	---------------------------------
                            654 ; Function _8BP_colsp_2
                            655 ; ---------------------------------
   010A                     656 __8BP_colsp_2::
                            657 ;8BP_wrapper/8BP.h:306: _8BP_colsp_inv2(colision, sp);
   010A C1            [10]  658 	pop	bc
   010B E1            [10]  659 	pop	hl
   010C E5            [11]  660 	push	hl
   010D C5            [11]  661 	push	bc
   010E E5            [11]  662 	push	hl
   010F 21 06 00      [10]  663 	ld	hl, #6
   0112 39            [11]  664 	add	hl, sp
   0113 4E            [ 7]  665 	ld	c, (hl)
   0114 23            [ 6]  666 	inc	hl
   0115 46            [ 7]  667 	ld	b, (hl)
   0116 C5            [11]  668 	push	bc
   0117 CDrDAr00      [17]  669 	call	__8BP_colsp_inv2
   011A F1            [10]  670 	pop	af
   011B F1            [10]  671 	pop	af
                            672 ;8BP_wrapper/8BP.h:307: }
   011C C9            [10]  673 	ret
                            674 ;8BP_wrapper/8BP.h:309: void _8BP_colsp_1(int sp)  
                            675 ;	---------------------------------
                            676 ; Function _8BP_colsp_1
                            677 ; ---------------------------------
   011D                     678 __8BP_colsp_1::
                            679 ;8BP_wrapper/8BP.h:318: __endasm;		
   011D 3E 01         [ 7]  680 	ld	a, #1
   011F DD 21 02 00   [14]  681 	ld	ix,#2 ;posicion primer parametro 
   0123 DD 39         [15]  682 	add ix,sp;
   0125 CD AC 73      [17]  683 	CALL	COLSP
                            684 ;8BP_wrapper/8BP.h:319: }
   0128 C9            [10]  685 	ret
                            686 ;8BP_wrapper/8BP.h:321: void _8BP_colspall_inv2(int* collided,int* collider) 
                            687 ;	---------------------------------
                            688 ; Function _8BP_colspall_inv2
                            689 ; ---------------------------------
   0129                     690 __8BP_colspall_inv2::
                            691 ;8BP_wrapper/8BP.h:329: __endasm;
   0129 3E 02         [ 7]  692 	ld	a, #2
   012B DD 21 02 00   [14]  693 	ld	ix,#2 ;posicion primer parametro 
   012F DD 39         [15]  694 	add ix,sp;
   0131 CD B1 75      [17]  695 	CALL	COLSPALL
                            696 ;8BP_wrapper/8BP.h:330: }
   0134 C9            [10]  697 	ret
                            698 ;8BP_wrapper/8BP.h:332: void _8BP_colspall() 
                            699 ;	---------------------------------
                            700 ; Function _8BP_colspall
                            701 ; ---------------------------------
   0135                     702 __8BP_colspall::
                            703 ;8BP_wrapper/8BP.h:337: __endasm;	
   0135 3E 00         [ 7]  704 	ld	a, #0
   0137 CD B1 75      [17]  705 	CALL	COLSPALL
                            706 ;8BP_wrapper/8BP.h:338: }
   013A C9            [10]  707 	ret
                            708 ;8BP_wrapper/8BP.h:340: void _8BP_colspall_1(int collider_ini) __critical
                            709 ;	---------------------------------
                            710 ; Function _8BP_colspall_1
                            711 ; ---------------------------------
   013B                     712 __8BP_colspall_1::
   013B ED 57         [ 9]  713 	ld	a,i
   013D F3            [ 4]  714 	di
   013E F5            [11]  715 	push	af
                            716 ;8BP_wrapper/8BP.h:348: __endasm;	
   013F 3E 01         [ 7]  717 	ld	a, #1
   0141 DD 21 02 00   [14]  718 	ld	ix,#2 ;posicion primer parametro 
   0145 DD 39         [15]  719 	add ix,sp;
   0147 CD B1 75      [17]  720 	CALL	COLSPALL
                            721 ;8BP_wrapper/8BP.h:349: }
   014A F1            [10]  722 	pop	af
   014B E0            [11]  723 	ret	PO
   014C FB            [ 4]  724 	ei
   014D C9            [10]  725 	ret
                            726 ;8BP_wrapper/8BP.h:351: void _8BP_colspall_2(int* collider, int* collided) 
                            727 ;	---------------------------------
                            728 ; Function _8BP_colspall_2
                            729 ; ---------------------------------
   014E                     730 __8BP_colspall_2::
                            731 ;8BP_wrapper/8BP.h:353: _8BP_colspall_inv2(collided,collider);
   014E C1            [10]  732 	pop	bc
   014F E1            [10]  733 	pop	hl
   0150 E5            [11]  734 	push	hl
   0151 C5            [11]  735 	push	bc
   0152 E5            [11]  736 	push	hl
   0153 21 06 00      [10]  737 	ld	hl, #6
   0156 39            [11]  738 	add	hl, sp
   0157 4E            [ 7]  739 	ld	c, (hl)
   0158 23            [ 6]  740 	inc	hl
   0159 46            [ 7]  741 	ld	b, (hl)
   015A C5            [11]  742 	push	bc
   015B CDr29r01      [17]  743 	call	__8BP_colspall_inv2
   015E F1            [10]  744 	pop	af
   015F F1            [10]  745 	pop	af
                            746 ;8BP_wrapper/8BP.h:354: }
   0160 C9            [10]  747 	ret
                            748 ;8BP_wrapper/8BP.h:356: void _8BP_locatesp_inv3(int x, int y, char sp)
                            749 ;	---------------------------------
                            750 ; Function _8BP_locatesp_inv3
                            751 ; ---------------------------------
   0161                     752 __8BP_locatesp_inv3::
                            753 ;8BP_wrapper/8BP.h:365: __endasm;	
   0161 3E 03         [ 7]  754 	ld	a, #3
   0163 DD 21 02 00   [14]  755 	ld	ix,#2 ;posicion primer parametro 
   0167 DD 39         [15]  756 	add ix,sp;
   0169 CD 71 6C      [17]  757 	CALL	LOCATESP
                            758 ;8BP_wrapper/8BP.h:367: }
   016C C9            [10]  759 	ret
                            760 ;8BP_wrapper/8BP.h:369: void _8BP_locatesp_3(char sp, int y, int x) 
                            761 ;	---------------------------------
                            762 ; Function _8BP_locatesp_3
                            763 ; ---------------------------------
   016D                     764 __8BP_locatesp_3::
                            765 ;8BP_wrapper/8BP.h:371: _8BP_locatesp_inv3( x, y, sp);
   016D FD 21 02 00   [14]  766 	ld	iy, #2
   0171 FD 39         [15]  767 	add	iy, sp
   0173 FD 7E 00      [19]  768 	ld	a, 0 (iy)
   0176 F5            [11]  769 	push	af
   0177 33            [ 6]  770 	inc	sp
   0178 FD 23         [10]  771 	inc	iy
   017A FD 6E 00      [19]  772 	ld	l, 0 (iy)
   017D FD 66 01      [19]  773 	ld	h, 1 (iy)
   0180 E5            [11]  774 	push	hl
   0181 FD 23         [10]  775 	inc	iy
   0183 FD 23         [10]  776 	inc	iy
   0185 FD 6E 00      [19]  777 	ld	l, 0 (iy)
   0188 FD 66 01      [19]  778 	ld	h, 1 (iy)
   018B E5            [11]  779 	push	hl
   018C CDr61r01      [17]  780 	call	__8BP_locatesp_inv3
   018F F1            [10]  781 	pop	af
   0190 F1            [10]  782 	pop	af
   0191 33            [ 6]  783 	inc	sp
                            784 ;8BP_wrapper/8BP.h:372: }
   0192 C9            [10]  785 	ret
                            786 ;8BP_wrapper/8BP.h:375: void _8BP_music_inv4(int speed, int song, int flag_repetition, int flag_c) 
                            787 ;	---------------------------------
                            788 ; Function _8BP_music_inv4
                            789 ; ---------------------------------
   0193                     790 __8BP_music_inv4::
                            791 ;8BP_wrapper/8BP.h:386: __endasm;		
   0193 3E 04         [ 7]  792 	ld	a, #4
   0195 DD 21 02 00   [14]  793 	ld	ix,#2 ;posicion primer parametro 
   0199 DD 39         [15]  794 	add ix,sp;
   019B CD 58 6F      [17]  795 	CALL	MUSIC
                            796 ;8BP_wrapper/8BP.h:387: }
   019E C9            [10]  797 	ret
                            798 ;8BP_wrapper/8BP.h:389: void _8BP_music_4(int flag_c, int flag_repetition,int song, int speed)  
                            799 ;	---------------------------------
                            800 ; Function _8BP_music_4
                            801 ; ---------------------------------
   019F                     802 __8BP_music_4::
                            803 ;8BP_wrapper/8BP.h:391: _8BP_music_inv4(speed, song, flag_repetition, flag_c);
   019F C1            [10]  804 	pop	bc
   01A0 E1            [10]  805 	pop	hl
   01A1 E5            [11]  806 	push	hl
   01A2 C5            [11]  807 	push	bc
   01A3 E5            [11]  808 	push	hl
   01A4 FD 21 06 00   [14]  809 	ld	iy, #6
   01A8 FD 39         [15]  810 	add	iy, sp
   01AA FD 6E 00      [19]  811 	ld	l, 0 (iy)
   01AD FD 66 01      [19]  812 	ld	h, 1 (iy)
   01B0 E5            [11]  813 	push	hl
   01B1 FD 23         [10]  814 	inc	iy
   01B3 FD 23         [10]  815 	inc	iy
   01B5 FD 6E 00      [19]  816 	ld	l, 0 (iy)
   01B8 FD 66 01      [19]  817 	ld	h, 1 (iy)
   01BB E5            [11]  818 	push	hl
   01BC FD 23         [10]  819 	inc	iy
   01BE FD 23         [10]  820 	inc	iy
   01C0 FD 6E 00      [19]  821 	ld	l, 0 (iy)
   01C3 FD 66 01      [19]  822 	ld	h, 1 (iy)
   01C6 E5            [11]  823 	push	hl
   01C7 CDr93r01      [17]  824 	call	__8BP_music_inv4
   01CA F1            [10]  825 	pop	af
   01CB F1            [10]  826 	pop	af
   01CC F1            [10]  827 	pop	af
   01CD F1            [10]  828 	pop	af
                            829 ;8BP_wrapper/8BP.h:393: }
   01CE C9            [10]  830 	ret
                            831 ;8BP_wrapper/8BP.h:395: void _8BP_music()
                            832 ;	---------------------------------
                            833 ; Function _8BP_music
                            834 ; ---------------------------------
   01CF                     835 __8BP_music::
                            836 ;8BP_wrapper/8BP.h:400: __endasm;		
   01CF 3E 00         [ 7]  837 	ld	a, #0
   01D1 CD 58 6F      [17]  838 	CALL	MUSIC
                            839 ;8BP_wrapper/8BP.h:401: }
   01D4 C9            [10]  840 	ret
                            841 ;8BP_wrapper/8BP.h:403: void getDescriptor(char* desc,char *cad)
                            842 ;	---------------------------------
                            843 ; Function getDescriptor
                            844 ; ---------------------------------
   01D5                     845 _getDescriptor::
                            846 ;8BP_wrapper/8BP.h:407: char len=strlen(cad);
   01D5 21 04 00      [10]  847 	ld	hl, #4
   01D8 39            [11]  848 	add	hl, sp
   01D9 4E            [ 7]  849 	ld	c, (hl)
   01DA 23            [ 6]  850 	inc	hl
   01DB 46            [ 7]  851 	ld	b, (hl)
   01DC C5            [11]  852 	push	bc
   01DD CDr00r00      [17]  853 	call	_strlen
   01E0 F1            [10]  854 	pop	af
   01E1 4D            [ 4]  855 	ld	c, l
                            856 ;8BP_wrapper/8BP.h:408: desc[0]=len;
   01E2 D1            [10]  857 	pop	de
   01E3 E1            [10]  858 	pop	hl
   01E4 E5            [11]  859 	push	hl
   01E5 D5            [11]  860 	push	de
   01E6 71            [ 7]  861 	ld	(hl), c
                            862 ;8BP_wrapper/8BP.h:410: p=desc+1;
   01E7 23            [ 6]  863 	inc	hl
                            864 ;8BP_wrapper/8BP.h:411: *p=cad;
   01E8 FD 21 04 00   [14]  865 	ld	iy, #4
   01EC FD 39         [15]  866 	add	iy, sp
   01EE FD 4E 00      [19]  867 	ld	c, 0 (iy)
   01F1 FD 7E 01      [19]  868 	ld	a, 1 (iy)
   01F4 71            [ 7]  869 	ld	(hl), c
   01F5 23            [ 6]  870 	inc	hl
   01F6 77            [ 7]  871 	ld	(hl), a
                            872 ;8BP_wrapper/8BP.h:414: }
   01F7 C9            [10]  873 	ret
                            874 ;8BP_wrapper/8BP.h:416: void _8BP_printat_inv(char *descriptor , int x, int y,int flag) 
                            875 ;	---------------------------------
                            876 ; Function _8BP_printat_inv
                            877 ; ---------------------------------
   01F8                     878 __8BP_printat_inv::
                            879 ;8BP_wrapper/8BP.h:426: __endasm;			
   01F8 3E 04         [ 7]  880 	ld	a, #4
   01FA DD 21 02 00   [14]  881 	ld	ix,#2 ;posicion primer parametro 
   01FE DD 39         [15]  882 	add ix,sp;
   0200 CD 64 60      [17]  883 	CALL	PRINTAT
                            884 ;8BP_wrapper/8BP.h:428: }
   0203 C9            [10]  885 	ret
                            886 ;8BP_wrapper/8BP.h:430: void _8BP_printat_4(int flag,int y,int x, char* cad)  
                            887 ;	---------------------------------
                            888 ; Function _8BP_printat_4
                            889 ; ---------------------------------
   0204                     890 __8BP_printat_4::
   0204 F5            [11]  891 	push	af
   0205 3B            [ 6]  892 	dec	sp
                            893 ;8BP_wrapper/8BP.h:433: char descriptor[3]={0,0,0};
   0206 21 00 00      [10]  894 	ld	hl, #0
   0209 39            [11]  895 	add	hl, sp
   020A EB            [ 4]  896 	ex	de, hl
   020B AF            [ 4]  897 	xor	a, a
   020C 12            [ 7]  898 	ld	(de), a
   020D 4B            [ 4]  899 	ld	c, e
   020E 42            [ 4]  900 	ld	b, d
   020F 03            [ 6]  901 	inc	bc
   0210 AF            [ 4]  902 	xor	a, a
   0211 02            [ 7]  903 	ld	(bc), a
   0212 6B            [ 4]  904 	ld	l, e
   0213 62            [ 4]  905 	ld	h, d
   0214 23            [ 6]  906 	inc	hl
   0215 23            [ 6]  907 	inc	hl
   0216 36 00         [10]  908 	ld	(hl), #0x00
                            909 ;8BP_wrapper/8BP.h:434: char len=strlen(cad);
   0218 C5            [11]  910 	push	bc
   0219 21 0D 00      [10]  911 	ld	hl, #13
   021C 39            [11]  912 	add	hl, sp
   021D 4E            [ 7]  913 	ld	c, (hl)
   021E 23            [ 6]  914 	inc	hl
   021F 46            [ 7]  915 	ld	b, (hl)
   0220 C5            [11]  916 	push	bc
   0221 CDr00r00      [17]  917 	call	_strlen
   0224 F1            [10]  918 	pop	af
   0225 C1            [10]  919 	pop	bc
   0226 7D            [ 4]  920 	ld	a, l
                            921 ;8BP_wrapper/8BP.h:435: descriptor[0]=len;
   0227 12            [ 7]  922 	ld	(de), a
                            923 ;8BP_wrapper/8BP.h:437: p=descriptor+1;
   0228 69            [ 4]  924 	ld	l, c
   0229 60            [ 4]  925 	ld	h, b
                            926 ;8BP_wrapper/8BP.h:438: *p=cad;  
   022A FD 21 0B 00   [14]  927 	ld	iy, #11
   022E FD 39         [15]  928 	add	iy, sp
   0230 FD 4E 00      [19]  929 	ld	c, 0 (iy)
   0233 FD 7E 01      [19]  930 	ld	a, 1 (iy)
   0236 71            [ 7]  931 	ld	(hl), c
   0237 23            [ 6]  932 	inc	hl
   0238 77            [ 7]  933 	ld	(hl), a
                            934 ;8BP_wrapper/8BP.h:441: _8BP_printat_inv(descriptor, x, y, flag);   
   0239 FD 21 05 00   [14]  935 	ld	iy, #5
   023D FD 39         [15]  936 	add	iy, sp
   023F FD 6E 00      [19]  937 	ld	l, 0 (iy)
   0242 FD 66 01      [19]  938 	ld	h, 1 (iy)
   0245 E5            [11]  939 	push	hl
   0246 FD 23         [10]  940 	inc	iy
   0248 FD 23         [10]  941 	inc	iy
   024A FD 6E 00      [19]  942 	ld	l, 0 (iy)
   024D FD 66 01      [19]  943 	ld	h, 1 (iy)
   0250 E5            [11]  944 	push	hl
   0251 FD 23         [10]  945 	inc	iy
   0253 FD 23         [10]  946 	inc	iy
   0255 FD 6E 00      [19]  947 	ld	l, 0 (iy)
   0258 FD 66 01      [19]  948 	ld	h, 1 (iy)
   025B E5            [11]  949 	push	hl
   025C D5            [11]  950 	push	de
   025D CDrF8r01      [17]  951 	call	__8BP_printat_inv
   0260 F1            [10]  952 	pop	af
   0261 F1            [10]  953 	pop	af
   0262 F1            [10]  954 	pop	af
   0263 F1            [10]  955 	pop	af
                            956 ;8BP_wrapper/8BP.h:443: } 
   0264 F1            [10]  957 	pop	af
   0265 33            [ 6]  958 	inc	sp
   0266 C9            [10]  959 	ret
                            960 ;8BP_wrapper/8BP.h:445: void _8BP_printsp_inv3(int x,int y, int sp)  
                            961 ;	---------------------------------
                            962 ; Function _8BP_printsp_inv3
                            963 ; ---------------------------------
   0267                     964 __8BP_printsp_inv3::
                            965 ;8BP_wrapper/8BP.h:455: __endasm;	
   0267 3E 03         [ 7]  966 	ld	a, #3 ; se envian 3 parametros
   0269 DD 21 02 00   [14]  967 	ld	ix,#2 ;posicion primer parametro 
   026D DD 39         [15]  968 	add ix,sp;
   026F CD 94 6C      [17]  969 	CALL	PRINTSP
                            970 ;8BP_wrapper/8BP.h:456: }
   0272 C9            [10]  971 	ret
                            972 ;8BP_wrapper/8BP.h:458: void _8BP_printsp_inv2(int bits, int sp) 
                            973 ;	---------------------------------
                            974 ; Function _8BP_printsp_inv2
                            975 ; ---------------------------------
   0273                     976 __8BP_printsp_inv2::
                            977 ;8BP_wrapper/8BP.h:467: __endasm;	
   0273 3E 02         [ 7]  978 	ld	a, #2
   0275 DD 21 02 00   [14]  979 	ld	ix,#2 ;posicion primer parametro 
   0279 DD 39         [15]  980 	add ix,sp;
   027B CD 94 6C      [17]  981 	call	PRINTSP ;
                            982 ;8BP_wrapper/8BP.h:469: }
   027E C9            [10]  983 	ret
                            984 ;8BP_wrapper/8BP.h:471: void _8BP_printsp_3(int sp, int y, int x)  
                            985 ;	---------------------------------
                            986 ; Function _8BP_printsp_3
                            987 ; ---------------------------------
   027F                     988 __8BP_printsp_3::
                            989 ;8BP_wrapper/8BP.h:473: _8BP_printsp_inv3( x, y,  sp);
   027F C1            [10]  990 	pop	bc
   0280 E1            [10]  991 	pop	hl
   0281 E5            [11]  992 	push	hl
   0282 C5            [11]  993 	push	bc
   0283 E5            [11]  994 	push	hl
   0284 FD 21 06 00   [14]  995 	ld	iy, #6
   0288 FD 39         [15]  996 	add	iy, sp
   028A FD 6E 00      [19]  997 	ld	l, 0 (iy)
   028D FD 66 01      [19]  998 	ld	h, 1 (iy)
   0290 E5            [11]  999 	push	hl
   0291 FD 23         [10] 1000 	inc	iy
   0293 FD 23         [10] 1001 	inc	iy
   0295 FD 6E 00      [19] 1002 	ld	l, 0 (iy)
   0298 FD 66 01      [19] 1003 	ld	h, 1 (iy)
   029B E5            [11] 1004 	push	hl
   029C CDr67r02      [17] 1005 	call	__8BP_printsp_inv3
   029F F1            [10] 1006 	pop	af
   02A0 F1            [10] 1007 	pop	af
   02A1 F1            [10] 1008 	pop	af
                           1009 ;8BP_wrapper/8BP.h:474: }
   02A2 C9            [10] 1010 	ret
                           1011 ;8BP_wrapper/8BP.h:476: void _8BP_printsp_2(int sp,int bits_background)  
                           1012 ;	---------------------------------
                           1013 ; Function _8BP_printsp_2
                           1014 ; ---------------------------------
   02A3                    1015 __8BP_printsp_2::
                           1016 ;8BP_wrapper/8BP.h:478: _8BP_printsp_inv2( bits_background,  sp);
   02A3 C1            [10] 1017 	pop	bc
   02A4 E1            [10] 1018 	pop	hl
   02A5 E5            [11] 1019 	push	hl
   02A6 C5            [11] 1020 	push	bc
   02A7 E5            [11] 1021 	push	hl
   02A8 21 06 00      [10] 1022 	ld	hl, #6
   02AB 39            [11] 1023 	add	hl, sp
   02AC 4E            [ 7] 1024 	ld	c, (hl)
   02AD 23            [ 6] 1025 	inc	hl
   02AE 46            [ 7] 1026 	ld	b, (hl)
   02AF C5            [11] 1027 	push	bc
   02B0 CDr73r02      [17] 1028 	call	__8BP_printsp_inv2
   02B3 F1            [10] 1029 	pop	af
   02B4 F1            [10] 1030 	pop	af
                           1031 ;8BP_wrapper/8BP.h:479: }
   02B5 C9            [10] 1032 	ret
                           1033 ;8BP_wrapper/8BP.h:481: void _8BP_printsp_1(int sp)  
                           1034 ;	---------------------------------
                           1035 ; Function _8BP_printsp_1
                           1036 ; ---------------------------------
   02B6                    1037 __8BP_printsp_1::
                           1038 ;8BP_wrapper/8BP.h:489: __endasm;	
   02B6 3E 01         [ 7] 1039 	ld	a, #1
   02B8 DD 21 02 00   [14] 1040 	ld	ix,#2 ;posicion primer parametro 
   02BC DD 39         [15] 1041 	add ix,sp;
   02BE CD 94 6C      [17] 1042 	CALL	PRINTSP
                           1043 ;8BP_wrapper/8BP.h:492: }
   02C1 C9            [10] 1044 	ret
                           1045 ;8BP_wrapper/8BP.h:494: void _8BP_printspall_inv4(int flag_sync,int flag_anima, int fin, int ini)
                           1046 ;	---------------------------------
                           1047 ; Function _8BP_printspall_inv4
                           1048 ; ---------------------------------
   02C2                    1049 __8BP_printspall_inv4::
                           1050 ;8BP_wrapper/8BP.h:504: __endasm;	
   02C2 3E 04         [ 7] 1051 	ld	a, #4
   02C4 DD 21 02 00   [14] 1052 	ld	ix,#2 ;posicion primer parametro 
   02C8 DD 39         [15] 1053 	add ix,sp;
   02CA CD A1 62      [17] 1054 	CALL	PRINTSPALL
                           1055 ;8BP_wrapper/8BP.h:505: }
   02CD C9            [10] 1056 	ret
                           1057 ;8BP_wrapper/8BP.h:507: void _8BP_printspall_4(int ini, int fin, int flag_anima, int flag_sync)  
                           1058 ;	---------------------------------
                           1059 ; Function _8BP_printspall_4
                           1060 ; ---------------------------------
   02CE                    1061 __8BP_printspall_4::
                           1062 ;8BP_wrapper/8BP.h:509: _8BP_printspall_inv4(flag_sync, flag_anima, fin, ini);
   02CE C1            [10] 1063 	pop	bc
   02CF E1            [10] 1064 	pop	hl
   02D0 E5            [11] 1065 	push	hl
   02D1 C5            [11] 1066 	push	bc
   02D2 E5            [11] 1067 	push	hl
   02D3 FD 21 06 00   [14] 1068 	ld	iy, #6
   02D7 FD 39         [15] 1069 	add	iy, sp
   02D9 FD 6E 00      [19] 1070 	ld	l, 0 (iy)
   02DC FD 66 01      [19] 1071 	ld	h, 1 (iy)
   02DF E5            [11] 1072 	push	hl
   02E0 FD 23         [10] 1073 	inc	iy
   02E2 FD 23         [10] 1074 	inc	iy
   02E4 FD 6E 00      [19] 1075 	ld	l, 0 (iy)
   02E7 FD 66 01      [19] 1076 	ld	h, 1 (iy)
   02EA E5            [11] 1077 	push	hl
   02EB FD 23         [10] 1078 	inc	iy
   02ED FD 23         [10] 1079 	inc	iy
   02EF FD 6E 00      [19] 1080 	ld	l, 0 (iy)
   02F2 FD 66 01      [19] 1081 	ld	h, 1 (iy)
   02F5 E5            [11] 1082 	push	hl
   02F6 CDrC2r02      [17] 1083 	call	__8BP_printspall_inv4
   02F9 F1            [10] 1084 	pop	af
   02FA F1            [10] 1085 	pop	af
   02FB F1            [10] 1086 	pop	af
   02FC F1            [10] 1087 	pop	af
                           1088 ;8BP_wrapper/8BP.h:510: }
   02FD C9            [10] 1089 	ret
                           1090 ;8BP_wrapper/8BP.h:512: void _8BP_printspall_1(int order_type)  
                           1091 ;	---------------------------------
                           1092 ; Function _8BP_printspall_1
                           1093 ; ---------------------------------
   02FE                    1094 __8BP_printspall_1::
                           1095 ;8BP_wrapper/8BP.h:519: __endasm;	
   02FE 3E 01         [ 7] 1096 	ld	a, #1
   0300 DD 21 02 00   [14] 1097 	ld	ix,#2 ;posicion primer parametro 
   0304 DD 39         [15] 1098 	add ix,sp;
   0306 CD A1 62      [17] 1099 	CALL	PRINTSPALL
                           1100 ;8BP_wrapper/8BP.h:520: }
   0309 C9            [10] 1101 	ret
                           1102 ;8BP_wrapper/8BP.h:522: void _8BP_printspall() 
                           1103 ;	---------------------------------
                           1104 ; Function _8BP_printspall
                           1105 ; ---------------------------------
   030A                    1106 __8BP_printspall::
                           1107 ;8BP_wrapper/8BP.h:527: __endasm;	
   030A 3E 00         [ 7] 1108 	ld	a, #0
   030C CD A1 62      [17] 1109 	CALL	PRINTSPALL
                           1110 ;8BP_wrapper/8BP.h:528: }
   030F C9            [10] 1111 	ret
                           1112 ;8BP_wrapper/8BP.h:530: void _8BP_routeall()
                           1113 ;	---------------------------------
                           1114 ; Function _8BP_routeall
                           1115 ; ---------------------------------
   0310                    1116 __8BP_routeall::
                           1117 ;8BP_wrapper/8BP.h:535: __endasm;	
   0310 3E 00         [ 7] 1118 	ld	a, #0;
   0312 CD D6 65      [17] 1119 	CALL	ROUTEALL
                           1120 ;8BP_wrapper/8BP.h:537: }
   0315 C9            [10] 1121 	ret
                           1122 ;8BP_wrapper/8BP.h:540: void _8BP_routesp_inv2(int pasos, int sp) 
                           1123 ;	---------------------------------
                           1124 ; Function _8BP_routesp_inv2
                           1125 ; ---------------------------------
   0316                    1126 __8BP_routesp_inv2::
                           1127 ;8BP_wrapper/8BP.h:548: __endasm;	
   0316 3E 02         [ 7] 1128 	ld	a, #2 ;
   0318 DD 21 02 00   [14] 1129 	ld	ix,#2 ;posicion primer parametro 
   031C DD 39         [15] 1130 	add ix,sp;
   031E CD F7 65      [17] 1131 	CALL	ROUTESP
                           1132 ;8BP_wrapper/8BP.h:549: }
   0321 C9            [10] 1133 	ret
                           1134 ;8BP_wrapper/8BP.h:551: void _8BP_routesp_2(int sp, int pasos)  
                           1135 ;	---------------------------------
                           1136 ; Function _8BP_routesp_2
                           1137 ; ---------------------------------
   0322                    1138 __8BP_routesp_2::
                           1139 ;8BP_wrapper/8BP.h:553: _8BP_routesp_inv2(pasos,sp) ;
   0322 C1            [10] 1140 	pop	bc
   0323 E1            [10] 1141 	pop	hl
   0324 E5            [11] 1142 	push	hl
   0325 C5            [11] 1143 	push	bc
   0326 E5            [11] 1144 	push	hl
   0327 21 06 00      [10] 1145 	ld	hl, #6
   032A 39            [11] 1146 	add	hl, sp
   032B 4E            [ 7] 1147 	ld	c, (hl)
   032C 23            [ 6] 1148 	inc	hl
   032D 46            [ 7] 1149 	ld	b, (hl)
   032E C5            [11] 1150 	push	bc
   032F CDr16r03      [17] 1151 	call	__8BP_routesp_inv2
   0332 F1            [10] 1152 	pop	af
   0333 F1            [10] 1153 	pop	af
                           1154 ;8BP_wrapper/8BP.h:554: }
   0334 C9            [10] 1155 	ret
                           1156 ;8BP_wrapper/8BP.h:556: void _8BP_routesp_1(int sp)  
                           1157 ;	---------------------------------
                           1158 ; Function _8BP_routesp_1
                           1159 ; ---------------------------------
   0335                    1160 __8BP_routesp_1::
                           1161 ;8BP_wrapper/8BP.h:563: __endasm;	
   0335 3E 01         [ 7] 1162 	ld	a, #1 ;
   0337 DD 21 02 00   [14] 1163 	ld	ix,#2 ;posicion primer parametro 
   033B DD 39         [15] 1164 	add ix,sp;
   033D CD F7 65      [17] 1165 	CALL	ROUTESP
                           1166 ;8BP_wrapper/8BP.h:565: }
   0340 C9            [10] 1167 	ret
                           1168 ;8BP_wrapper/8BP.h:567: void _8BP_setlimits_inv4(int ymax, int ymin, int xmax,int xmin)
                           1169 ;	---------------------------------
                           1170 ; Function _8BP_setlimits_inv4
                           1171 ; ---------------------------------
   0341                    1172 __8BP_setlimits_inv4::
                           1173 ;8BP_wrapper/8BP.h:574: __endasm;	
   0341 3E 04         [ 7] 1174 	ld	a, #4 ;
   0343 DD 21 02 00   [14] 1175 	ld	ix,#2 ;posicion primer parametro 
   0347 DD 39         [15] 1176 	add ix,sp;
   0349 CD 70 68      [17] 1177 	CALL	SETLIMITS
                           1178 ;8BP_wrapper/8BP.h:577: }
   034C C9            [10] 1179 	ret
                           1180 ;8BP_wrapper/8BP.h:579: void _8BP_setlimits_4(int xmin,int xmax, int ymin, int ymax)
                           1181 ;	---------------------------------
                           1182 ; Function _8BP_setlimits_4
                           1183 ; ---------------------------------
   034D                    1184 __8BP_setlimits_4::
                           1185 ;8BP_wrapper/8BP.h:581: _8BP_setlimits_inv4( ymax,  ymin,  xmax, xmin);
   034D C1            [10] 1186 	pop	bc
   034E E1            [10] 1187 	pop	hl
   034F E5            [11] 1188 	push	hl
   0350 C5            [11] 1189 	push	bc
   0351 E5            [11] 1190 	push	hl
   0352 FD 21 06 00   [14] 1191 	ld	iy, #6
   0356 FD 39         [15] 1192 	add	iy, sp
   0358 FD 6E 00      [19] 1193 	ld	l, 0 (iy)
   035B FD 66 01      [19] 1194 	ld	h, 1 (iy)
   035E E5            [11] 1195 	push	hl
   035F FD 23         [10] 1196 	inc	iy
   0361 FD 23         [10] 1197 	inc	iy
   0363 FD 6E 00      [19] 1198 	ld	l, 0 (iy)
   0366 FD 66 01      [19] 1199 	ld	h, 1 (iy)
   0369 E5            [11] 1200 	push	hl
   036A FD 23         [10] 1201 	inc	iy
   036C FD 23         [10] 1202 	inc	iy
   036E FD 6E 00      [19] 1203 	ld	l, 0 (iy)
   0371 FD 66 01      [19] 1204 	ld	h, 1 (iy)
   0374 E5            [11] 1205 	push	hl
   0375 CDr41r03      [17] 1206 	call	__8BP_setlimits_inv4
   0378 F1            [10] 1207 	pop	af
   0379 F1            [10] 1208 	pop	af
   037A F1            [10] 1209 	pop	af
   037B F1            [10] 1210 	pop	af
                           1211 ;8BP_wrapper/8BP.h:582: }
   037C C9            [10] 1212 	ret
                           1213 ;8BP_wrapper/8BP.h:584: void _8BP_setupsp_inv3(int value,int param, int sp) 
                           1214 ;	---------------------------------
                           1215 ; Function _8BP_setupsp_inv3
                           1216 ; ---------------------------------
   037D                    1217 __8BP_setupsp_inv3::
                           1218 ;8BP_wrapper/8BP.h:593: __endasm;	
   037D 3E 03         [ 7] 1219 	ld	a, #3 ; se envian 3 parametros
   037F DD 21 02 00   [14] 1220 	ld	ix,#2 ;posicion primer parametro 
   0383 DD 39         [15] 1221 	add ix,sp;
   0385 CD 01 71      [17] 1222 	CALL	SETUPSP
                           1223 ;8BP_wrapper/8BP.h:594: }
   0388 C9            [10] 1224 	ret
                           1225 ;8BP_wrapper/8BP.h:596: void _8BP_setupsp_inv4(int value2,int value1,int param, int sp) 
                           1226 ;	---------------------------------
                           1227 ; Function _8BP_setupsp_inv4
                           1228 ; ---------------------------------
   0389                    1229 __8BP_setupsp_inv4::
                           1230 ;8BP_wrapper/8BP.h:606: __endasm;	
   0389 3E 04         [ 7] 1231 	ld	a, #4 ;
   038B DD 21 02 00   [14] 1232 	ld	ix,#2 ;posicion primer parametro 
   038F DD 39         [15] 1233 	add ix,sp;
   0391 CD 01 71      [17] 1234 	CALL	SETUPSP
                           1235 ;8BP_wrapper/8BP.h:607: }
   0394 C9            [10] 1236 	ret
                           1237 ;8BP_wrapper/8BP.h:609: void _8BP_setupsp_3(int sp,int param, int value)  
                           1238 ;	---------------------------------
                           1239 ; Function _8BP_setupsp_3
                           1240 ; ---------------------------------
   0395                    1241 __8BP_setupsp_3::
                           1242 ;8BP_wrapper/8BP.h:611: _8BP_setupsp_inv3(value,param, sp);
   0395 C1            [10] 1243 	pop	bc
   0396 E1            [10] 1244 	pop	hl
   0397 E5            [11] 1245 	push	hl
   0398 C5            [11] 1246 	push	bc
   0399 E5            [11] 1247 	push	hl
   039A FD 21 06 00   [14] 1248 	ld	iy, #6
   039E FD 39         [15] 1249 	add	iy, sp
   03A0 FD 6E 00      [19] 1250 	ld	l, 0 (iy)
   03A3 FD 66 01      [19] 1251 	ld	h, 1 (iy)
   03A6 E5            [11] 1252 	push	hl
   03A7 FD 23         [10] 1253 	inc	iy
   03A9 FD 23         [10] 1254 	inc	iy
   03AB FD 6E 00      [19] 1255 	ld	l, 0 (iy)
   03AE FD 66 01      [19] 1256 	ld	h, 1 (iy)
   03B1 E5            [11] 1257 	push	hl
   03B2 CDr7Dr03      [17] 1258 	call	__8BP_setupsp_inv3
   03B5 F1            [10] 1259 	pop	af
   03B6 F1            [10] 1260 	pop	af
   03B7 F1            [10] 1261 	pop	af
                           1262 ;8BP_wrapper/8BP.h:612: }
   03B8 C9            [10] 1263 	ret
                           1264 ;8BP_wrapper/8BP.h:614: void _8BP_setupsp_4(int sp,int param, int value1,int value2) 
                           1265 ;	---------------------------------
                           1266 ; Function _8BP_setupsp_4
                           1267 ; ---------------------------------
   03B9                    1268 __8BP_setupsp_4::
                           1269 ;8BP_wrapper/8BP.h:616: _8BP_setupsp_inv4(value2,value1,param, sp);
   03B9 C1            [10] 1270 	pop	bc
   03BA E1            [10] 1271 	pop	hl
   03BB E5            [11] 1272 	push	hl
   03BC C5            [11] 1273 	push	bc
   03BD E5            [11] 1274 	push	hl
   03BE FD 21 06 00   [14] 1275 	ld	iy, #6
   03C2 FD 39         [15] 1276 	add	iy, sp
   03C4 FD 6E 00      [19] 1277 	ld	l, 0 (iy)
   03C7 FD 66 01      [19] 1278 	ld	h, 1 (iy)
   03CA E5            [11] 1279 	push	hl
   03CB FD 23         [10] 1280 	inc	iy
   03CD FD 23         [10] 1281 	inc	iy
   03CF FD 6E 00      [19] 1282 	ld	l, 0 (iy)
   03D2 FD 66 01      [19] 1283 	ld	h, 1 (iy)
   03D5 E5            [11] 1284 	push	hl
   03D6 FD 23         [10] 1285 	inc	iy
   03D8 FD 23         [10] 1286 	inc	iy
   03DA FD 6E 00      [19] 1287 	ld	l, 0 (iy)
   03DD FD 66 01      [19] 1288 	ld	h, 1 (iy)
   03E0 E5            [11] 1289 	push	hl
   03E1 CDr89r03      [17] 1290 	call	__8BP_setupsp_inv4
   03E4 F1            [10] 1291 	pop	af
   03E5 F1            [10] 1292 	pop	af
   03E6 F1            [10] 1293 	pop	af
   03E7 F1            [10] 1294 	pop	af
                           1295 ;8BP_wrapper/8BP.h:617: }
   03E8 C9            [10] 1296 	ret
                           1297 ;8BP_wrapper/8BP.h:620: void _8BP_stars_inv5(int dx, int dy, int color, int num_stars,int star_ini)
                           1298 ;	---------------------------------
                           1299 ; Function _8BP_stars_inv5
                           1300 ; ---------------------------------
   03E9                    1301 __8BP_stars_inv5::
                           1302 ;8BP_wrapper/8BP.h:631: __endasm;	
   03E9 3E 05         [ 7] 1303 	ld	a, #5
   03EB DD 21 02 00   [14] 1304 	ld	ix,#2 ;posicion primer parametro 
   03EF DD 39         [15] 1305 	add ix,sp;
   03F1 CD 3C 74      [17] 1306 	CALL	STARS
                           1307 ;8BP_wrapper/8BP.h:632: }
   03F4 C9            [10] 1308 	ret
                           1309 ;8BP_wrapper/8BP.h:634: void _8BP_stars_5(int star_ini, int num_stars,int color, int dy, int dx)  
                           1310 ;	---------------------------------
                           1311 ; Function _8BP_stars_5
                           1312 ; ---------------------------------
   03F5                    1313 __8BP_stars_5::
                           1314 ;8BP_wrapper/8BP.h:636: _8BP_stars_inv5(dx, dy, color, num_stars,star_ini);
   03F5 C1            [10] 1315 	pop	bc
   03F6 E1            [10] 1316 	pop	hl
   03F7 E5            [11] 1317 	push	hl
   03F8 C5            [11] 1318 	push	bc
   03F9 E5            [11] 1319 	push	hl
   03FA FD 21 06 00   [14] 1320 	ld	iy, #6
   03FE FD 39         [15] 1321 	add	iy, sp
   0400 FD 6E 00      [19] 1322 	ld	l, 0 (iy)
   0403 FD 66 01      [19] 1323 	ld	h, 1 (iy)
   0406 E5            [11] 1324 	push	hl
   0407 FD 23         [10] 1325 	inc	iy
   0409 FD 23         [10] 1326 	inc	iy
   040B FD 6E 00      [19] 1327 	ld	l, 0 (iy)
   040E FD 66 01      [19] 1328 	ld	h, 1 (iy)
   0411 E5            [11] 1329 	push	hl
   0412 FD 23         [10] 1330 	inc	iy
   0414 FD 23         [10] 1331 	inc	iy
   0416 FD 6E 00      [19] 1332 	ld	l, 0 (iy)
   0419 FD 66 01      [19] 1333 	ld	h, 1 (iy)
   041C E5            [11] 1334 	push	hl
   041D FD 23         [10] 1335 	inc	iy
   041F FD 23         [10] 1336 	inc	iy
   0421 FD 6E 00      [19] 1337 	ld	l, 0 (iy)
   0424 FD 66 01      [19] 1338 	ld	h, 1 (iy)
   0427 E5            [11] 1339 	push	hl
   0428 CDrE9r03      [17] 1340 	call	__8BP_stars_inv5
   042B 21 0A 00      [10] 1341 	ld	hl, #10
   042E 39            [11] 1342 	add	hl, sp
   042F F9            [ 6] 1343 	ld	sp, hl
                           1344 ;8BP_wrapper/8BP.h:637: }	
   0430 C9            [10] 1345 	ret
                           1346 ;8BP_wrapper/8BP.h:639: void _8BP_stars() 
                           1347 ;	---------------------------------
                           1348 ; Function _8BP_stars
                           1349 ; ---------------------------------
   0431                    1350 __8BP_stars::
                           1351 ;8BP_wrapper/8BP.h:644: __endasm;	
   0431 3E 00         [ 7] 1352 	ld	a, #0
   0433 CD 3C 74      [17] 1353 	CALL	STARS
                           1354 ;8BP_wrapper/8BP.h:646: }
   0436 C9            [10] 1355 	ret
                           1356 ;8BP_wrapper/8BP.h:648: void _8BP_layout_inv3(char* descriptor, int x,int y)
                           1357 ;	---------------------------------
                           1358 ; Function _8BP_layout_inv3
                           1359 ; ---------------------------------
   0437                    1360 __8BP_layout_inv3::
                           1361 ;8BP_wrapper/8BP.h:655: __endasm;
   0437 3E 03         [ 7] 1362 	ld	a,#3
   0439 DD 21 02 00   [14] 1363 	ld	ix,#2 ;posicion primer parametro 
   043D DD 39         [15] 1364 	add ix,sp;
   043F CD 62 70      [17] 1365 	CALL	LAYOUT
                           1366 ;8BP_wrapper/8BP.h:657: }
   0442 C9            [10] 1367 	ret
                           1368 ;8BP_wrapper/8BP.h:659: void _8BP_layout_3(int y, int x, char* cad)
                           1369 ;	---------------------------------
                           1370 ; Function _8BP_layout_3
                           1371 ; ---------------------------------
   0443                    1372 __8BP_layout_3::
   0443 F5            [11] 1373 	push	af
   0444 3B            [ 6] 1374 	dec	sp
                           1375 ;8BP_wrapper/8BP.h:662: char descriptor[3]={0,0,0};
   0445 21 00 00      [10] 1376 	ld	hl, #0
   0448 39            [11] 1377 	add	hl, sp
   0449 EB            [ 4] 1378 	ex	de, hl
   044A AF            [ 4] 1379 	xor	a, a
   044B 12            [ 7] 1380 	ld	(de), a
   044C 4B            [ 4] 1381 	ld	c, e
   044D 42            [ 4] 1382 	ld	b, d
   044E 03            [ 6] 1383 	inc	bc
   044F AF            [ 4] 1384 	xor	a, a
   0450 02            [ 7] 1385 	ld	(bc), a
   0451 6B            [ 4] 1386 	ld	l, e
   0452 62            [ 4] 1387 	ld	h, d
   0453 23            [ 6] 1388 	inc	hl
   0454 23            [ 6] 1389 	inc	hl
   0455 36 00         [10] 1390 	ld	(hl), #0x00
                           1391 ;8BP_wrapper/8BP.h:663: char len=strlen(cad);
   0457 C5            [11] 1392 	push	bc
   0458 21 0B 00      [10] 1393 	ld	hl, #11
   045B 39            [11] 1394 	add	hl, sp
   045C 4E            [ 7] 1395 	ld	c, (hl)
   045D 23            [ 6] 1396 	inc	hl
   045E 46            [ 7] 1397 	ld	b, (hl)
   045F C5            [11] 1398 	push	bc
   0460 CDr00r00      [17] 1399 	call	_strlen
   0463 F1            [10] 1400 	pop	af
   0464 C1            [10] 1401 	pop	bc
   0465 7D            [ 4] 1402 	ld	a, l
                           1403 ;8BP_wrapper/8BP.h:664: descriptor[0]=len;
   0466 12            [ 7] 1404 	ld	(de), a
                           1405 ;8BP_wrapper/8BP.h:666: p=descriptor+1;
   0467 69            [ 4] 1406 	ld	l, c
   0468 60            [ 4] 1407 	ld	h, b
                           1408 ;8BP_wrapper/8BP.h:667: *p=cad;  
   0469 FD 21 09 00   [14] 1409 	ld	iy, #9
   046D FD 39         [15] 1410 	add	iy, sp
   046F FD 4E 00      [19] 1411 	ld	c, 0 (iy)
   0472 FD 7E 01      [19] 1412 	ld	a, 1 (iy)
   0475 71            [ 7] 1413 	ld	(hl), c
   0476 23            [ 6] 1414 	inc	hl
   0477 77            [ 7] 1415 	ld	(hl), a
                           1416 ;8BP_wrapper/8BP.h:669: _8BP_layout_inv3(descriptor, x,  y );
   0478 FD 21 05 00   [14] 1417 	ld	iy, #5
   047C FD 39         [15] 1418 	add	iy, sp
   047E FD 6E 00      [19] 1419 	ld	l, 0 (iy)
   0481 FD 66 01      [19] 1420 	ld	h, 1 (iy)
   0484 E5            [11] 1421 	push	hl
   0485 FD 23         [10] 1422 	inc	iy
   0487 FD 23         [10] 1423 	inc	iy
   0489 FD 6E 00      [19] 1424 	ld	l, 0 (iy)
   048C FD 66 01      [19] 1425 	ld	h, 1 (iy)
   048F E5            [11] 1426 	push	hl
   0490 D5            [11] 1427 	push	de
   0491 CDr37r04      [17] 1428 	call	__8BP_layout_inv3
   0494 F1            [10] 1429 	pop	af
   0495 F1            [10] 1430 	pop	af
   0496 F1            [10] 1431 	pop	af
                           1432 ;8BP_wrapper/8BP.h:671: }
   0497 F1            [10] 1433 	pop	af
   0498 33            [ 6] 1434 	inc	sp
   0499 C9            [10] 1435 	ret
                           1436 ;8BP_wrapper/8BP.h:673: void _8BP_map2sp_inv2(int x, int y)
                           1437 ;	---------------------------------
                           1438 ; Function _8BP_map2sp_inv2
                           1439 ; ---------------------------------
   049A                    1440 __8BP_map2sp_inv2::
                           1441 ;8BP_wrapper/8BP.h:680: __endasm;	
   049A 3E 02         [ 7] 1442 	ld	a,#2
   049C DD 21 02 00   [14] 1443 	ld	ix,#2 ;posicion primer parametro 
   04A0 DD 39         [15] 1444 	add ix,sp;
   04A2 CD 99 64      [17] 1445 	CALL	MAP2SP
                           1446 ;8BP_wrapper/8BP.h:681: }
   04A5 C9            [10] 1447 	ret
                           1448 ;8BP_wrapper/8BP.h:682: void _8BP_map2sp_2(int y, int x)
                           1449 ;	---------------------------------
                           1450 ; Function _8BP_map2sp_2
                           1451 ; ---------------------------------
   04A6                    1452 __8BP_map2sp_2::
                           1453 ;8BP_wrapper/8BP.h:685: _8BP_map2sp_inv2(x,y);
   04A6 C1            [10] 1454 	pop	bc
   04A7 E1            [10] 1455 	pop	hl
   04A8 E5            [11] 1456 	push	hl
   04A9 C5            [11] 1457 	push	bc
   04AA E5            [11] 1458 	push	hl
   04AB 21 06 00      [10] 1459 	ld	hl, #6
   04AE 39            [11] 1460 	add	hl, sp
   04AF 4E            [ 7] 1461 	ld	c, (hl)
   04B0 23            [ 6] 1462 	inc	hl
   04B1 46            [ 7] 1463 	ld	b, (hl)
   04B2 C5            [11] 1464 	push	bc
   04B3 CDr9Ar04      [17] 1465 	call	__8BP_map2sp_inv2
   04B6 F1            [10] 1466 	pop	af
   04B7 F1            [10] 1467 	pop	af
                           1468 ;8BP_wrapper/8BP.h:686: }
   04B8 C9            [10] 1469 	ret
                           1470 ;8BP_wrapper/8BP.h:688: void _8BP_map2sp_1(unsigned char status)
                           1471 ;	---------------------------------
                           1472 ; Function _8BP_map2sp_1
                           1473 ; ---------------------------------
   04B9                    1474 __8BP_map2sp_1::
                           1475 ;8BP_wrapper/8BP.h:695: __endasm;	
   04B9 3E 01         [ 7] 1476 	ld	a,#1
   04BB DD 21 02 00   [14] 1477 	ld	ix,#2 ;posicion primer parametro 
   04BF DD 39         [15] 1478 	add ix,sp;
   04C1 CD 99 64      [17] 1479 	CALL	MAP2SP
                           1480 ;8BP_wrapper/8BP.h:697: }
   04C4 C9            [10] 1481 	ret
                           1482 ;8BP_wrapper/8BP.h:699: void _8BP_mover_inv3(int dx,int dy,int sp)
                           1483 ;	---------------------------------
                           1484 ; Function _8BP_mover_inv3
                           1485 ; ---------------------------------
   04C5                    1486 __8BP_mover_inv3::
                           1487 ;8BP_wrapper/8BP.h:706: __endasm;	
   04C5 3E 03         [ 7] 1488 	ld	a,#3
   04C7 DD 21 02 00   [14] 1489 	ld	ix,#2 ;posicion primer parametro 
   04CB DD 39         [15] 1490 	add ix,sp;
   04CD CD 3E 75      [17] 1491 	CALL	MOVER
                           1492 ;8BP_wrapper/8BP.h:708: }
   04D0 C9            [10] 1493 	ret
                           1494 ;8BP_wrapper/8BP.h:709: void _8BP_mover_3(int sp, int dy,int dx)
                           1495 ;	---------------------------------
                           1496 ; Function _8BP_mover_3
                           1497 ; ---------------------------------
   04D1                    1498 __8BP_mover_3::
                           1499 ;8BP_wrapper/8BP.h:711: _8BP_mover_inv3(dx,dy,sp);
   04D1 C1            [10] 1500 	pop	bc
   04D2 E1            [10] 1501 	pop	hl
   04D3 E5            [11] 1502 	push	hl
   04D4 C5            [11] 1503 	push	bc
   04D5 E5            [11] 1504 	push	hl
   04D6 FD 21 06 00   [14] 1505 	ld	iy, #6
   04DA FD 39         [15] 1506 	add	iy, sp
   04DC FD 6E 00      [19] 1507 	ld	l, 0 (iy)
   04DF FD 66 01      [19] 1508 	ld	h, 1 (iy)
   04E2 E5            [11] 1509 	push	hl
   04E3 FD 23         [10] 1510 	inc	iy
   04E5 FD 23         [10] 1511 	inc	iy
   04E7 FD 6E 00      [19] 1512 	ld	l, 0 (iy)
   04EA FD 66 01      [19] 1513 	ld	h, 1 (iy)
   04ED E5            [11] 1514 	push	hl
   04EE CDrC5r04      [17] 1515 	call	__8BP_mover_inv3
   04F1 F1            [10] 1516 	pop	af
   04F2 F1            [10] 1517 	pop	af
   04F3 F1            [10] 1518 	pop	af
                           1519 ;8BP_wrapper/8BP.h:712: }
   04F4 C9            [10] 1520 	ret
                           1521 ;8BP_wrapper/8BP.h:713: void _8BP_mover_1(int sp)
                           1522 ;	---------------------------------
                           1523 ; Function _8BP_mover_1
                           1524 ; ---------------------------------
   04F5                    1525 __8BP_mover_1::
                           1526 ;8BP_wrapper/8BP.h:720: __endasm;	
   04F5 3E 01         [ 7] 1527 	ld	a,#1
   04F7 DD 21 02 00   [14] 1528 	ld	ix,#2 ;posicion primer parametro 
   04FB DD 39         [15] 1529 	add ix,sp;
   04FD CD 3E 75      [17] 1530 	CALL	MOVER
                           1531 ;8BP_wrapper/8BP.h:723: }
   0500 C9            [10] 1532 	ret
                           1533 ;8BP_wrapper/8BP.h:724: void _8BP_moverall_inv2(int dx, int dy)
                           1534 ;	---------------------------------
                           1535 ; Function _8BP_moverall_inv2
                           1536 ; ---------------------------------
   0501                    1537 __8BP_moverall_inv2::
                           1538 ;8BP_wrapper/8BP.h:731: __endasm;	
   0501 3E 02         [ 7] 1539 	ld	a,#2
   0503 DD 21 02 00   [14] 1540 	ld	ix,#2 ;posicion primer parametro 
   0507 DD 39         [15] 1541 	add ix,sp;
   0509 CD F0 76      [17] 1542 	CALL	MOVERALL
                           1543 ;8BP_wrapper/8BP.h:733: }
   050C C9            [10] 1544 	ret
                           1545 ;8BP_wrapper/8BP.h:734: void _8BP_moverall_2(int dy, int dx)
                           1546 ;	---------------------------------
                           1547 ; Function _8BP_moverall_2
                           1548 ; ---------------------------------
   050D                    1549 __8BP_moverall_2::
                           1550 ;8BP_wrapper/8BP.h:736: _8BP_moverall_inv2(dx,dy);
   050D C1            [10] 1551 	pop	bc
   050E E1            [10] 1552 	pop	hl
   050F E5            [11] 1553 	push	hl
   0510 C5            [11] 1554 	push	bc
   0511 E5            [11] 1555 	push	hl
   0512 21 06 00      [10] 1556 	ld	hl, #6
   0515 39            [11] 1557 	add	hl, sp
   0516 4E            [ 7] 1558 	ld	c, (hl)
   0517 23            [ 6] 1559 	inc	hl
   0518 46            [ 7] 1560 	ld	b, (hl)
   0519 C5            [11] 1561 	push	bc
   051A CDr01r05      [17] 1562 	call	__8BP_moverall_inv2
   051D F1            [10] 1563 	pop	af
   051E F1            [10] 1564 	pop	af
                           1565 ;8BP_wrapper/8BP.h:737: }
   051F C9            [10] 1566 	ret
                           1567 ;8BP_wrapper/8BP.h:739: void _8BP_moverall()
                           1568 ;	---------------------------------
                           1569 ; Function _8BP_moverall
                           1570 ; ---------------------------------
   0520                    1571 __8BP_moverall::
                           1572 ;8BP_wrapper/8BP.h:744: __endasm;	
   0520 3E 00         [ 7] 1573 	ld	a,#0
   0522 CD F0 76      [17] 1574 	CALL	MOVERALL
                           1575 ;8BP_wrapper/8BP.h:746: }
   0525 C9            [10] 1576 	ret
                           1577 ;8BP_wrapper/8BP.h:748: void _8BP_peek_2(int address, int* dato)
                           1578 ;	---------------------------------
                           1579 ; Function _8BP_peek_2
                           1580 ; ---------------------------------
   0526                    1581 __8BP_peek_2::
                           1582 ;8BP_wrapper/8BP.h:751: p=(int *)address;	
   0526 C1            [10] 1583 	pop	bc
   0527 E1            [10] 1584 	pop	hl
   0528 E5            [11] 1585 	push	hl
   0529 C5            [11] 1586 	push	bc
                           1587 ;8BP_wrapper/8BP.h:752: *dato=*p; //mas facil imposible
   052A FD 21 04 00   [14] 1588 	ld	iy, #4
   052E FD 39         [15] 1589 	add	iy, sp
   0530 FD 4E 00      [19] 1590 	ld	c, 0 (iy)
   0533 FD 46 01      [19] 1591 	ld	b, 1 (iy)
   0536 5E            [ 7] 1592 	ld	e, (hl)
   0537 23            [ 6] 1593 	inc	hl
   0538 56            [ 7] 1594 	ld	d, (hl)
   0539 7B            [ 4] 1595 	ld	a, e
   053A 02            [ 7] 1596 	ld	(bc), a
   053B 03            [ 6] 1597 	inc	bc
   053C 7A            [ 4] 1598 	ld	a, d
   053D 02            [ 7] 1599 	ld	(bc), a
                           1600 ;8BP_wrapper/8BP.h:753: }
   053E C9            [10] 1601 	ret
                           1602 ;8BP_wrapper/8BP.h:755: void _8BP_poke_2(int address,int dato)
                           1603 ;	---------------------------------
                           1604 ; Function _8BP_poke_2
                           1605 ; ---------------------------------
   053F                    1606 __8BP_poke_2::
                           1607 ;8BP_wrapper/8BP.h:758: p=(int *)address;
   053F D1            [10] 1608 	pop	de
   0540 C1            [10] 1609 	pop	bc
   0541 C5            [11] 1610 	push	bc
   0542 D5            [11] 1611 	push	de
                           1612 ;8BP_wrapper/8BP.h:759: *p=dato; //mas facil imposible
   0543 FD 21 04 00   [14] 1613 	ld	iy, #4
   0547 FD 39         [15] 1614 	add	iy, sp
   0549 FD 7E 00      [19] 1615 	ld	a, 0 (iy)
   054C 02            [ 7] 1616 	ld	(bc), a
   054D 03            [ 6] 1617 	inc	bc
   054E FD 7E 01      [19] 1618 	ld	a, 1 (iy)
   0551 02            [ 7] 1619 	ld	(bc), a
                           1620 ;8BP_wrapper/8BP.h:760: }
   0552 C9            [10] 1621 	ret
                           1622 ;8BP_wrapper/8BP.h:763: void _8BP_rink_1(int step)
                           1623 ;	---------------------------------
                           1624 ; Function _8BP_rink_1
                           1625 ; ---------------------------------
   0553                    1626 __8BP_rink_1::
                           1627 ;8BP_wrapper/8BP.h:770: __endasm;	
   0553 3E 01         [ 7] 1628 	ld	a,#1
   0555 DD 21 02 00   [14] 1629 	ld	ix,#2 ;posicion primer parametro 
   0559 DD 39         [15] 1630 	add ix,sp;
   055B CD 30 76      [17] 1631 	CALL	RINK
                           1632 ;8BP_wrapper/8BP.h:771: }
   055E C9            [10] 1633 	ret
                           1634 ;8BP_wrapper/8BP.h:775: void _8BP_rink_N(int num_params,int* ink_list)
                           1635 ;	---------------------------------
                           1636 ; Function _8BP_rink_N
                           1637 ; ---------------------------------
   055F                    1638 __8BP_rink_N::
   055F F5            [11] 1639 	push	af
                           1640 ;8BP_wrapper/8BP.h:781: _8BP_rink_N_color1=num_params;
   0560 FD 21 04 00   [14] 1641 	ld	iy, #4
   0564 FD 39         [15] 1642 	add	iy, sp
   0566 FD 7E 00      [19] 1643 	ld	a, 0 (iy)
   0569 32r00r00      [13] 1644 	ld	(__8BP_rink_N_color1+0), a
                           1645 ;8BP_wrapper/8BP.h:784: for (i=0;i<num_params;i++)
   056C 01 00 00      [10] 1646 	ld	bc, #0x0000
   056F                    1647 00103$:
   056F 21 04 00      [10] 1648 	ld	hl, #4
   0572 39            [11] 1649 	add	hl, sp
   0573 79            [ 4] 1650 	ld	a, c
   0574 96            [ 7] 1651 	sub	a, (hl)
   0575 78            [ 4] 1652 	ld	a, b
   0576 23            [ 6] 1653 	inc	hl
   0577 9E            [ 7] 1654 	sbc	a, (hl)
   0578 E2r7Dr05      [10] 1655 	jp	PO, 00118$
   057B EE 80         [ 7] 1656 	xor	a, #0x80
   057D                    1657 00118$:
   057D F2rB4r05      [10] 1658 	jp	P, 00101$
                           1659 ;8BP_wrapper/8BP.h:785: _8BP_rink_N_inverse_list[i]=ink_list[num_params-i-1];
   0580 69            [ 4] 1660 	ld	l, c
   0581 60            [ 4] 1661 	ld	h, b
   0582 29            [11] 1662 	add	hl, hl
   0583 11r01r00      [10] 1663 	ld	de, #__8BP_rink_N_inverse_list
   0586 19            [11] 1664 	add	hl, de
   0587 E3            [19] 1665 	ex	(sp), hl
   0588 FD 21 04 00   [14] 1666 	ld	iy, #4
   058C FD 39         [15] 1667 	add	iy, sp
   058E FD 7E 00      [19] 1668 	ld	a, 0 (iy)
   0591 91            [ 4] 1669 	sub	a, c
   0592 5F            [ 4] 1670 	ld	e, a
   0593 FD 7E 01      [19] 1671 	ld	a, 1 (iy)
   0596 98            [ 4] 1672 	sbc	a, b
   0597 57            [ 4] 1673 	ld	d, a
   0598 1B            [ 6] 1674 	dec	de
   0599 CB 23         [ 8] 1675 	sla	e
   059B CB 12         [ 8] 1676 	rl	d
   059D 7B            [ 4] 1677 	ld	a, e
   059E 21 06 00      [10] 1678 	ld	hl, #6
   05A1 39            [11] 1679 	add	hl, sp
   05A2 86            [ 7] 1680 	add	a, (hl)
   05A3 5F            [ 4] 1681 	ld	e, a
   05A4 7A            [ 4] 1682 	ld	a, d
   05A5 23            [ 6] 1683 	inc	hl
   05A6 8E            [ 7] 1684 	adc	a, (hl)
   05A7 57            [ 4] 1685 	ld	d, a
   05A8 EB            [ 4] 1686 	ex	de,hl
   05A9 5E            [ 7] 1687 	ld	e, (hl)
   05AA 23            [ 6] 1688 	inc	hl
   05AB 56            [ 7] 1689 	ld	d, (hl)
   05AC E1            [10] 1690 	pop	hl
   05AD E5            [11] 1691 	push	hl
   05AE 73            [ 7] 1692 	ld	(hl), e
   05AF 23            [ 6] 1693 	inc	hl
   05B0 72            [ 7] 1694 	ld	(hl), d
                           1695 ;8BP_wrapper/8BP.h:784: for (i=0;i<num_params;i++)
   05B1 03            [ 6] 1696 	inc	bc
   05B2 18 BB         [12] 1697 	jr	00103$
   05B4                    1698 00101$:
                           1699 ;8BP_wrapper/8BP.h:794: __endasm;	
   05B4 21r00r00      [10] 1700 	ld	hl, #__8BP_rink_N_color1;
   05B7 7E            [ 7] 1701 	ld	a,(hl)
   05B8 DD 21r01r00   [14] 1702 	ld	ix, #__8BP_rink_N_inverse_list;
   05BC CD 30 76      [17] 1703 	CALL	RINK
                           1704 ;8BP_wrapper/8BP.h:795: }
   05BF F1            [10] 1705 	pop	af
   05C0 C9            [10] 1706 	ret
                           1707 ;8BP_wrapper/8BP.h:797: void _8BP_umap_inv6(int x_fin,int x_ini, int y_fin, int y_ini, int map_fin, int map_ini)
                           1708 ;	---------------------------------
                           1709 ; Function _8BP_umap_inv6
                           1710 ; ---------------------------------
   05C1                    1711 __8BP_umap_inv6::
                           1712 ;8BP_wrapper/8BP.h:804: __endasm;	
   05C1 3E 06         [ 7] 1713 	ld	a,#6
   05C3 DD 21 02 00   [14] 1714 	ld	ix,#2 ;posicion primer parametro 
   05C7 DD 39         [15] 1715 	add ix,sp;
   05C9 CD 2F 5F      [17] 1716 	CALL	UMAP
                           1717 ;8BP_wrapper/8BP.h:807: }
   05CC C9            [10] 1718 	ret
                           1719 ;8BP_wrapper/8BP.h:809: void _8BP_umap_6(int map_ini, int map_fin, int y_ini, int y_fin, int x_ini, int x_fin)
                           1720 ;	---------------------------------
                           1721 ; Function _8BP_umap_6
                           1722 ; ---------------------------------
   05CD                    1723 __8BP_umap_6::
                           1724 ;8BP_wrapper/8BP.h:811: _8BP_umap_inv6(x_fin,x_ini,y_fin,y_ini, map_fin, map_ini);
   05CD C1            [10] 1725 	pop	bc
   05CE E1            [10] 1726 	pop	hl
   05CF E5            [11] 1727 	push	hl
   05D0 C5            [11] 1728 	push	bc
   05D1 E5            [11] 1729 	push	hl
   05D2 FD 21 06 00   [14] 1730 	ld	iy, #6
   05D6 FD 39         [15] 1731 	add	iy, sp
   05D8 FD 6E 00      [19] 1732 	ld	l, 0 (iy)
   05DB FD 66 01      [19] 1733 	ld	h, 1 (iy)
   05DE E5            [11] 1734 	push	hl
   05DF FD 23         [10] 1735 	inc	iy
   05E1 FD 23         [10] 1736 	inc	iy
   05E3 FD 6E 00      [19] 1737 	ld	l, 0 (iy)
   05E6 FD 66 01      [19] 1738 	ld	h, 1 (iy)
   05E9 E5            [11] 1739 	push	hl
   05EA FD 23         [10] 1740 	inc	iy
   05EC FD 23         [10] 1741 	inc	iy
   05EE FD 6E 00      [19] 1742 	ld	l, 0 (iy)
   05F1 FD 66 01      [19] 1743 	ld	h, 1 (iy)
   05F4 E5            [11] 1744 	push	hl
   05F5 FD 23         [10] 1745 	inc	iy
   05F7 FD 23         [10] 1746 	inc	iy
   05F9 FD 6E 00      [19] 1747 	ld	l, 0 (iy)
   05FC FD 66 01      [19] 1748 	ld	h, 1 (iy)
   05FF E5            [11] 1749 	push	hl
   0600 FD 23         [10] 1750 	inc	iy
   0602 FD 23         [10] 1751 	inc	iy
   0604 FD 6E 00      [19] 1752 	ld	l, 0 (iy)
   0607 FD 66 01      [19] 1753 	ld	h, 1 (iy)
   060A E5            [11] 1754 	push	hl
   060B CDrC1r05      [17] 1755 	call	__8BP_umap_inv6
   060E 21 0C 00      [10] 1756 	ld	hl, #12
   0611 39            [11] 1757 	add	hl, sp
   0612 F9            [ 6] 1758 	ld	sp, hl
                           1759 ;8BP_wrapper/8BP.h:813: }
   0613 C9            [10] 1760 	ret
                           1761 ;mini_BASIC/minibasic.h:55: unsigned int _basic_time()
                           1762 ;	---------------------------------
                           1763 ; Function _basic_time
                           1764 ; ---------------------------------
   0614                    1765 __basic_time::
                           1766 ;mini_BASIC/minibasic.h:60: __endasm;
   0614 CD 0D BD      [17] 1767 	call	0xbd0d
   0617 C9            [10] 1768 	ret
                           1769 ;mini_BASIC/minibasic.h:62: return 0;
   0618 21 00 00      [10] 1770 	ld	hl, #0x0000
                           1771 ;mini_BASIC/minibasic.h:64: }
   061B C9            [10] 1772 	ret
                           1773 ;mini_BASIC/minibasic.h:67: unsigned int _basic_rnd(int max)
                           1774 ;	---------------------------------
                           1775 ; Function _basic_rnd
                           1776 ; ---------------------------------
   061C                    1777 __basic_rnd::
                           1778 ;mini_BASIC/minibasic.h:80: __endasm;
   061C CD 0D BD      [17] 1779 	call	0xbd0d
   061F 44            [ 4] 1780 	ld	b,h
   0620 4D            [ 4] 1781 	ld	c, l
   0621 21r00r00      [10] 1782 	ld	hl,#__basic_rnd_x; con el # es direccion, el _ es imprescindible en cualquier caso
   0624 71            [ 7] 1783 	ld	(hl),c
   0625 23            [ 6] 1784 	inc	hl
   0626 70            [ 7] 1785 	ld	(hl),b
                           1786 ;mini_BASIC/minibasic.h:82: return _basic_rnd_x % max;	
   0627 D1            [10] 1787 	pop	de
   0628 C1            [10] 1788 	pop	bc
   0629 C5            [11] 1789 	push	bc
   062A D5            [11] 1790 	push	de
   062B C5            [11] 1791 	push	bc
   062C 2Ar00r00      [16] 1792 	ld	hl, (__basic_rnd_x)
   062F E5            [11] 1793 	push	hl
   0630 CDr00r00      [17] 1794 	call	__moduint
   0633 F1            [10] 1795 	pop	af
   0634 F1            [10] 1796 	pop	af
                           1797 ;mini_BASIC/minibasic.h:86: }
   0635 C9            [10] 1798 	ret
                           1799 ;mini_BASIC/minibasic.h:88: void _basic_border(char color) 
                           1800 ;	---------------------------------
                           1801 ; Function _basic_border
                           1802 ; ---------------------------------
   0636                    1803 __basic_border::
                           1804 ;mini_BASIC/minibasic.h:101: __endasm;	
                           1805 ;	recoge primer parametro
                           1806 ;------------------------
   0636 DD 21 02 00   [14] 1807 	ld	ix,#2; posicion primer parametro 
   063A DD 39         [15] 1808 	add ix,sp;
   063C DD 7E 00      [19] 1809 	ld	a,(ix)
   063F 47            [ 4] 1810 	ld	b, a
   0640 4F            [ 4] 1811 	ld	c, a
   0641 CD 38 BC      [17] 1812 	call	0xbc38
                           1813 ;mini_BASIC/minibasic.h:102: }
   0644 C9            [10] 1814 	ret
                           1815 ;mini_BASIC/minibasic.h:106: void DisplayChar( char c )
                           1816 ;	---------------------------------
                           1817 ; Function DisplayChar
                           1818 ; ---------------------------------
   0645                    1819 _DisplayChar::
                           1820 ;mini_BASIC/minibasic.h:118: __endasm;
   0645 21 02 00      [10] 1821 	ld	hl,#2; recoge primer parametro
   0648 39            [11] 1822 	add	hl,sp
   0649 7E            [ 7] 1823 	ld	a,(hl)
   064A CD 5A BB      [17] 1824 	call	0xbb5a
                           1825 ;mini_BASIC/minibasic.h:119: }
   064D C9            [10] 1826 	ret
                           1827 ;mini_BASIC/minibasic.h:122: void _basic_print(char *cad)
                           1828 ;	---------------------------------
                           1829 ; Function _basic_print
                           1830 ; ---------------------------------
   064E                    1831 __basic_print::
                           1832 ;mini_BASIC/minibasic.h:125: textPtr=cad;
   064E D1            [10] 1833 	pop	de
   064F C1            [10] 1834 	pop	bc
   0650 C5            [11] 1835 	push	bc
   0651 D5            [11] 1836 	push	de
                           1837 ;mini_BASIC/minibasic.h:127: while( *textPtr != 0 )
   0652                    1838 00101$:
   0652 0A            [ 7] 1839 	ld	a, (bc)
   0653 B7            [ 4] 1840 	or	a, a
   0654 C8            [11] 1841 	ret	Z
                           1842 ;mini_BASIC/minibasic.h:129: DisplayChar( *textPtr);
   0655 C5            [11] 1843 	push	bc
   0656 F5            [11] 1844 	push	af
   0657 33            [ 6] 1845 	inc	sp
   0658 CDr45r06      [17] 1846 	call	_DisplayChar
   065B 33            [ 6] 1847 	inc	sp
   065C C1            [10] 1848 	pop	bc
                           1849 ;mini_BASIC/minibasic.h:130: textPtr++;
   065D 03            [ 6] 1850 	inc	bc
                           1851 ;mini_BASIC/minibasic.h:132: } 
   065E 18 F2         [12] 1852 	jr	00101$
                           1853 ;mini_BASIC/minibasic.h:134: char _basic_inkey(char key) __naked 
                           1854 ;	---------------------------------
                           1855 ; Function _basic_inkey
                           1856 ; ---------------------------------
   0660                    1857 __basic_inkey::
                           1858 ;mini_BASIC/minibasic.h:153: __endasm;
   0660 DD 21 02 00   [14] 1859 	ld	ix,#2; posicion primer parametro 
   0664 DD 39         [15] 1860 	add ix,sp;
   0666 DD 7E 00      [19] 1861 	ld	a, (ix)
   0669 CD 1E BB      [17] 1862 	CALL	0xBB1E
   066C 20 03         [12] 1863 	jr	nz, pressed
   066E 2E 01         [ 7] 1864 	ld	l,#1
   0670 C9            [10] 1865 	ret
   0671                    1866 	  pressed:
   0671 2E 00         [ 7] 1867 	ld	l,#0
   0673 C9            [10] 1868 	ret
                           1869 ;mini_BASIC/minibasic.h:155: return 0;
   0674 2E 00         [ 7] 1870 	ld	l, #0x00
                           1871 ;mini_BASIC/minibasic.h:158: }
                           1872 ;mini_BASIC/minibasic.h:166: char* reverse(char *buffer, int i, int j)
                           1873 ;	---------------------------------
                           1874 ; Function reverse
                           1875 ; ---------------------------------
   0676                    1876 _reverse::
   0676 F5            [11] 1877 	push	af
   0677 F5            [11] 1878 	push	af
   0678 3B            [ 6] 1879 	dec	sp
                           1880 ;mini_BASIC/minibasic.h:168: while (i < j)
   0679 FD 21 0B 00   [14] 1881 	ld	iy, #11
   067D FD 39         [15] 1882 	add	iy, sp
   067F FD 4E 00      [19] 1883 	ld	c, 0 (iy)
   0682 FD 46 01      [19] 1884 	ld	b, 1 (iy)
   0685 FD 2B         [10] 1885 	dec	iy
   0687 FD 2B         [10] 1886 	dec	iy
   0689 FD 7E 00      [19] 1887 	ld	a, 0 (iy)
   068C FD 21 03 00   [14] 1888 	ld	iy, #3
   0690 FD 39         [15] 1889 	add	iy, sp
   0692 FD 77 00      [19] 1890 	ld	0 (iy), a
   0695 21 0A 00      [10] 1891 	ld	hl, #9+1
   0698 39            [11] 1892 	add	hl, sp
   0699 7E            [ 7] 1893 	ld	a, (hl)
   069A FD 21 03 00   [14] 1894 	ld	iy, #3
   069E FD 39         [15] 1895 	add	iy, sp
   06A0 FD 77 01      [19] 1896 	ld	1 (iy), a
   06A3                    1897 00101$:
   06A3 FD 21 03 00   [14] 1898 	ld	iy, #3
   06A7 FD 39         [15] 1899 	add	iy, sp
   06A9 FD 7E 00      [19] 1900 	ld	a, 0 (iy)
   06AC 91            [ 4] 1901 	sub	a, c
   06AD FD 7E 01      [19] 1902 	ld	a, 1 (iy)
   06B0 98            [ 4] 1903 	sbc	a, b
   06B1 E2rB6r06      [10] 1904 	jp	PO, 00118$
   06B4 EE 80         [ 7] 1905 	xor	a, #0x80
   06B6                    1906 00118$:
   06B6 F2rFCr06      [10] 1907 	jp	P, 00103$
                           1908 ;mini_BASIC/minibasic.h:169: swap(&buffer[i++], &buffer[j--]);
   06B9 FD 21 07 00   [14] 1909 	ld	iy, #7
   06BD FD 39         [15] 1910 	add	iy, sp
   06BF FD 7E 00      [19] 1911 	ld	a, 0 (iy)
   06C2 81            [ 4] 1912 	add	a, c
   06C3 5F            [ 4] 1913 	ld	e, a
   06C4 FD 7E 01      [19] 1914 	ld	a, 1 (iy)
   06C7 88            [ 4] 1915 	adc	a, b
   06C8 57            [ 4] 1916 	ld	d, a
   06C9 0B            [ 6] 1917 	dec	bc
   06CA 33            [ 6] 1918 	inc	sp
   06CB 33            [ 6] 1919 	inc	sp
   06CC D5            [11] 1920 	push	de
   06CD 21 03 00      [10] 1921 	ld	hl, #3
   06D0 39            [11] 1922 	add	hl, sp
   06D1 FD 7E 00      [19] 1923 	ld	a, 0 (iy)
   06D4 86            [ 7] 1924 	add	a, (hl)
   06D5 5F            [ 4] 1925 	ld	e, a
   06D6 FD 7E 01      [19] 1926 	ld	a, 1 (iy)
   06D9 23            [ 6] 1927 	inc	hl
   06DA 8E            [ 7] 1928 	adc	a, (hl)
   06DB 57            [ 4] 1929 	ld	d, a
   06DC FD 21 03 00   [14] 1930 	ld	iy, #3
   06E0 FD 39         [15] 1931 	add	iy, sp
   06E2 FD 34 00      [23] 1932 	inc	0 (iy)
   06E5 20 03         [12] 1933 	jr	NZ,00119$
   06E7 FD 34 01      [23] 1934 	inc	1 (iy)
   06EA                    1935 00119$:
                           1936 ;mini_BASIC/minibasic.h:162: char t = *x; *x = *y; *y = t;
   06EA 1A            [ 7] 1937 	ld	a, (de)
   06EB FD 2B         [10] 1938 	dec	iy
   06ED FD 77 00      [19] 1939 	ld	0 (iy), a
   06F0 E1            [10] 1940 	pop	hl
   06F1 E5            [11] 1941 	push	hl
   06F2 7E            [ 7] 1942 	ld	a, (hl)
   06F3 12            [ 7] 1943 	ld	(de), a
   06F4 E1            [10] 1944 	pop	hl
   06F5 E5            [11] 1945 	push	hl
   06F6 FD 7E 00      [19] 1946 	ld	a, 0 (iy)
   06F9 77            [ 7] 1947 	ld	(hl), a
                           1948 ;mini_BASIC/minibasic.h:169: swap(&buffer[i++], &buffer[j--]);
   06FA 18 A7         [12] 1949 	jr	00101$
   06FC                    1950 00103$:
                           1951 ;mini_BASIC/minibasic.h:171: return buffer;
   06FC 21 07 00      [10] 1952 	ld	hl, #7
   06FF 39            [11] 1953 	add	hl, sp
   0700 7E            [ 7] 1954 	ld	a, (hl)
   0701 23            [ 6] 1955 	inc	hl
   0702 66            [ 7] 1956 	ld	h, (hl)
   0703 6F            [ 4] 1957 	ld	l, a
                           1958 ;mini_BASIC/minibasic.h:172: }
   0704 F1            [10] 1959 	pop	af
   0705 F1            [10] 1960 	pop	af
   0706 33            [ 6] 1961 	inc	sp
   0707 C9            [10] 1962 	ret
                           1963 ;mini_BASIC/minibasic.h:174: char* _basic_str(int value) 
                           1964 ;	---------------------------------
                           1965 ; Function _basic_str
                           1966 ; ---------------------------------
   0708                    1967 __basic_str::
   0708 F5            [11] 1968 	push	af
   0709 F5            [11] 1969 	push	af
                           1970 ;mini_BASIC/minibasic.h:179: int n = abs(value);
   070A 21 06 00      [10] 1971 	ld	hl, #6
   070D 39            [11] 1972 	add	hl, sp
   070E 4E            [ 7] 1973 	ld	c, (hl)
   070F 23            [ 6] 1974 	inc	hl
   0710 46            [ 7] 1975 	ld	b, (hl)
   0711 C5            [11] 1976 	push	bc
   0712 CDr00r00      [17] 1977 	call	_abs
   0715 F1            [10] 1978 	pop	af
   0716 4D            [ 4] 1979 	ld	c, l
   0717 44            [ 4] 1980 	ld	b, h
                           1981 ;mini_BASIC/minibasic.h:182: while (n)
   0718 11 00 00      [10] 1982 	ld	de, #0x0000
   071B                    1983 00101$:
                           1984 ;mini_BASIC/minibasic.h:186: buffer[i++] = 48 + r ;
   071B 21 01 00      [10] 1985 	ld	hl, #0x0001
   071E 19            [11] 1986 	add	hl, de
   071F E3            [19] 1987 	ex	(sp), hl
   0720 21r23r00      [10] 1988 	ld	hl, #__basic_str_buffer_65536_273
   0723 19            [11] 1989 	add	hl, de
                           1990 ;mini_BASIC/minibasic.h:182: while (n)
   0724 78            [ 4] 1991 	ld	a, b
   0725 B1            [ 4] 1992 	or	a, c
   0726 28 33         [12] 1993 	jr	Z,00114$
                           1994 ;mini_BASIC/minibasic.h:184: int r = n % 10;
   0728 E5            [11] 1995 	push	hl
   0729 C5            [11] 1996 	push	bc
   072A 11 0A 00      [10] 1997 	ld	de, #0x000a
   072D D5            [11] 1998 	push	de
   072E C5            [11] 1999 	push	bc
   072F CDr00r00      [17] 2000 	call	__modsint
   0732 F1            [10] 2001 	pop	af
   0733 F1            [10] 2002 	pop	af
   0734 EB            [ 4] 2003 	ex	de,hl
   0735 C1            [10] 2004 	pop	bc
   0736 E1            [10] 2005 	pop	hl
   0737 FD 21 02 00   [14] 2006 	ld	iy, #2
   073B FD 39         [15] 2007 	add	iy, sp
   073D FD 73 00      [19] 2008 	ld	0 (iy), e
   0740 FD 72 01      [19] 2009 	ld	1 (iy), d
                           2010 ;mini_BASIC/minibasic.h:186: buffer[i++] = 48 + r ;
   0743 D1            [10] 2011 	pop	de
   0744 D5            [11] 2012 	push	de
   0745 FD 7E 00      [19] 2013 	ld	a, 0 (iy)
   0748 C6 30         [ 7] 2014 	add	a, #0x30
   074A 77            [ 7] 2015 	ld	(hl), a
                           2016 ;mini_BASIC/minibasic.h:188: n = n / 10;
   074B D5            [11] 2017 	push	de
   074C 21 0A 00      [10] 2018 	ld	hl, #0x000a
   074F E5            [11] 2019 	push	hl
   0750 C5            [11] 2020 	push	bc
   0751 CDr00r00      [17] 2021 	call	__divsint
   0754 F1            [10] 2022 	pop	af
   0755 F1            [10] 2023 	pop	af
   0756 D1            [10] 2024 	pop	de
   0757 4D            [ 4] 2025 	ld	c, l
   0758 44            [ 4] 2026 	ld	b, h
   0759 18 C0         [12] 2027 	jr	00101$
   075B                    2028 00114$:
   075B 4B            [ 4] 2029 	ld	c, e
                           2030 ;mini_BASIC/minibasic.h:192: if (i == 0)
   075C 7A            [ 4] 2031 	ld	a,d
   075D 47            [ 4] 2032 	ld	b,a
   075E B3            [ 4] 2033 	or	a, e
   075F 20 04         [12] 2034 	jr	NZ,00105$
                           2035 ;mini_BASIC/minibasic.h:193: buffer[i++] = '0';
   0761 C1            [10] 2036 	pop	bc
   0762 C5            [11] 2037 	push	bc
   0763 36 30         [10] 2038 	ld	(hl), #0x30
   0765                    2039 00105$:
                           2040 ;mini_BASIC/minibasic.h:197: if (value < 0 )
   0765 21 07 00      [10] 2041 	ld	hl, #6+1
   0768 39            [11] 2042 	add	hl, sp
   0769 CB 7E         [12] 2043 	bit	7, (hl)
   076B 28 09         [12] 2044 	jr	Z,00107$
                           2045 ;mini_BASIC/minibasic.h:198: buffer[i++] = '-';
   076D 59            [ 4] 2046 	ld	e, c
   076E 50            [ 4] 2047 	ld	d, b
   076F 03            [ 6] 2048 	inc	bc
   0770 21r23r00      [10] 2049 	ld	hl, #__basic_str_buffer_65536_273
   0773 19            [11] 2050 	add	hl, de
   0774 36 2D         [10] 2051 	ld	(hl), #0x2d
   0776                    2052 00107$:
                           2053 ;mini_BASIC/minibasic.h:200: buffer[i] = 0; // null terminate string
   0776 21r23r00      [10] 2054 	ld	hl, #__basic_str_buffer_65536_273
   0779 09            [11] 2055 	add	hl, bc
   077A 36 00         [10] 2056 	ld	(hl), #0x00
                           2057 ;mini_BASIC/minibasic.h:203: return reverse(buffer, 0, i - 1);
   077C 0B            [ 6] 2058 	dec	bc
   077D C5            [11] 2059 	push	bc
   077E 21 00 00      [10] 2060 	ld	hl, #0x0000
   0781 E5            [11] 2061 	push	hl
   0782 21r23r00      [10] 2062 	ld	hl, #__basic_str_buffer_65536_273
   0785 E5            [11] 2063 	push	hl
   0786 CDr76r06      [17] 2064 	call	_reverse
   0789 F1            [10] 2065 	pop	af
   078A F1            [10] 2066 	pop	af
   078B F1            [10] 2067 	pop	af
                           2068 ;mini_BASIC/minibasic.h:204: }
   078C F1            [10] 2069 	pop	af
   078D F1            [10] 2070 	pop	af
   078E C9            [10] 2071 	ret
                           2072 ;mini_BASIC/minibasic.h:206: void _basic_call (unsigned int address) 
                           2073 ;	---------------------------------
                           2074 ; Function _basic_call
                           2075 ; ---------------------------------
   078F                    2076 __basic_call::
                           2077 ;mini_BASIC/minibasic.h:216: __endasm;	
   078F DD 21 02 00   [14] 2078 	ld	ix,#2; posicion primer parametro 
   0793 DD 39         [15] 2079 	add ix,sp;
   0795 DD 6E 00      [19] 2080 	ld	l, (ix)
   0798 DD 66 01      [19] 2081 	ld	h, 1(ix)
   079B 22r9Fr07      [16] 2082 	ld	(dir+1),hl
   079E                    2083 	  dir:
   079E CD 19 BD      [17] 2084 	CALL 0xbd19 ; la direccion 0xbd19 se machaca con la que venga
                           2085 ;mini_BASIC/minibasic.h:218: }
   07A1 C9            [10] 2086 	ret
                           2087 ;mini_BASIC/minibasic.h:220: void _basic_locate (unsigned int x, unsigned int y) 
                           2088 ;	---------------------------------
                           2089 ; Function _basic_locate
                           2090 ; ---------------------------------
   07A2                    2091 __basic_locate::
                           2092 ;mini_BASIC/minibasic.h:228: __endasm;	
   07A2 DD 21 02 00   [14] 2093 	ld	ix,#2; posicion primer parametro 
   07A6 DD 39         [15] 2094 	add ix,sp;
   07A8 DD 6E 02      [19] 2095 	ld	l, 2(ix)
   07AB DD 66 00      [19] 2096 	ld	h, (ix)
   07AE CD 75 BB      [17] 2097 	call	0xbb75
                           2098 ;mini_BASIC/minibasic.h:230: }
   07B1 C9            [10] 2099 	ret
                           2100 ;mini_BASIC/minibasic.h:253: void _basic_sound(unsigned char nChannelStatus, int nTonePeriod, int nDuration, unsigned char nVolume, char nVolumeEnvelope, char nToneEnvelope, unsigned char nNoisePeriod) 
                           2101 ;	---------------------------------
                           2102 ; Function _basic_sound
                           2103 ; ---------------------------------
   07B2                    2104 __basic_sound::
                           2105 ;mini_BASIC/minibasic.h:331: __endasm;
   07B2 DD 21 02 00   [14] 2106 	ld	ix,#2;
   07B6 DD 39         [15] 2107 	add	ix,sp;
   07B8 21 F1 F7      [10] 2108 	LD	HL, #0xf7f1
   07BB DD 7E 00      [19] 2109 	LD	A, (IX) ;nChannelStatus
   07BE 77            [ 7] 2110 	LD	(HL), A
   07BF 23            [ 6] 2111 	INC	HL
   07C0 DD 7E 06      [19] 2112 	LD	A,6 (IX) ;nVolumeEnvelope
   07C3 77            [ 7] 2113 	LD	(HL), A
   07C4 23            [ 6] 2114 	INC	HL
   07C5 DD 7E 07      [19] 2115 	LD	A, 7 (IX) ;nToneEnvelope
   07C8 77            [ 7] 2116 	LD	(HL), A
   07C9 23            [ 6] 2117 	INC	HL
   07CA DD 7E 01      [19] 2118 	LD	A, 1 (IX) ;nTonePeriod
   07CD 77            [ 7] 2119 	LD	(HL), A
   07CE 23            [ 6] 2120 	INC	HL
   07CF DD 7E 02      [19] 2121 	LD	A, 2 (IX) ;nTonePeriod
   07D2 77            [ 7] 2122 	LD	(HL), A
   07D3 23            [ 6] 2123 	INC	HL
   07D4 DD 7E 08      [19] 2124 	LD	A, 8 (IX) ;nNoisePeriod
   07D7 77            [ 7] 2125 	LD	(HL), A
   07D8 23            [ 6] 2126 	INC	HL
   07D9 DD 7E 05      [19] 2127 	LD	A, 5 (IX) ;nVolume
   07DC 77            [ 7] 2128 	LD	(HL), A
   07DD 23            [ 6] 2129 	INC	HL
   07DE DD 7E 03      [19] 2130 	LD	A, 3 (IX) ;nDuration
   07E1 77            [ 7] 2131 	LD	(HL), A
   07E2 23            [ 6] 2132 	INC	HL
   07E3 DD 7E 04      [19] 2133 	LD	A, 4 (IX) ;nDuration
   07E6 77            [ 7] 2134 	LD	(HL), A
   07E7 23            [ 6] 2135 	INC	HL
   07E8 21 F1 F7      [10] 2136 	LD	HL, #0xf7f1
   07EB CD AA BC      [17] 2137 	CALL	#0xBCAA ;SOUND QUEUE
                           2138 ;mini_BASIC/minibasic.h:334: }
   07EE C9            [10] 2139 	ret
                           2140 ;mini_BASIC/minibasic.h:336: void _basic_ink (char ink1, char ink2)
                           2141 ;	---------------------------------
                           2142 ; Function _basic_ink
                           2143 ; ---------------------------------
   07EF                    2144 __basic_ink::
                           2145 ;mini_BASIC/minibasic.h:348: __endasm;	
   07EF DD 21 02 00   [14] 2146 	ld	ix,#2; posicion primer parametro 
   07F3 DD 39         [15] 2147 	add ix,sp;
   07F5 DD 7E 00      [19] 2148 	ld	a, (ix)
   07F8 DD 46 01      [19] 2149 	ld	b, 1(ix)
   07FB 48            [ 4] 2150 	ld	c,b
   07FC CD 32 BC      [17] 2151 	call	0xbc32
                           2152 ;mini_BASIC/minibasic.h:349: }
   07FF C9            [10] 2153 	ret
                           2154 ;mini_BASIC/minibasic.h:351: char _basic_peek(unsigned int address)
                           2155 ;	---------------------------------
                           2156 ; Function _basic_peek
                           2157 ; ---------------------------------
   0800                    2158 __basic_peek::
                           2159 ;mini_BASIC/minibasic.h:362: __endasm;
   0800 DD 21 02 00   [14] 2160 	ld	ix,#2; posicion primer parametro 
   0804 DD 39         [15] 2161 	add ix,sp;
   0806 DD 6E 00      [19] 2162 	ld	l, (ix)
   0809 DD 66 01      [19] 2163 	ld	h,1(ix)
   080C 7E            [ 7] 2164 	ld	a,(hl)
   080D 6F            [ 4] 2165 	ld	l,a
   080E C9            [10] 2166 	ret
                           2167 ;mini_BASIC/minibasic.h:364: return 0;
   080F 2E 00         [ 7] 2168 	ld	l, #0x00
                           2169 ;mini_BASIC/minibasic.h:366: }
   0811 C9            [10] 2170 	ret
                           2171 ;mini_BASIC/minibasic.h:368: void _basic_poke(unsigned int address, unsigned char data)
                           2172 ;	---------------------------------
                           2173 ; Function _basic_poke
                           2174 ; ---------------------------------
   0812                    2175 __basic_poke::
                           2176 ;mini_BASIC/minibasic.h:382: __endasm;
   0812 DD 21 02 00   [14] 2177 	ld	ix,#2; posicion primer parametro 
   0816 DD 39         [15] 2178 	add ix,sp;
   0818 DD 6E 00      [19] 2179 	ld	l, (ix)
   081B DD 66 01      [19] 2180 	ld	h,1(ix)
   081E DD 7E 02      [19] 2181 	ld	a,2(ix)
   0821 77            [ 7] 2182 	ld	(hl),a
   0822 C9            [10] 2183 	ret
                           2184 ;mini_BASIC/minibasic.h:383: }
   0823 C9            [10] 2185 	ret
                           2186 ;mini_BASIC/minibasic.h:385: void _basic_pen_txt(char ink)
                           2187 ;	---------------------------------
                           2188 ; Function _basic_pen_txt
                           2189 ; ---------------------------------
   0824                    2190 __basic_pen_txt::
                           2191 ;mini_BASIC/minibasic.h:393: __endasm;
   0824 DD 21 02 00   [14] 2192 	ld	ix,#2; posicion primer parametro 
   0828 DD 39         [15] 2193 	add ix,sp;
   082A DD 7E 00      [19] 2194 	ld	a, (ix)
   082D CD 90 BB      [17] 2195 	call	0xbb90
                           2196 ;mini_BASIC/minibasic.h:396: }
   0830 C9            [10] 2197 	ret
                           2198 ;mini_BASIC/minibasic.h:397: void _basic_pen_graph(char ink)
                           2199 ;	---------------------------------
                           2200 ; Function _basic_pen_graph
                           2201 ; ---------------------------------
   0831                    2202 __basic_pen_graph::
                           2203 ;mini_BASIC/minibasic.h:404: __endasm;
   0831 DD 21 02 00   [14] 2204 	ld	ix,#2; posicion primer parametro 
   0835 DD 39         [15] 2205 	add ix,sp;
   0837 DD 7E 00      [19] 2206 	ld	a, (ix)
   083A CD DE BB      [17] 2207 	call	0xbbde
                           2208 ;mini_BASIC/minibasic.h:406: }
   083D C9            [10] 2209 	ret
                           2210 ;mini_BASIC/minibasic.h:412: void _basic_paper(char ink)
                           2211 ;	---------------------------------
                           2212 ; Function _basic_paper
                           2213 ; ---------------------------------
   083E                    2214 __basic_paper::
                           2215 ;mini_BASIC/minibasic.h:419: __endasm;
   083E DD 21 02 00   [14] 2216 	ld	ix,#2; posicion primer parametro 
   0842 DD 39         [15] 2217 	add ix,sp;
   0844 DD 7E 00      [19] 2218 	ld	a, (ix)
   0847 CD 96 BB      [17] 2219 	call	0xbb96
                           2220 ;mini_BASIC/minibasic.h:421: }
   084A C9            [10] 2221 	ret
                           2222 ;mini_BASIC/minibasic.h:423: void _basic_plot(int x, int y){
                           2223 ;	---------------------------------
                           2224 ; Function _basic_plot
                           2225 ; ---------------------------------
   084B                    2226 __basic_plot::
                           2227 ;mini_BASIC/minibasic.h:436: __endasm;
   084B DD 21 02 00   [14] 2228 	ld	ix,#2; posicion primer parametro 
   084F DD 39         [15] 2229 	add ix,sp;
   0851 DD 5E 00      [19] 2230 	ld	e,(ix)
   0854 DD 56 01      [19] 2231 	ld	d, 1(ix)
   0857 DD 6E 02      [19] 2232 	ld	l, 2(ix)
   085A DD 66 03      [19] 2233 	ld	h, 3(ix)
   085D CD EA BB      [17] 2234 	call	0xBBEA ; GRA PLOT ABSOLUTE
   0860 C9            [10] 2235 	ret
                           2236 ;mini_BASIC/minibasic.h:437: }
   0861 C9            [10] 2237 	ret
                           2238 ;mini_BASIC/minibasic.h:439: void _basic_move(int x, int y){
                           2239 ;	---------------------------------
                           2240 ; Function _basic_move
                           2241 ; ---------------------------------
   0862                    2242 __basic_move::
                           2243 ;mini_BASIC/minibasic.h:452: __endasm;
   0862 DD 21 02 00   [14] 2244 	ld	ix,#2; posicion primer parametro 
   0866 DD 39         [15] 2245 	add ix,sp;
   0868 DD 5E 00      [19] 2246 	ld	e,(ix)
   086B DD 56 01      [19] 2247 	ld	d, 1(ix)
   086E DD 6E 02      [19] 2248 	ld	l, 2(ix)
   0871 DD 66 03      [19] 2249 	ld	h, 3(ix)
   0874 CD C0 BB      [17] 2250 	call	0xBBC0 ; GRA MOVE ABSOLUTE
   0877 C9            [10] 2251 	ret
                           2252 ;mini_BASIC/minibasic.h:453: }
   0878 C9            [10] 2253 	ret
                           2254 ;mini_BASIC/minibasic.h:455: void _basic_draw(int x, int y)
                           2255 ;	---------------------------------
                           2256 ; Function _basic_draw
                           2257 ; ---------------------------------
   0879                    2258 __basic_draw::
                           2259 ;mini_BASIC/minibasic.h:470: __endasm;	
   0879 DD 21 02 00   [14] 2260 	ld	ix,#2; posicion primer parametro 
   087D DD 39         [15] 2261 	add ix,sp;
   087F DD 5E 00      [19] 2262 	ld	e,(ix)
   0882 DD 56 01      [19] 2263 	ld	d, 1(ix)
   0885 DD 6E 02      [19] 2264 	ld	l, 2(ix)
   0888 DD 66 03      [19] 2265 	ld	h, 3(ix)
   088B CD F6 BB      [17] 2266 	call	0xBBF6 ; GRA LlNE ABSOLUTE
   088E C9            [10] 2267 	ret
                           2268 ;mini_BASIC/minibasic.h:472: }
   088F C9            [10] 2269 	ret
                           2270 ;ciclo.c:79: int  main()
                           2271 ;	---------------------------------
                           2272 ; Function main
                           2273 ; ---------------------------------
   0890                    2274 _main::
   0890 F5            [11] 2275 	push	af
                           2276 ;ciclo.c:82: c=3;
   0891 21 03 00      [10] 2277 	ld	hl, #0x0003
   0894 22r30r00      [16] 2278 	ld	(_c), hl
                           2279 ;ciclo.c:83: k=0;
   0897 2E 00         [ 7] 2280 	ld	l, #0x00
   0899 22rC4r00      [16] 2281 	ld	(_k), hl
                           2282 ;ciclo.c:84: enesp=15;
   089C 2E 0F         [ 7] 2283 	ld	l, #0x0f
   089E 22rC2r00      [16] 2284 	ld	(_enesp), hl
                           2285 ;ciclo.c:86: muertos=0;
                           2286 ;ciclo.c:87: banda=0;
   08A1 2E 00         [ 7] 2287 	ld	l,#0x00
   08A3 22rD6r00      [16] 2288 	ld	(_muertos),hl
   08A6 22rD8r00      [16] 2289 	ld	(_banda), hl
                           2290 ;ciclo.c:88: scroll=0;
   08A9 FD 21rDAr00   [14] 2291 	ld	iy, #_scroll
   08AD FD 36 00 00   [19] 2292 	ld	0 (iy), #0x00
                           2293 ;ciclo.c:89: modo=0;
   08B1 FD 21rE0r00   [14] 2294 	ld	iy, #_modo
   08B5 FD 36 00 00   [19] 2295 	ld	0 (iy), #0x00
                           2296 ;ciclo.c:90: evtipo=0;
   08B9 2E 00         [ 7] 2297 	ld	l, #0x00
   08BB 22r09r01      [16] 2298 	ld	(_evtipo), hl
                           2299 ;ciclo.c:92: x=40;// joe x
   08BE 2E 28         [ 7] 2300 	ld	l, #0x28
   08C0 22r32r00      [16] 2301 	ld	(_x), hl
                           2302 ;ciclo.c:93: y=16*8;//joe y
   08C3 2E 80         [ 7] 2303 	ld	l, #0x80
   08C5 22r34r00      [16] 2304 	ld	(_y), hl
                           2305 ;ciclo.c:94: col=32;
                           2306 ;ciclo.c:95: cor=32;
   08C8 2E 20         [ 7] 2307 	ld	l,#0x20
   08CA 22r36r00      [16] 2308 	ld	(_col),hl
   08CD 22r38r00      [16] 2309 	ld	(_cor), hl
                           2310 ;ciclo.c:98: fps=0;
                           2311 ;ciclo.c:99: t=0;
   08D0 2E 00         [ 7] 2312 	ld	l,#0x00
   08D2 22rCAr00      [16] 2313 	ld	(_fps),hl
   08D5 22rD0r00      [16] 2314 	ld	(_t), hl
                           2315 ;ciclo.c:106: bomb=0;
   08D8 FD 21rE2r00   [14] 2316 	ld	iy, #_bomb
   08DC FD 36 00 00   [19] 2317 	ld	0 (iy), #0x00
                           2318 ;ciclo.c:107: pres=0;
   08E0 FD 21rE1r00   [14] 2319 	ld	iy, #_pres
   08E4 FD 36 00 00   [19] 2320 	ld	0 (iy), #0x00
                           2321 ;ciclo.c:108: dir=0;
                           2322 ;ciclo.c:109: dif=0;
   08E8 2E 00         [ 7] 2323 	ld	l,#0x00
   08EA 22rE3r00      [16] 2324 	ld	(_dir),hl
   08ED 22rE5r00      [16] 2325 	ld	(_dif), hl
                           2326 ;ciclo.c:112: po[1]=0;po[4]=2;po[3]=4;po[5]=6;po[2]=8;po[8]=10;po[6]=12;po[7]=14;
   08F0 2E 00         [ 7] 2327 	ld	l, #0x00
   08F2 22r3Er00      [16] 2328 	ld	((_po + 0x0002)), hl
   08F5 2E 02         [ 7] 2329 	ld	l, #0x02
   08F7 22r44r00      [16] 2330 	ld	((_po + 0x0008)), hl
   08FA 2E 04         [ 7] 2331 	ld	l, #0x04
   08FC 22r42r00      [16] 2332 	ld	((_po + 0x0006)), hl
   08FF 2E 06         [ 7] 2333 	ld	l, #0x06
   0901 22r46r00      [16] 2334 	ld	((_po + 0x000a)), hl
   0904 2E 08         [ 7] 2335 	ld	l, #0x08
   0906 22r40r00      [16] 2336 	ld	((_po + 0x0004)), hl
   0909 2E 0A         [ 7] 2337 	ld	l, #0x0a
   090B 22r4Cr00      [16] 2338 	ld	((_po + 0x0010)), hl
   090E 2E 0C         [ 7] 2339 	ld	l, #0x0c
   0910 22r48r00      [16] 2340 	ld	((_po + 0x000c)), hl
   0913 2E 0E         [ 7] 2341 	ld	l, #0x0e
   0915 22r4Ar00      [16] 2342 	ld	((_po + 0x000e)), hl
                           2343 ;ciclo.c:113: seq[0]=1;seq[1]=2;seq[2]=2;seq[3]=2;seq[4]=3;seq[5]=4;seq[6]=4;seq[7]=4;seq[8]=5;
   0918 2E 01         [ 7] 2344 	ld	l, #0x01
   091A 22r4Er00      [16] 2345 	ld	(_seq), hl
   091D 2E 02         [ 7] 2346 	ld	l,#0x02
   091F 22r50r00      [16] 2347 	ld	((_seq + 0x0002)),hl
   0922 22r52r00      [16] 2348 	ld	((_seq + 0x0004)), hl
   0925 2E 02         [ 7] 2349 	ld	l, #0x02
   0927 22r54r00      [16] 2350 	ld	((_seq + 0x0006)), hl
   092A 2E 03         [ 7] 2351 	ld	l, #0x03
   092C 22r56r00      [16] 2352 	ld	((_seq + 0x0008)), hl
   092F 2E 04         [ 7] 2353 	ld	l,#0x04
   0931 22r58r00      [16] 2354 	ld	((_seq + 0x000a)),hl
   0934 22r5Ar00      [16] 2355 	ld	((_seq + 0x000c)), hl
   0937 2E 04         [ 7] 2356 	ld	l, #0x04
   0939 22r5Cr00      [16] 2357 	ld	((_seq + 0x000e)), hl
   093C 2E 05         [ 7] 2358 	ld	l, #0x05
   093E 22r5Er00      [16] 2359 	ld	((_seq + 0x0010)), hl
                           2360 ;ciclo.c:114: seq[9]=6;seq[10]=6;seq[11]=6;seq[12]=7;seq[13]=8;seq[14]=8;seq[15]=8;
   0941 2E 06         [ 7] 2361 	ld	l,#0x06
   0943 22r60r00      [16] 2362 	ld	((_seq + 0x0012)),hl
   0946 22r62r00      [16] 2363 	ld	((_seq + 0x0014)), hl
   0949 2E 06         [ 7] 2364 	ld	l, #0x06
   094B 22r64r00      [16] 2365 	ld	((_seq + 0x0016)), hl
   094E 2E 07         [ 7] 2366 	ld	l, #0x07
   0950 22r66r00      [16] 2367 	ld	((_seq + 0x0018)), hl
   0953 2E 08         [ 7] 2368 	ld	l,#0x08
   0955 22r68r00      [16] 2369 	ld	((_seq + 0x001a)),hl
   0958 22r6Ar00      [16] 2370 	ld	((_seq + 0x001c)), hl
   095B 2E 08         [ 7] 2371 	ld	l, #0x08
   095D 22r6Cr00      [16] 2372 	ld	((_seq + 0x001e)), hl
                           2373 ;ciclo.c:115: for (i=0;i<32;i++){
   0960 2E 00         [ 7] 2374 	ld	l, #0x00
   0962 22rD2r00      [16] 2375 	ld	(_i), hl
   0965                    2376 00280$:
                           2377 ;ciclo.c:116: dirsp[i]=27000+i*16;
   0965 2ArD2r00      [16] 2378 	ld	hl, (_i)
   0968 29            [11] 2379 	add	hl, hl
   0969 7D            [ 4] 2380 	ld	a, l
   096A C6r6E         [ 7] 2381 	add	a, #<(_dirsp)
   096C 4F            [ 4] 2382 	ld	c, a
   096D 7C            [ 4] 2383 	ld	a, h
   096E CEs00         [ 7] 2384 	adc	a, #>(_dirsp)
   0970 47            [ 4] 2385 	ld	b, a
   0971 2ArD2r00      [16] 2386 	ld	hl, (_i)
   0974 29            [11] 2387 	add	hl, hl
   0975 29            [11] 2388 	add	hl, hl
   0976 29            [11] 2389 	add	hl, hl
   0977 29            [11] 2390 	add	hl, hl
   0978 11 78 69      [10] 2391 	ld	de, #0x6978
   097B 19            [11] 2392 	add	hl, de
   097C EB            [ 4] 2393 	ex	de,hl
   097D 7B            [ 4] 2394 	ld	a, e
   097E 02            [ 7] 2395 	ld	(bc), a
   097F 03            [ 6] 2396 	inc	bc
   0980 7A            [ 4] 2397 	ld	a, d
   0981 02            [ 7] 2398 	ld	(bc), a
                           2399 ;ciclo.c:115: for (i=0;i<32;i++){
   0982 2ArD2r00      [16] 2400 	ld	hl, (_i)
   0985 23            [ 6] 2401 	inc	hl
   0986 22rD2r00      [16] 2402 	ld	(_i), hl
   0989 FD 21rD2r00   [14] 2403 	ld	iy, #_i
   098D FD 7E 00      [19] 2404 	ld	a, 0 (iy)
   0990 D6 20         [ 7] 2405 	sub	a, #0x20
   0992 FD 7E 01      [19] 2406 	ld	a, 1 (iy)
   0995 17            [ 4] 2407 	rla
   0996 3F            [ 4] 2408 	ccf
   0997 1F            [ 4] 2409 	rra
   0998 DE 80         [ 7] 2410 	sbc	a, #0x80
   099A 38 C9         [12] 2411 	jr	C,00280$
                           2412 ;ciclo.c:118: pot=10;//potencia de 10 para medir score
   099C 21 0A 00      [10] 2413 	ld	hl, #0x000a
   099F 22rF1r00      [16] 2414 	ld	(_pot), hl
                           2415 ;ciclo.c:119: tabu=0;//tabulador score
   09A2 2E 00         [ 7] 2416 	ld	l, #0x00
   09A4 22rF3r00      [16] 2417 	ld	(_tabu), hl
                           2418 ;ciclo.c:120: level=0;
   09A7 21rF7r00      [10] 2419 	ld	hl,#_level + 0
   09AA 36 00         [10] 2420 	ld	(hl), #0x00
                           2421 ;ciclo.c:127: inmune=_basic_peek(42547);
   09AC 21 33 A6      [10] 2422 	ld	hl, #0xa633
   09AF E5            [11] 2423 	push	hl
   09B0 CDr00r08      [17] 2424 	call	__basic_peek
   09B3 F1            [10] 2425 	pop	af
   09B4 7D            [ 4] 2426 	ld	a, l
   09B5 32rF9r00      [13] 2427 	ld	(_inmune+0), a
   09B8 AF            [ 4] 2428 	xor	a, a
   09B9 32rFAr00      [13] 2429 	ld	(_inmune+1), a
                           2430 ;ciclo.c:130: pfin1=0;
   09BC 21 00 00      [10] 2431 	ld	hl, #0x0000
   09BF 22rE9r00      [16] 2432 	ld	(_pfin1), hl
                           2433 ;ciclo.c:131: p1=0;p2=0;
   09C2 2E 00         [ 7] 2434 	ld	l,#0x00
   09C4 22rEDr00      [16] 2435 	ld	(_p1),hl
   09C7 22rEFr00      [16] 2436 	ld	(_p2), hl
                           2437 ;ciclo.c:132: tinta=0;
   09CA 2E 00         [ 7] 2438 	ld	l, #0x00
   09CC 22r0Dr01      [16] 2439 	ld	(_tinta), hl
                           2440 ;ciclo.c:136: _8BP_peek_2(42540,&puntos);
   09CF 21r3Ar00      [10] 2441 	ld	hl, #_puntos
   09D2 E5            [11] 2442 	push	hl
   09D3 21 2C A6      [10] 2443 	ld	hl, #0xa62c
   09D6 E5            [11] 2444 	push	hl
   09D7 CDr26r05      [17] 2445 	call	__8BP_peek_2
   09DA F1            [10] 2446 	pop	af
   09DB F1            [10] 2447 	pop	af
                           2448 ;ciclo.c:137: while (pot<puntos){
   09DC                    2449 00102$:
   09DC 21r3Ar00      [10] 2450 	ld	hl, #_puntos
   09DF FD 21rF1r00   [14] 2451 	ld	iy, #_pot
   09E3 FD 7E 00      [19] 2452 	ld	a, 0 (iy)
   09E6 96            [ 7] 2453 	sub	a, (hl)
   09E7 FD 7E 01      [19] 2454 	ld	a, 1 (iy)
   09EA 23            [ 6] 2455 	inc	hl
   09EB 9E            [ 7] 2456 	sbc	a, (hl)
   09EC E2rF1r09      [10] 2457 	jp	PO, 00650$
   09EF EE 80         [ 7] 2458 	xor	a, #0x80
   09F1                    2459 00650$:
   09F1 F2r0Br0A      [10] 2460 	jp	P, 00104$
                           2461 ;ciclo.c:138: tabu=tabu+2;pot=pot*10;
   09F4 2ArF3r00      [16] 2462 	ld	hl, (_tabu)
   09F7 23            [ 6] 2463 	inc	hl
   09F8 23            [ 6] 2464 	inc	hl
   09F9 22rF3r00      [16] 2465 	ld	(_tabu), hl
   09FC ED 4BrF1r00   [20] 2466 	ld	bc, (_pot)
   0A00 69            [ 4] 2467 	ld	l, c
   0A01 60            [ 4] 2468 	ld	h, b
   0A02 29            [11] 2469 	add	hl, hl
   0A03 29            [11] 2470 	add	hl, hl
   0A04 09            [11] 2471 	add	hl, bc
   0A05 29            [11] 2472 	add	hl, hl
   0A06 22rF1r00      [16] 2473 	ld	(_pot), hl
   0A09 18 D1         [12] 2474 	jr	00102$
   0A0B                    2475 00104$:
                           2476 ;ciclo.c:140: for (i=0;i<8;i++) enecount[i]=0;
   0A0B 21 00 00      [10] 2477 	ld	hl, #0x0000
   0A0E 22rD2r00      [16] 2478 	ld	(_i), hl
   0A11                    2479 00282$:
   0A11 2ArD2r00      [16] 2480 	ld	hl, (_i)
   0A14 29            [11] 2481 	add	hl, hl
   0A15 11rAEr00      [10] 2482 	ld	de, #_enecount
   0A18 19            [11] 2483 	add	hl, de
   0A19 AF            [ 4] 2484 	xor	a, a
   0A1A 77            [ 7] 2485 	ld	(hl), a
   0A1B 23            [ 6] 2486 	inc	hl
   0A1C 77            [ 7] 2487 	ld	(hl), a
   0A1D 2ArD2r00      [16] 2488 	ld	hl, (_i)
   0A20 23            [ 6] 2489 	inc	hl
   0A21 22rD2r00      [16] 2490 	ld	(_i), hl
   0A24 FD 21rD2r00   [14] 2491 	ld	iy, #_i
   0A28 FD 7E 00      [19] 2492 	ld	a, 0 (iy)
   0A2B D6 08         [ 7] 2493 	sub	a, #0x08
   0A2D FD 7E 01      [19] 2494 	ld	a, 1 (iy)
   0A30 17            [ 4] 2495 	rla
   0A31 3F            [ 4] 2496 	ccf
   0A32 1F            [ 4] 2497 	rra
   0A33 DE 80         [ 7] 2498 	sbc	a, #0x80
   0A35 38 DA         [12] 2499 	jr	C,00282$
                           2500 ;ciclo.c:142: _8BP_printat_4(0,8,6-tabu,_basic_str(puntos));
   0A37 2Ar3Ar00      [16] 2501 	ld	hl, (_puntos)
   0A3A E5            [11] 2502 	push	hl
   0A3B CDr08r07      [17] 2503 	call	__basic_str
   0A3E F1            [10] 2504 	pop	af
   0A3F EB            [ 4] 2505 	ex	de,hl
   0A40 21rF3r00      [10] 2506 	ld	hl, #_tabu
   0A43 3E 06         [ 7] 2507 	ld	a, #0x06
   0A45 96            [ 7] 2508 	sub	a, (hl)
   0A46 4F            [ 4] 2509 	ld	c, a
   0A47 3E 00         [ 7] 2510 	ld	a, #0x00
   0A49 23            [ 6] 2511 	inc	hl
   0A4A 9E            [ 7] 2512 	sbc	a, (hl)
   0A4B 47            [ 4] 2513 	ld	b, a
   0A4C D5            [11] 2514 	push	de
   0A4D C5            [11] 2515 	push	bc
   0A4E 21 08 00      [10] 2516 	ld	hl, #0x0008
   0A51 E5            [11] 2517 	push	hl
   0A52 2E 00         [ 7] 2518 	ld	l, #0x00
   0A54 E5            [11] 2519 	push	hl
   0A55 CDr04r02      [17] 2520 	call	__8BP_printat_4
   0A58 F1            [10] 2521 	pop	af
   0A59 F1            [10] 2522 	pop	af
   0A5A F1            [10] 2523 	pop	af
                           2524 ;ciclo.c:144: level=_basic_peek(42544);
   0A5B 21 30 A6      [10] 2525 	ld	hl, #0xa630
   0A5E E3            [19] 2526 	ex	(sp),hl
   0A5F CDr00r08      [17] 2527 	call	__basic_peek
   0A62 F1            [10] 2528 	pop	af
   0A63 7D            [ 4] 2529 	ld	a, l
   0A64 32rF7r00      [13] 2530 	ld	(_level+0), a
                           2531 ;ciclo.c:145: vidas=_basic_peek(42545);
   0A67 21 31 A6      [10] 2532 	ld	hl, #0xa631
   0A6A E5            [11] 2533 	push	hl
   0A6B CDr00r08      [17] 2534 	call	__basic_peek
   0A6E F1            [10] 2535 	pop	af
   0A6F 7D            [ 4] 2536 	ld	a, l
   0A70 32rF8r00      [13] 2537 	ld	(_vidas+0), a
                           2538 ;ciclo.c:146: keyb=_basic_peek(42546);
   0A73 21 32 A6      [10] 2539 	ld	hl, #0xa632
   0A76 E5            [11] 2540 	push	hl
   0A77 CDr00r08      [17] 2541 	call	__basic_peek
   0A7A F1            [10] 2542 	pop	af
   0A7B 7D            [ 4] 2543 	ld	a, l
   0A7C 32r0Fr01      [13] 2544 	ld	(_keyb+0), a
                           2545 ;ciclo.c:148: Nbanda= level*8+16;//numero de nazis en final fase
   0A7F 21rF7r00      [10] 2546 	ld	hl,#_level + 0
   0A82 5E            [ 7] 2547 	ld	e, (hl)
   0A83 16 00         [ 7] 2548 	ld	d, #0x00
   0A85 4B            [ 4] 2549 	ld	c, e
   0A86 42            [ 4] 2550 	ld	b, d
   0A87 CB 21         [ 8] 2551 	sla	c
   0A89 CB 10         [ 8] 2552 	rl	b
   0A8B CB 21         [ 8] 2553 	sla	c
   0A8D CB 10         [ 8] 2554 	rl	b
   0A8F CB 21         [ 8] 2555 	sla	c
   0A91 CB 10         [ 8] 2556 	rl	b
   0A93 21 10 00      [10] 2557 	ld	hl, #0x0010
   0A96 09            [11] 2558 	add	hl, bc
   0A97 22rF5r00      [16] 2559 	ld	(_Nbanda), hl
                           2560 ;ciclo.c:151: if (keyb==0) {up=67;dw=69;fr=47;iz=34;der=27;}
   0A9A 3Ar0Fr01      [13] 2561 	ld	a,(#_keyb + 0)
   0A9D B7            [ 4] 2562 	or	a, a
   0A9E 20 1B         [12] 2563 	jr	NZ,00107$
   0AA0 21rDBr00      [10] 2564 	ld	hl,#_up + 0
   0AA3 36 43         [10] 2565 	ld	(hl), #0x43
   0AA5 21rDCr00      [10] 2566 	ld	hl,#_dw + 0
   0AA8 36 45         [10] 2567 	ld	(hl), #0x45
   0AAA 21rDFr00      [10] 2568 	ld	hl,#_fr + 0
   0AAD 36 2F         [10] 2569 	ld	(hl), #0x2f
   0AAF 21rDDr00      [10] 2570 	ld	hl,#_iz + 0
   0AB2 36 22         [10] 2571 	ld	(hl), #0x22
   0AB4 21rDEr00      [10] 2572 	ld	hl,#_der + 0
   0AB7 36 1B         [10] 2573 	ld	(hl), #0x1b
   0AB9 18 19         [12] 2574 	jr	00108$
   0ABB                    2575 00107$:
                           2576 ;ciclo.c:152: else {up=72;dw=73;fr=76;iz=74;der=75;}
   0ABB 21rDBr00      [10] 2577 	ld	hl,#_up + 0
   0ABE 36 48         [10] 2578 	ld	(hl), #0x48
   0AC0 21rDCr00      [10] 2579 	ld	hl,#_dw + 0
   0AC3 36 49         [10] 2580 	ld	(hl), #0x49
   0AC5 21rDFr00      [10] 2581 	ld	hl,#_fr + 0
   0AC8 36 4C         [10] 2582 	ld	(hl), #0x4c
   0ACA 21rDDr00      [10] 2583 	ld	hl,#_iz + 0
   0ACD 36 4A         [10] 2584 	ld	(hl), #0x4a
   0ACF 21rDEr00      [10] 2585 	ld	hl,#_der + 0
   0AD2 36 4B         [10] 2586 	ld	(hl), #0x4b
   0AD4                    2587 00108$:
                           2588 ;ciclo.c:154: _8BP_peek_2(42550+level*6,&evdir);
   0AD4 01r07r01      [10] 2589 	ld	bc, #_evdir
   0AD7 6B            [ 4] 2590 	ld	l, e
   0AD8 62            [ 4] 2591 	ld	h, d
   0AD9 29            [11] 2592 	add	hl, hl
   0ADA 19            [11] 2593 	add	hl, de
   0ADB 29            [11] 2594 	add	hl, hl
   0ADC 11 36 A6      [10] 2595 	ld	de, #0xa636
   0ADF 19            [11] 2596 	add	hl, de
   0AE0 C5            [11] 2597 	push	bc
   0AE1 E5            [11] 2598 	push	hl
   0AE2 CDr26r05      [17] 2599 	call	__8BP_peek_2
   0AE5 F1            [10] 2600 	pop	af
                           2601 ;ciclo.c:157: if (_basic_peek(42548)==1){
   0AE6 21 34 A6      [10] 2602 	ld	hl, #0xa634
   0AE9 E3            [19] 2603 	ex	(sp),hl
   0AEA CDr00r08      [17] 2604 	call	__basic_peek
   0AED F1            [10] 2605 	pop	af
   0AEE 2D            [ 4] 2606 	dec	l
   0AEF 20 34         [12] 2607 	jr	NZ,00110$
                           2608 ;ciclo.c:158: _8BP_peek_2(42574+level*4+2,&m);//cambia el m inicial
   0AF1 01rBEr00      [10] 2609 	ld	bc, #_m+0
   0AF4 FD 21rF7r00   [14] 2610 	ld	iy, #_level
   0AF8 FD 6E 00      [19] 2611 	ld	l, 0 (iy)
   0AFB 26 00         [ 7] 2612 	ld	h, #0x00
   0AFD 29            [11] 2613 	add	hl, hl
   0AFE 29            [11] 2614 	add	hl, hl
   0AFF 11 50 A6      [10] 2615 	ld	de, #0xa650
   0B02 19            [11] 2616 	add	hl, de
   0B03 C5            [11] 2617 	push	bc
   0B04 E5            [11] 2618 	push	hl
   0B05 CDr26r05      [17] 2619 	call	__8BP_peek_2
   0B08 F1            [10] 2620 	pop	af
   0B09 F1            [10] 2621 	pop	af
                           2622 ;ciclo.c:159: _8BP_peek_2(42574+level*4,&evdir);//cambia la direccion inicial de eventos
   0B0A 01r07r01      [10] 2623 	ld	bc, #_evdir
   0B0D FD 21rF7r00   [14] 2624 	ld	iy, #_level
   0B11 FD 6E 00      [19] 2625 	ld	l, 0 (iy)
   0B14 26 00         [ 7] 2626 	ld	h, #0x00
   0B16 29            [11] 2627 	add	hl, hl
   0B17 29            [11] 2628 	add	hl, hl
   0B18 11 4E A6      [10] 2629 	ld	de, #0xa64e
   0B1B 19            [11] 2630 	add	hl, de
   0B1C C5            [11] 2631 	push	bc
   0B1D E5            [11] 2632 	push	hl
   0B1E CDr26r05      [17] 2633 	call	__8BP_peek_2
   0B21 F1            [10] 2634 	pop	af
   0B22 F1            [10] 2635 	pop	af
   0B23 18 06         [12] 2636 	jr	00111$
   0B25                    2637 00110$:
                           2638 ;ciclo.c:164: m=0; 
   0B25 21 00 00      [10] 2639 	ld	hl, #0x0000
   0B28 22rBEr00      [16] 2640 	ld	(_m), hl
   0B2B                    2641 00111$:
                           2642 ;ciclo.c:168: _8BP_peek_2(evdir,&nextm); //obtiene el siguiente m 
   0B2B 21rC0r00      [10] 2643 	ld	hl, #_nextm
   0B2E E5            [11] 2644 	push	hl
   0B2F 2Ar07r01      [16] 2645 	ld	hl, (_evdir)
   0B32 E5            [11] 2646 	push	hl
   0B33 CDr26r05      [17] 2647 	call	__8BP_peek_2
   0B36 F1            [10] 2648 	pop	af
   0B37 F1            [10] 2649 	pop	af
                           2650 ;ciclo.c:171: evtipo=0;
   0B38 21 00 00      [10] 2651 	ld	hl, #0x0000
   0B3B 22r09r01      [16] 2652 	ld	(_evtipo), hl
                           2653 ;ciclo.c:173: yene=0;xene=0;
   0B3E 2E 00         [ 7] 2654 	ld	l,#0x00
   0B40 22rFFr00      [16] 2655 	ld	(_yene),hl
   0B43 22r01r01      [16] 2656 	ld	(_xene), hl
                           2657 ;ciclo.c:174: rk=0;
   0B46 2E 00         [ 7] 2658 	ld	l, #0x00
   0B48 22r05r01      [16] 2659 	ld	(_rk), hl
                           2660 ;ciclo.c:176: i=28;//disparo
   0B4B 2E 1C         [ 7] 2661 	ld	l, #0x1c
   0B4D 22rD2r00      [16] 2662 	ld	(_i), hl
                           2663 ;ciclo.c:177: j=29;//bomba
   0B50 2E 1D         [ 7] 2664 	ld	l, #0x1d
   0B52 22rD4r00      [16] 2665 	ld	(_j), hl
                           2666 ;ciclo.c:179: ta=_basic_time();
   0B55 CDr14r06      [17] 2667 	call	__basic_time
   0B58 22rC6r00      [16] 2668 	ld	(_ta), hl
                           2669 ;ciclo.c:182: _8BP_printspall_4(0,0,1,0);
   0B5B 21 00 00      [10] 2670 	ld	hl, #0x0000
   0B5E E5            [11] 2671 	push	hl
   0B5F 2E 01         [ 7] 2672 	ld	l, #0x01
   0B61 E5            [11] 2673 	push	hl
   0B62 2E 00         [ 7] 2674 	ld	l, #0x00
   0B64 E5            [11] 2675 	push	hl
   0B65 2E 00         [ 7] 2676 	ld	l, #0x00
   0B67 E5            [11] 2677 	push	hl
   0B68 CDrCEr02      [17] 2678 	call	__8BP_printspall_4
   0B6B F1            [10] 2679 	pop	af
   0B6C F1            [10] 2680 	pop	af
   0B6D F1            [10] 2681 	pop	af
                           2682 ;ciclo.c:183: _8BP_colspall_2(&cor,&col);
   0B6E 21r36r00      [10] 2683 	ld	hl, #_col
   0B71 E3            [19] 2684 	ex	(sp),hl
   0B72 21r38r00      [10] 2685 	ld	hl, #_cor
   0B75 E5            [11] 2686 	push	hl
   0B76 CDr4Er01      [17] 2687 	call	__8BP_colspall_2
   0B79 F1            [10] 2688 	pop	af
   0B7A F1            [10] 2689 	pop	af
                           2690 ;ciclo.c:184: _8BP_colsp_3(32,0,22);
   0B7B 21 16 00      [10] 2691 	ld	hl, #0x0016
   0B7E E5            [11] 2692 	push	hl
   0B7F 2E 00         [ 7] 2693 	ld	l, #0x00
   0B81 E5            [11] 2694 	push	hl
   0B82 2E 20         [ 7] 2695 	ld	l, #0x20
   0B84 E5            [11] 2696 	push	hl
   0B85 CDrE6r00      [17] 2697 	call	__8BP_colsp_3
   0B88 F1            [10] 2698 	pop	af
   0B89 F1            [10] 2699 	pop	af
                           2700 ;ciclo.c:185: _8BP_autoall_1(1);
   0B8A 21 01 00      [10] 2701 	ld	hl, #0x0001
   0B8D E3            [19] 2702 	ex	(sp),hl
   0B8E CDr5Br00      [17] 2703 	call	__8BP_autoall_1
   0B91 F1            [10] 2704 	pop	af
                           2705 ;ciclo.c:190: label_CICLO:
   0B92                    2706 00112$:
                           2707 ;ciclo.c:191: c=c+1;
   0B92 2Ar30r00      [16] 2708 	ld	hl, (_c)
   0B95 23            [ 6] 2709 	inc	hl
   0B96 22r30r00      [16] 2710 	ld	(_c), hl
                           2711 ;ciclo.c:194: if (c & 7) goto label_710;
   0B99 3Ar30r00      [13] 2712 	ld	a,(#_c + 0)
   0B9C E6 07         [ 7] 2713 	and	a, #0x07
   0B9E 20 1B         [12] 2714 	jr	NZ,00120$
                           2715 ;ciclo.c:213: creaDispEne_1990();
   0BA0 CDr0Cr15      [17] 2716 	call	_creaDispEne_1990
                           2717 ;ciclo.c:216: if (banda) {
   0BA3 FD 21rD8r00   [14] 2718 	ld	iy, #_banda
   0BA7 FD 7E 01      [19] 2719 	ld	a, 1 (iy)
   0BAA FD B6 00      [19] 2720 	or	a, 0 (iy)
   0BAD 28 0C         [12] 2721 	jr	Z,00120$
                           2722 ;ciclo.c:217: if (c & 15) goto label_740;
   0BAF 3Ar30r00      [13] 2723 	ld	a,(#_c + 0)
   0BB2 E6 0F         [ 7] 2724 	and	a, #0x0f
   0BB4 20 20         [12] 2725 	jr	NZ,00123$
                           2726 ;ciclo.c:218: else procesaEventoBanda_1880();
   0BB6 CDrAFr19      [17] 2727 	call	_procesaEventoBanda_1880
                           2728 ;ciclo.c:219: goto label_740;
   0BB9 18 1B         [12] 2729 	jr	00123$
                           2730 ;ciclo.c:225: label_710:
   0BBB                    2731 00120$:
                           2732 ;ciclo.c:227: if (m==nextm) procesaEvento_1500();
   0BBB 3ArBEr00      [13] 2733 	ld	a,(#_m + 0)
   0BBE FD 21rC0r00   [14] 2734 	ld	iy, #_nextm
   0BC2 FD 96 00      [19] 2735 	sub	a, 0 (iy)
   0BC5 20 0F         [12] 2736 	jr	NZ,00123$
   0BC7 3ArBFr00      [13] 2737 	ld	a,(#_m + 1)
   0BCA FD 21rC0r00   [14] 2738 	ld	iy, #_nextm
   0BCE FD 96 01      [19] 2739 	sub	a, 1 (iy)
   0BD1 20 03         [12] 2740 	jr	NZ,00123$
   0BD3 CDr41r16      [17] 2741 	call	_procesaEvento_1500
                           2742 ;ciclo.c:229: label_740:  
   0BD6                    2743 00123$:
                           2744 ;ciclo.c:232: if (_basic_inkey(up)>0) goto label_840;
   0BD6 3ArDBr00      [13] 2745 	ld	a, (_up)
   0BD9 F5            [11] 2746 	push	af
   0BDA 33            [ 6] 2747 	inc	sp
   0BDB CDr60r06      [17] 2748 	call	__basic_inkey
   0BDE 33            [ 6] 2749 	inc	sp
   0BDF 7D            [ 4] 2750 	ld	a, l
   0BE0 B7            [ 4] 2751 	or	a, a
   0BE1 C2r4Ar0D      [10] 2752 	jp	NZ, 00154$
                           2753 ;ciclo.c:233: else if (y>0) goto label_750;
   0BE4 AF            [ 4] 2754 	xor	a, a
   0BE5 FD 21r34r00   [14] 2755 	ld	iy, #_y
   0BE9 FD BE 00      [19] 2756 	cp	a, 0 (iy)
   0BEC FD 9E 01      [19] 2757 	sbc	a, 1 (iy)
   0BEF E2rF4r0B      [10] 2758 	jp	PO, 00661$
   0BF2 EE 80         [ 7] 2759 	xor	a, #0x80
   0BF4                    2760 00661$:
   0BF4 F2r4Br0E      [10] 2761 	jp	P, 00173$
                           2762 ;ciclo.c:237: t=1; if (y>120) goto label_820;
   0BF7 21 01 00      [10] 2763 	ld	hl, #0x0001
   0BFA 22rD0r00      [16] 2764 	ld	(_t), hl
                           2765 ;ciclo.c:244: if (x>31){
   0BFD 3E 1F         [ 7] 2766 	ld	a, #0x1f
   0BFF FD 21r32r00   [14] 2767 	ld	iy, #_x
   0C03 FD BE 00      [19] 2768 	cp	a, 0 (iy)
   0C06 3E 00         [ 7] 2769 	ld	a, #0x00
   0C08 FD 9E 01      [19] 2770 	sbc	a, 1 (iy)
   0C0B E2r10r0C      [10] 2771 	jp	PO, 00662$
   0C0E EE 80         [ 7] 2772 	xor	a, #0x80
   0C10                    2773 00662$:
   0C10 07            [ 4] 2774 	rlca
   0C11 E6 01         [ 7] 2775 	and	a,#0x01
   0C13 47            [ 4] 2776 	ld	b, a
                           2777 ;ciclo.c:245: if (x<42){
   0C14 FD 21r32r00   [14] 2778 	ld	iy, #_x
   0C18 FD 7E 00      [19] 2779 	ld	a, 0 (iy)
   0C1B D6 2A         [ 7] 2780 	sub	a, #0x2a
   0C1D FD 7E 01      [19] 2781 	ld	a, 1 (iy)
   0C20 17            [ 4] 2782 	rla
   0C21 3F            [ 4] 2783 	ccf
   0C22 1F            [ 4] 2784 	rra
   0C23 DE 80         [ 7] 2785 	sbc	a, #0x80
   0C25 3E 00         [ 7] 2786 	ld	a, #0x00
   0C27 17            [ 4] 2787 	rla
   0C28 4F            [ 4] 2788 	ld	c, a
                           2789 ;ciclo.c:237: t=1; if (y>120) goto label_820;
   0C29 3E 78         [ 7] 2790 	ld	a, #0x78
   0C2B FD 21r34r00   [14] 2791 	ld	iy, #_y
   0C2F FD BE 00      [19] 2792 	cp	a, 0 (iy)
   0C32 3E 00         [ 7] 2793 	ld	a, #0x00
   0C34 FD 9E 01      [19] 2794 	sbc	a, 1 (iy)
   0C37 E2r3Cr0C      [10] 2795 	jp	PO, 00663$
   0C3A EE 80         [ 7] 2796 	xor	a, #0x80
   0C3C                    2797 00663$:
   0C3C FArE4r0C      [10] 2798 	jp	M, 00144$
                           2799 ;ciclo.c:240: if (scroll>0) goto label_820;
   0C3F 3ArDAr00      [13] 2800 	ld	a,(#_scroll + 0)
   0C42 B7            [ 4] 2801 	or	a, a
   0C43 C2rE4r0C      [10] 2802 	jp	NZ, 00144$
                           2803 ;ciclo.c:243: if (modo>0) {
   0C46 3ArE0r00      [13] 2804 	ld	a,(#_modo + 0)
   0C49 B7            [ 4] 2805 	or	a, a
   0C4A 28 2F         [12] 2806 	jr	Z,00140$
                           2807 ;ciclo.c:244: if (x>31){
   0C4C 78            [ 4] 2808 	ld	a, b
   0C4D B7            [ 4] 2809 	or	a, a
   0C4E 28 2B         [12] 2810 	jr	Z,00140$
                           2811 ;ciclo.c:245: if (x<42){
   0C50 79            [ 4] 2812 	ld	a, c
   0C51 B7            [ 4] 2813 	or	a, a
   0C52 28 27         [12] 2814 	jr	Z,00140$
                           2815 ;ciclo.c:246: m=m+3;_8BP_map2sp_2(m,0);_8BP_moverall_2(3,0); goto label_880;
   0C54 21rBEr00      [10] 2816 	ld	hl, #_m
   0C57 7E            [ 7] 2817 	ld	a, (hl)
   0C58 C6 03         [ 7] 2818 	add	a, #0x03
   0C5A 77            [ 7] 2819 	ld	(hl), a
   0C5B 30 02         [12] 2820 	jr	NC,00664$
   0C5D 23            [ 6] 2821 	inc	hl
   0C5E 34            [11] 2822 	inc	(hl)
   0C5F                    2823 00664$:
   0C5F 21 00 00      [10] 2824 	ld	hl, #0x0000
   0C62 E5            [11] 2825 	push	hl
   0C63 2ArBEr00      [16] 2826 	ld	hl, (_m)
   0C66 E5            [11] 2827 	push	hl
   0C67 CDrA6r04      [17] 2828 	call	__8BP_map2sp_2
   0C6A F1            [10] 2829 	pop	af
   0C6B F1            [10] 2830 	pop	af
   0C6C 21 00 00      [10] 2831 	ld	hl, #0x0000
   0C6F E5            [11] 2832 	push	hl
   0C70 2E 03         [ 7] 2833 	ld	l, #0x03
   0C72 E5            [11] 2834 	push	hl
   0C73 CDr0Dr05      [17] 2835 	call	__8BP_moverall_2
   0C76 F1            [10] 2836 	pop	af
   0C77 F1            [10] 2837 	pop	af
   0C78 C3r4Br0E      [10] 2838 	jp	00173$
   0C7B                    2839 00140$:
                           2840 ;ciclo.c:251: _8BP_mover_3(31,-3,0);_8BP_colsp_1(31);
   0C7B 21 00 00      [10] 2841 	ld	hl, #0x0000
   0C7E E5            [11] 2842 	push	hl
   0C7F 21 FD FF      [10] 2843 	ld	hl, #0xfffd
   0C82 E5            [11] 2844 	push	hl
   0C83 21 1F 00      [10] 2845 	ld	hl, #0x001f
   0C86 E5            [11] 2846 	push	hl
   0C87 CDrD1r04      [17] 2847 	call	__8BP_mover_3
   0C8A F1            [10] 2848 	pop	af
   0C8B F1            [10] 2849 	pop	af
   0C8C 21 1F 00      [10] 2850 	ld	hl, #0x001f
   0C8F E3            [19] 2851 	ex	(sp),hl
   0C90 CDr1Dr01      [17] 2852 	call	__8BP_colsp_1
   0C93 F1            [10] 2853 	pop	af
                           2854 ;ciclo.c:253: if (col>22) {
   0C94 3E 16         [ 7] 2855 	ld	a, #0x16
   0C96 FD 21r36r00   [14] 2856 	ld	iy, #_col
   0C9A FD BE 00      [19] 2857 	cp	a, 0 (iy)
   0C9D 3E 00         [ 7] 2858 	ld	a, #0x00
   0C9F FD 9E 01      [19] 2859 	sbc	a, 1 (iy)
   0CA2 E2rA7r0C      [10] 2860 	jp	PO, 00665$
   0CA5 EE 80         [ 7] 2861 	xor	a, #0x80
   0CA7                    2862 00665$:
   0CA7 F2rD1r0C      [10] 2863 	jp	P, 00142$
                           2864 ;ciclo.c:254: m=m+3;
   0CAA 21rBEr00      [10] 2865 	ld	hl, #_m
   0CAD 7E            [ 7] 2866 	ld	a, (hl)
   0CAE C6 03         [ 7] 2867 	add	a, #0x03
   0CB0 77            [ 7] 2868 	ld	(hl), a
   0CB1 30 02         [12] 2869 	jr	NC,00666$
   0CB3 23            [ 6] 2870 	inc	hl
   0CB4 34            [11] 2871 	inc	(hl)
   0CB5                    2872 00666$:
                           2873 ;ciclo.c:255: _8BP_map2sp_2(m,0);
   0CB5 21 00 00      [10] 2874 	ld	hl, #0x0000
   0CB8 E5            [11] 2875 	push	hl
   0CB9 2ArBEr00      [16] 2876 	ld	hl, (_m)
   0CBC E5            [11] 2877 	push	hl
   0CBD CDrA6r04      [17] 2878 	call	__8BP_map2sp_2
   0CC0 F1            [10] 2879 	pop	af
   0CC1 F1            [10] 2880 	pop	af
                           2881 ;ciclo.c:256: _8BP_moverall_2(3,0);  
   0CC2 21 00 00      [10] 2882 	ld	hl, #0x0000
   0CC5 E5            [11] 2883 	push	hl
   0CC6 2E 03         [ 7] 2884 	ld	l, #0x03
   0CC8 E5            [11] 2885 	push	hl
   0CC9 CDr0Dr05      [17] 2886 	call	__8BP_moverall_2
   0CCC F1            [10] 2887 	pop	af
   0CCD F1            [10] 2888 	pop	af
                           2889 ;ciclo.c:257: goto label_880;
   0CCE C3r4Br0E      [10] 2890 	jp	00173$
   0CD1                    2891 00142$:
                           2892 ;ciclo.c:260: _8BP_mover_3(31,3,0);goto label_880;
   0CD1 21 00 00      [10] 2893 	ld	hl, #0x0000
   0CD4 E5            [11] 2894 	push	hl
   0CD5 2E 03         [ 7] 2895 	ld	l, #0x03
   0CD7 E5            [11] 2896 	push	hl
   0CD8 2E 1F         [ 7] 2897 	ld	l, #0x1f
   0CDA E5            [11] 2898 	push	hl
   0CDB CDrD1r04      [17] 2899 	call	__8BP_mover_3
   0CDE F1            [10] 2900 	pop	af
   0CDF F1            [10] 2901 	pop	af
   0CE0 F1            [10] 2902 	pop	af
   0CE1 C3r4Br0E      [10] 2903 	jp	00173$
                           2904 ;ciclo.c:264: label_820:
   0CE4                    2905 00144$:
                           2906 ;ciclo.c:265: if (modo>0){
   0CE4 3ArE0r00      [13] 2907 	ld	a,(#_modo + 0)
   0CE7 B7            [ 4] 2908 	or	a, a
   0CE8 28 13         [12] 2909 	jr	Z,00150$
                           2910 ;ciclo.c:266: if (x>31){
   0CEA 78            [ 4] 2911 	ld	a, b
   0CEB B7            [ 4] 2912 	or	a, a
   0CEC 28 0F         [12] 2913 	jr	Z,00150$
                           2914 ;ciclo.c:267: if (x<42){
   0CEE 79            [ 4] 2915 	ld	a, c
   0CEF B7            [ 4] 2916 	or	a, a
   0CF0 28 0B         [12] 2917 	jr	Z,00150$
                           2918 ;ciclo.c:268: y=y-2;goto label_880;
   0CF2 2Ar34r00      [16] 2919 	ld	hl, (_y)
   0CF5 2B            [ 6] 2920 	dec	hl
   0CF6 2B            [ 6] 2921 	dec	hl
   0CF7 22r34r00      [16] 2922 	ld	(_y), hl
   0CFA C3r4Br0E      [10] 2923 	jp	00173$
   0CFD                    2924 00150$:
                           2925 ;ciclo.c:272: _8BP_mover_3(31,-2,0);_8BP_colsp_1(31);
   0CFD 21 00 00      [10] 2926 	ld	hl, #0x0000
   0D00 E5            [11] 2927 	push	hl
   0D01 21 FE FF      [10] 2928 	ld	hl, #0xfffe
   0D04 E5            [11] 2929 	push	hl
   0D05 21 1F 00      [10] 2930 	ld	hl, #0x001f
   0D08 E5            [11] 2931 	push	hl
   0D09 CDrD1r04      [17] 2932 	call	__8BP_mover_3
   0D0C F1            [10] 2933 	pop	af
   0D0D F1            [10] 2934 	pop	af
   0D0E 21 1F 00      [10] 2935 	ld	hl, #0x001f
   0D11 E3            [19] 2936 	ex	(sp),hl
   0D12 CDr1Dr01      [17] 2937 	call	__8BP_colsp_1
   0D15 F1            [10] 2938 	pop	af
                           2939 ;ciclo.c:274: if (col>22){
   0D16 3E 16         [ 7] 2940 	ld	a, #0x16
   0D18 FD 21r36r00   [14] 2941 	ld	iy, #_col
   0D1C FD BE 00      [19] 2942 	cp	a, 0 (iy)
   0D1F 3E 00         [ 7] 2943 	ld	a, #0x00
   0D21 FD 9E 01      [19] 2944 	sbc	a, 1 (iy)
   0D24 E2r29r0D      [10] 2945 	jp	PO, 00667$
   0D27 EE 80         [ 7] 2946 	xor	a, #0x80
   0D29                    2947 00667$:
   0D29 F2r37r0D      [10] 2948 	jp	P, 00152$
                           2949 ;ciclo.c:275: y=y-2;
   0D2C 2Ar34r00      [16] 2950 	ld	hl, (_y)
   0D2F 2B            [ 6] 2951 	dec	hl
   0D30 2B            [ 6] 2952 	dec	hl
   0D31 22r34r00      [16] 2953 	ld	(_y), hl
                           2954 ;ciclo.c:276: goto label_880;
   0D34 C3r4Br0E      [10] 2955 	jp	00173$
   0D37                    2956 00152$:
                           2957 ;ciclo.c:279: _8BP_mover_3(31,2,0);
   0D37 21 00 00      [10] 2958 	ld	hl, #0x0000
   0D3A E5            [11] 2959 	push	hl
   0D3B 2E 02         [ 7] 2960 	ld	l, #0x02
   0D3D E5            [11] 2961 	push	hl
   0D3E 2E 1F         [ 7] 2962 	ld	l, #0x1f
   0D40 E5            [11] 2963 	push	hl
   0D41 CDrD1r04      [17] 2964 	call	__8BP_mover_3
   0D44 F1            [10] 2965 	pop	af
   0D45 F1            [10] 2966 	pop	af
   0D46 F1            [10] 2967 	pop	af
                           2968 ;ciclo.c:280: goto label_880;
   0D47 C3r4Br0E      [10] 2969 	jp	00173$
                           2970 ;ciclo.c:283: label_840:
   0D4A                    2971 00154$:
                           2972 ;ciclo.c:284: if (_basic_inkey(dw)>0) goto label_880;
   0D4A 3ArDCr00      [13] 2973 	ld	a, (_dw)
   0D4D F5            [11] 2974 	push	af
   0D4E 33            [ 6] 2975 	inc	sp
   0D4F CDr60r06      [17] 2976 	call	__basic_inkey
   0D52 33            [ 6] 2977 	inc	sp
   0D53 7D            [ 4] 2978 	ld	a, l
   0D54 B7            [ 4] 2979 	or	a, a
   0D55 C2r4Br0E      [10] 2980 	jp	NZ, 00173$
                           2981 ;ciclo.c:285: t=2; if (modo>0){
   0D58 21 02 00      [10] 2982 	ld	hl, #0x0002
   0D5B 22rD0r00      [16] 2983 	ld	(_t), hl
                           2984 ;ciclo.c:286: if (y<180){
   0D5E FD 21r34r00   [14] 2985 	ld	iy, #_y
   0D62 FD 7E 00      [19] 2986 	ld	a, 0 (iy)
   0D65 D6 B4         [ 7] 2987 	sub	a, #0xb4
   0D67 FD 7E 01      [19] 2988 	ld	a, 1 (iy)
   0D6A 17            [ 4] 2989 	rla
   0D6B 3F            [ 4] 2990 	ccf
   0D6C 1F            [ 4] 2991 	rra
   0D6D DE 80         [ 7] 2992 	sbc	a, #0x80
   0D6F 3E 00         [ 7] 2993 	ld	a, #0x00
   0D71 17            [ 4] 2994 	rla
   0D72 4F            [ 4] 2995 	ld	c, a
                           2996 ;ciclo.c:285: t=2; if (modo>0){
   0D73 3ArE0r00      [13] 2997 	ld	a,(#_modo + 0)
   0D76 B7            [ 4] 2998 	or	a, a
   0D77 CArFEr0D      [10] 2999 	jp	Z, 00167$
                           3000 ;ciclo.c:286: if (y<180){
   0D7A 79            [ 4] 3001 	ld	a, c
   0D7B B7            [ 4] 3002 	or	a, a
   0D7C CArFEr0D      [10] 3003 	jp	Z, 00167$
                           3004 ;ciclo.c:287: if (x>31 && x<42){
   0D7F 3E 1F         [ 7] 3005 	ld	a, #0x1f
   0D81 FD 21r32r00   [14] 3006 	ld	iy, #_x
   0D85 FD BE 00      [19] 3007 	cp	a, 0 (iy)
   0D88 3E 00         [ 7] 3008 	ld	a, #0x00
   0D8A FD 9E 01      [19] 3009 	sbc	a, 1 (iy)
   0D8D E2r92r0D      [10] 3010 	jp	PO, 00668$
   0D90 EE 80         [ 7] 3011 	xor	a, #0x80
   0D92                    3012 00668$:
   0D92 F2rB3r0D      [10] 3013 	jp	P, 00161$
   0D95 FD 21r32r00   [14] 3014 	ld	iy, #_x
   0D99 FD 7E 00      [19] 3015 	ld	a, 0 (iy)
   0D9C D6 2A         [ 7] 3016 	sub	a, #0x2a
   0D9E FD 7E 01      [19] 3017 	ld	a, 1 (iy)
   0DA1 17            [ 4] 3018 	rla
   0DA2 3F            [ 4] 3019 	ccf
   0DA3 1F            [ 4] 3020 	rra
   0DA4 DE 80         [ 7] 3021 	sbc	a, #0x80
   0DA6 30 0B         [12] 3022 	jr	NC,00161$
                           3023 ;ciclo.c:288: y=y+2;
   0DA8 2Ar34r00      [16] 3024 	ld	hl, (_y)
   0DAB 23            [ 6] 3025 	inc	hl
   0DAC 23            [ 6] 3026 	inc	hl
   0DAD 22r34r00      [16] 3027 	ld	(_y), hl
                           3028 ;ciclo.c:289: goto label_880;
   0DB0 C3r4Br0E      [10] 3029 	jp	00173$
   0DB3                    3030 00161$:
                           3031 ;ciclo.c:292: _8BP_mover_3(31,2,0);_8BP_colsp_1(31);
   0DB3 21 00 00      [10] 3032 	ld	hl, #0x0000
   0DB6 E5            [11] 3033 	push	hl
   0DB7 2E 02         [ 7] 3034 	ld	l, #0x02
   0DB9 E5            [11] 3035 	push	hl
   0DBA 2E 1F         [ 7] 3036 	ld	l, #0x1f
   0DBC E5            [11] 3037 	push	hl
   0DBD CDrD1r04      [17] 3038 	call	__8BP_mover_3
   0DC0 F1            [10] 3039 	pop	af
   0DC1 F1            [10] 3040 	pop	af
   0DC2 21 1F 00      [10] 3041 	ld	hl, #0x001f
   0DC5 E3            [19] 3042 	ex	(sp),hl
   0DC6 CDr1Dr01      [17] 3043 	call	__8BP_colsp_1
   0DC9 F1            [10] 3044 	pop	af
                           3045 ;ciclo.c:294: if (col>22) {
   0DCA 3E 16         [ 7] 3046 	ld	a, #0x16
   0DCC FD 21r36r00   [14] 3047 	ld	iy, #_col
   0DD0 FD BE 00      [19] 3048 	cp	a, 0 (iy)
   0DD3 3E 00         [ 7] 3049 	ld	a, #0x00
   0DD5 FD 9E 01      [19] 3050 	sbc	a, 1 (iy)
   0DD8 E2rDDr0D      [10] 3051 	jp	PO, 00669$
   0DDB EE 80         [ 7] 3052 	xor	a, #0x80
   0DDD                    3053 00669$:
   0DDD F2rEAr0D      [10] 3054 	jp	P, 00158$
                           3055 ;ciclo.c:295: y=y+2;
   0DE0 2Ar34r00      [16] 3056 	ld	hl, (_y)
   0DE3 23            [ 6] 3057 	inc	hl
   0DE4 23            [ 6] 3058 	inc	hl
   0DE5 22r34r00      [16] 3059 	ld	(_y), hl
                           3060 ;ciclo.c:296: goto label_880;
   0DE8 18 61         [12] 3061 	jr	00173$
   0DEA                    3062 00158$:
                           3063 ;ciclo.c:299: _8BP_mover_3(31,-2,0);
   0DEA 21 00 00      [10] 3064 	ld	hl, #0x0000
   0DED E5            [11] 3065 	push	hl
   0DEE 21 FE FF      [10] 3066 	ld	hl, #0xfffe
   0DF1 E5            [11] 3067 	push	hl
   0DF2 21 1F 00      [10] 3068 	ld	hl, #0x001f
   0DF5 E5            [11] 3069 	push	hl
   0DF6 CDrD1r04      [17] 3070 	call	__8BP_mover_3
   0DF9 F1            [10] 3071 	pop	af
   0DFA F1            [10] 3072 	pop	af
   0DFB F1            [10] 3073 	pop	af
                           3074 ;ciclo.c:300: goto label_880;
   0DFC 18 4D         [12] 3075 	jr	00173$
   0DFE                    3076 00167$:
                           3077 ;ciclo.c:306: if (y<180){
   0DFE 79            [ 4] 3078 	ld	a, c
   0DFF B7            [ 4] 3079 	or	a, a
   0E00 28 49         [12] 3080 	jr	Z,00173$
                           3081 ;ciclo.c:307: _8BP_mover_3(31,2,0);
   0E02 21 00 00      [10] 3082 	ld	hl, #0x0000
   0E05 E5            [11] 3083 	push	hl
   0E06 2E 02         [ 7] 3084 	ld	l, #0x02
   0E08 E5            [11] 3085 	push	hl
   0E09 2E 1F         [ 7] 3086 	ld	l, #0x1f
   0E0B E5            [11] 3087 	push	hl
   0E0C CDrD1r04      [17] 3088 	call	__8BP_mover_3
   0E0F F1            [10] 3089 	pop	af
   0E10 F1            [10] 3090 	pop	af
                           3091 ;ciclo.c:308: _8BP_colsp_1(31);
   0E11 21 1F 00      [10] 3092 	ld	hl, #0x001f
   0E14 E3            [19] 3093 	ex	(sp),hl
   0E15 CDr1Dr01      [17] 3094 	call	__8BP_colsp_1
   0E18 F1            [10] 3095 	pop	af
                           3096 ;ciclo.c:310: if (col>22){
   0E19 3E 16         [ 7] 3097 	ld	a, #0x16
   0E1B FD 21r36r00   [14] 3098 	ld	iy, #_col
   0E1F FD BE 00      [19] 3099 	cp	a, 0 (iy)
   0E22 3E 00         [ 7] 3100 	ld	a, #0x00
   0E24 FD 9E 01      [19] 3101 	sbc	a, 1 (iy)
   0E27 E2r2Cr0E      [10] 3102 	jp	PO, 00670$
   0E2A EE 80         [ 7] 3103 	xor	a, #0x80
   0E2C                    3104 00670$:
   0E2C F2r39r0E      [10] 3105 	jp	P, 00169$
                           3106 ;ciclo.c:311: y=y+2;
   0E2F 2Ar34r00      [16] 3107 	ld	hl, (_y)
   0E32 23            [ 6] 3108 	inc	hl
   0E33 23            [ 6] 3109 	inc	hl
   0E34 22r34r00      [16] 3110 	ld	(_y), hl
   0E37 18 12         [12] 3111 	jr	00173$
   0E39                    3112 00169$:
                           3113 ;ciclo.c:314: _8BP_mover_3(31,-2,0);
   0E39 21 00 00      [10] 3114 	ld	hl, #0x0000
   0E3C E5            [11] 3115 	push	hl
   0E3D 21 FE FF      [10] 3116 	ld	hl, #0xfffe
   0E40 E5            [11] 3117 	push	hl
   0E41 21 1F 00      [10] 3118 	ld	hl, #0x001f
   0E44 E5            [11] 3119 	push	hl
   0E45 CDrD1r04      [17] 3120 	call	__8BP_mover_3
   0E48 F1            [10] 3121 	pop	af
   0E49 F1            [10] 3122 	pop	af
   0E4A F1            [10] 3123 	pop	af
                           3124 ;ciclo.c:318: label_880:
   0E4B                    3125 00173$:
                           3126 ;ciclo.c:319: if (_basic_inkey(der)>0) goto label_910;
   0E4B 3ArDEr00      [13] 3127 	ld	a, (_der)
   0E4E F5            [11] 3128 	push	af
   0E4F 33            [ 6] 3129 	inc	sp
   0E50 CDr60r06      [17] 3130 	call	__basic_inkey
   0E53 33            [ 6] 3131 	inc	sp
   0E54 7D            [ 4] 3132 	ld	a, l
   0E55 B7            [ 4] 3133 	or	a, a
   0E56 C2rE8r0E      [10] 3134 	jp	NZ, 00189$
                           3135 ;ciclo.c:321: t=t+3;
   0E59 21rD0r00      [10] 3136 	ld	hl, #_t
   0E5C 7E            [ 7] 3137 	ld	a, (hl)
   0E5D C6 03         [ 7] 3138 	add	a, #0x03
   0E5F 77            [ 7] 3139 	ld	(hl), a
   0E60 30 02         [12] 3140 	jr	NC,00671$
   0E62 23            [ 6] 3141 	inc	hl
   0E63 34            [11] 3142 	inc	(hl)
   0E64                    3143 00671$:
                           3144 ;ciclo.c:322: if (x<65) goto label_890;
   0E64 FD 21r32r00   [14] 3145 	ld	iy, #_x
   0E68 FD 7E 00      [19] 3146 	ld	a, 0 (iy)
   0E6B D6 41         [ 7] 3147 	sub	a, #0x41
   0E6D FD 7E 01      [19] 3148 	ld	a, 1 (iy)
   0E70 17            [ 4] 3149 	rla
   0E71 3F            [ 4] 3150 	ccf
   0E72 1F            [ 4] 3151 	rra
   0E73 DE 80         [ 7] 3152 	sbc	a, #0x80
   0E75 D2r91r0F      [10] 3153 	jp	NC, 00208$
                           3154 ;ciclo.c:326: if (modo>0) {
   0E78 3ArE0r00      [13] 3155 	ld	a,(#_modo + 0)
   0E7B B7            [ 4] 3156 	or	a, a
   0E7C 28 33         [12] 3157 	jr	Z,00185$
                           3158 ;ciclo.c:327: if (x>31 && x<41){
   0E7E 3E 1F         [ 7] 3159 	ld	a, #0x1f
   0E80 FD 21r32r00   [14] 3160 	ld	iy, #_x
   0E84 FD BE 00      [19] 3161 	cp	a, 0 (iy)
   0E87 3E 00         [ 7] 3162 	ld	a, #0x00
   0E89 FD 9E 01      [19] 3163 	sbc	a, 1 (iy)
   0E8C E2r91r0E      [10] 3164 	jp	PO, 00672$
   0E8F EE 80         [ 7] 3165 	xor	a, #0x80
   0E91                    3166 00672$:
   0E91 F2rB1r0E      [10] 3167 	jp	P, 00185$
   0E94 FD 21r32r00   [14] 3168 	ld	iy, #_x
   0E98 FD 7E 00      [19] 3169 	ld	a, 0 (iy)
   0E9B D6 29         [ 7] 3170 	sub	a, #0x29
   0E9D FD 7E 01      [19] 3171 	ld	a, 1 (iy)
   0EA0 17            [ 4] 3172 	rla
   0EA1 3F            [ 4] 3173 	ccf
   0EA2 1F            [ 4] 3174 	rra
   0EA3 DE 80         [ 7] 3175 	sbc	a, #0x80
   0EA5 30 0A         [12] 3176 	jr	NC,00185$
                           3177 ;ciclo.c:328: x=x+1;
   0EA7 2Ar32r00      [16] 3178 	ld	hl, (_x)
   0EAA 23            [ 6] 3179 	inc	hl
   0EAB 22r32r00      [16] 3180 	ld	(_x), hl
                           3181 ;ciclo.c:329: goto label_960;
   0EAE C3r91r0F      [10] 3182 	jp	00208$
   0EB1                    3183 00185$:
                           3184 ;ciclo.c:334: _8BP_mover_3(31,0,1);_8BP_colsp_1(31);
   0EB1 21 01 00      [10] 3185 	ld	hl, #0x0001
   0EB4 E5            [11] 3186 	push	hl
   0EB5 2E 00         [ 7] 3187 	ld	l, #0x00
   0EB7 E5            [11] 3188 	push	hl
   0EB8 2E 1F         [ 7] 3189 	ld	l, #0x1f
   0EBA E5            [11] 3190 	push	hl
   0EBB CDrD1r04      [17] 3191 	call	__8BP_mover_3
   0EBE F1            [10] 3192 	pop	af
   0EBF F1            [10] 3193 	pop	af
   0EC0 21 1F 00      [10] 3194 	ld	hl, #0x001f
   0EC3 E3            [19] 3195 	ex	(sp),hl
   0EC4 CDr1Dr01      [17] 3196 	call	__8BP_colsp_1
   0EC7 F1            [10] 3197 	pop	af
                           3198 ;ciclo.c:336: if (col>22){
   0EC8 3E 16         [ 7] 3199 	ld	a, #0x16
   0ECA FD 21r36r00   [14] 3200 	ld	iy, #_col
   0ECE FD BE 00      [19] 3201 	cp	a, 0 (iy)
   0ED1 3E 00         [ 7] 3202 	ld	a, #0x00
   0ED3 FD 9E 01      [19] 3203 	sbc	a, 1 (iy)
   0ED6 E2rDBr0E      [10] 3204 	jp	PO, 00673$
   0ED9 EE 80         [ 7] 3205 	xor	a, #0x80
   0EDB                    3206 00673$:
   0EDB F2r91r0F      [10] 3207 	jp	P, 00208$
                           3208 ;ciclo.c:337: x=x+1;goto label_960;
   0EDE 2Ar32r00      [16] 3209 	ld	hl, (_x)
   0EE1 23            [ 6] 3210 	inc	hl
   0EE2 22r32r00      [16] 3211 	ld	(_x), hl
   0EE5 C3r91r0F      [10] 3212 	jp	00208$
                           3213 ;ciclo.c:340: label_910:
   0EE8                    3214 00189$:
                           3215 ;ciclo.c:341: if (_basic_inkey(iz)>0) goto label_950;
   0EE8 3ArDDr00      [13] 3216 	ld	a, (_iz)
   0EEB F5            [11] 3217 	push	af
   0EEC 33            [ 6] 3218 	inc	sp
   0EED CDr60r06      [17] 3219 	call	__basic_inkey
   0EF0 33            [ 6] 3220 	inc	sp
   0EF1 7D            [ 4] 3221 	ld	a, l
   0EF2 B7            [ 4] 3222 	or	a, a
   0EF3 C2r84r0F      [10] 3223 	jp	NZ, 00204$
                           3224 ;ciclo.c:343: t=t+6; if (x>8) goto label_920;
   0EF6 21rD0r00      [10] 3225 	ld	hl, #_t
   0EF9 7E            [ 7] 3226 	ld	a, (hl)
   0EFA C6 06         [ 7] 3227 	add	a, #0x06
   0EFC 77            [ 7] 3228 	ld	(hl), a
   0EFD 30 02         [12] 3229 	jr	NC,00674$
   0EFF 23            [ 6] 3230 	inc	hl
   0F00 34            [11] 3231 	inc	(hl)
   0F01                    3232 00674$:
   0F01 3E 08         [ 7] 3233 	ld	a, #0x08
   0F03 FD 21r32r00   [14] 3234 	ld	iy, #_x
   0F07 FD BE 00      [19] 3235 	cp	a, 0 (iy)
   0F0A 3E 00         [ 7] 3236 	ld	a, #0x00
   0F0C FD 9E 01      [19] 3237 	sbc	a, 1 (iy)
   0F0F E2r14r0F      [10] 3238 	jp	PO, 00675$
   0F12 EE 80         [ 7] 3239 	xor	a, #0x80
   0F14                    3240 00675$:
   0F14 F2r84r0F      [10] 3241 	jp	P, 00204$
                           3242 ;ciclo.c:348: if (modo>0) {
   0F17 3ArE0r00      [13] 3243 	ld	a,(#_modo + 0)
   0F1A B7            [ 4] 3244 	or	a, a
   0F1B 28 32         [12] 3245 	jr	Z,00201$
                           3246 ;ciclo.c:349: if(x>33 && x<42){
   0F1D 3E 21         [ 7] 3247 	ld	a, #0x21
   0F1F FD 21r32r00   [14] 3248 	ld	iy, #_x
   0F23 FD BE 00      [19] 3249 	cp	a, 0 (iy)
   0F26 3E 00         [ 7] 3250 	ld	a, #0x00
   0F28 FD 9E 01      [19] 3251 	sbc	a, 1 (iy)
   0F2B E2r30r0F      [10] 3252 	jp	PO, 00676$
   0F2E EE 80         [ 7] 3253 	xor	a, #0x80
   0F30                    3254 00676$:
   0F30 F2r4Fr0F      [10] 3255 	jp	P, 00201$
   0F33 FD 21r32r00   [14] 3256 	ld	iy, #_x
   0F37 FD 7E 00      [19] 3257 	ld	a, 0 (iy)
   0F3A D6 2A         [ 7] 3258 	sub	a, #0x2a
   0F3C FD 7E 01      [19] 3259 	ld	a, 1 (iy)
   0F3F 17            [ 4] 3260 	rla
   0F40 3F            [ 4] 3261 	ccf
   0F41 1F            [ 4] 3262 	rra
   0F42 DE 80         [ 7] 3263 	sbc	a, #0x80
   0F44 30 09         [12] 3264 	jr	NC,00201$
                           3265 ;ciclo.c:350: x=x-1;goto label_960;
   0F46 2Ar32r00      [16] 3266 	ld	hl, (_x)
   0F49 2B            [ 6] 3267 	dec	hl
   0F4A 22r32r00      [16] 3268 	ld	(_x), hl
   0F4D 18 42         [12] 3269 	jr	00208$
   0F4F                    3270 00201$:
                           3271 ;ciclo.c:354: _8BP_mover_3(31,0,-1);_8BP_colsp_1(31); if (col>22) x=x-1;
   0F4F 21 FF FF      [10] 3272 	ld	hl, #0xffff
   0F52 E5            [11] 3273 	push	hl
   0F53 21 00 00      [10] 3274 	ld	hl, #0x0000
   0F56 E5            [11] 3275 	push	hl
   0F57 2E 1F         [ 7] 3276 	ld	l, #0x1f
   0F59 E5            [11] 3277 	push	hl
   0F5A CDrD1r04      [17] 3278 	call	__8BP_mover_3
   0F5D F1            [10] 3279 	pop	af
   0F5E F1            [10] 3280 	pop	af
   0F5F 21 1F 00      [10] 3281 	ld	hl, #0x001f
   0F62 E3            [19] 3282 	ex	(sp),hl
   0F63 CDr1Dr01      [17] 3283 	call	__8BP_colsp_1
   0F66 F1            [10] 3284 	pop	af
   0F67 3E 16         [ 7] 3285 	ld	a, #0x16
   0F69 FD 21r36r00   [14] 3286 	ld	iy, #_col
   0F6D FD BE 00      [19] 3287 	cp	a, 0 (iy)
   0F70 3E 00         [ 7] 3288 	ld	a, #0x00
   0F72 FD 9E 01      [19] 3289 	sbc	a, 1 (iy)
   0F75 E2r7Ar0F      [10] 3290 	jp	PO, 00677$
   0F78 EE 80         [ 7] 3291 	xor	a, #0x80
   0F7A                    3292 00677$:
   0F7A F2r84r0F      [10] 3293 	jp	P, 00204$
   0F7D 2Ar32r00      [16] 3294 	ld	hl, (_x)
   0F80 2B            [ 6] 3295 	dec	hl
   0F81 22r32r00      [16] 3296 	ld	(_x), hl
                           3297 ;ciclo.c:357: label_950:
   0F84                    3298 00204$:
                           3299 ;ciclo.c:358: if (t!=0) goto label_960;else goto label_1070;
   0F84 FD 21rD0r00   [14] 3300 	ld	iy, #_t
   0F88 FD 7E 01      [19] 3301 	ld	a, 1 (iy)
   0F8B FD B6 00      [19] 3302 	or	a, 0 (iy)
   0F8E CAr61r10      [10] 3303 	jp	Z, 00223$
                           3304 ;ciclo.c:360: label_960:
   0F91                    3305 00208$:
                           3306 ;ciclo.c:362: dif=dir-po[t];t=0;
   0F91 2ArD0r00      [16] 3307 	ld	hl, (_t)
   0F94 29            [11] 3308 	add	hl, hl
   0F95 11r3Cr00      [10] 3309 	ld	de, #_po
   0F98 19            [11] 3310 	add	hl, de
   0F99 4E            [ 7] 3311 	ld	c, (hl)
   0F9A 23            [ 6] 3312 	inc	hl
   0F9B 46            [ 7] 3313 	ld	b, (hl)
   0F9C 21rE5r00      [10] 3314 	ld	hl, #_dif
   0F9F FD 21rE3r00   [14] 3315 	ld	iy, #_dir
   0FA3 FD 7E 00      [19] 3316 	ld	a, 0 (iy)
   0FA6 91            [ 4] 3317 	sub	a, c
   0FA7 77            [ 7] 3318 	ld	(hl), a
   0FA8 FD 7E 01      [19] 3319 	ld	a, 1 (iy)
   0FAB 98            [ 4] 3320 	sbc	a, b
   0FAC 23            [ 6] 3321 	inc	hl
   0FAD 77            [ 7] 3322 	ld	(hl), a
   0FAE 21 00 00      [10] 3323 	ld	hl, #0x0000
   0FB1 22rD0r00      [16] 3324 	ld	(_t), hl
                           3325 ;ciclo.c:363: if (dif!=0) goto label_980;else goto label_1040;
   0FB4 FD 21rE5r00   [14] 3326 	ld	iy, #_dif
   0FB8 FD 7E 01      [19] 3327 	ld	a, 1 (iy)
   0FBB FD B6 00      [19] 3328 	or	a, 0 (iy)
   0FBE CAr47r10      [10] 3329 	jp	Z, 00222$
                           3330 ;ciclo.c:368: dir=dir-1; goto label_1010;
   0FC1 ED 4BrE3r00   [20] 3331 	ld	bc, (_dir)
   0FC5 0B            [ 6] 3332 	dec	bc
                           3333 ;ciclo.c:371: dir=dir+1;goto label_1020;
   0FC6 2ArE3r00      [16] 3334 	ld	hl, (_dir)
   0FC9 23            [ 6] 3335 	inc	hl
   0FCA E3            [19] 3336 	ex	(sp), hl
                           3337 ;ciclo.c:366: if (dif<0){
   0FCB FD CB 01 7E   [20] 3338 	bit	7,1 (iy)
   0FCF 28 22         [12] 3339 	jr	Z,00217$
                           3340 ;ciclo.c:367: if (dif<-8){
   0FD1 FD 7E 00      [19] 3341 	ld	a, 0 (iy)
   0FD4 D6 F8         [ 7] 3342 	sub	a, #0xf8
   0FD6 FD 7E 01      [19] 3343 	ld	a, 1 (iy)
   0FD9 17            [ 4] 3344 	rla
   0FDA 3F            [ 4] 3345 	ccf
   0FDB 1F            [ 4] 3346 	rra
   0FDC DE 7F         [ 7] 3347 	sbc	a, #0x7f
   0FDE 30 06         [12] 3348 	jr	NC,00214$
                           3349 ;ciclo.c:368: dir=dir-1; goto label_1010;
   0FE0 ED 43rE3r00   [20] 3350 	ld	(_dir), bc
   0FE4 18 38         [12] 3351 	jr	00220$
   0FE6                    3352 00214$:
                           3353 ;ciclo.c:371: dir=dir+1;goto label_1020;
   0FE6 11rE3r00      [10] 3354 	ld	de, #_dir
   0FE9 21 00 00      [10] 3355 	ld	hl, #0
   0FEC 39            [11] 3356 	add	hl, sp
   0FED ED A0         [16] 3357 	ldi
   0FEF ED A0         [16] 3358 	ldi
   0FF1 18 3B         [12] 3359 	jr	00221$
   0FF3                    3360 00217$:
                           3361 ;ciclo.c:374: if (dif>8) {
   0FF3 3E 08         [ 7] 3362 	ld	a, #0x08
   0FF5 FD 21rE5r00   [14] 3363 	ld	iy, #_dif
   0FF9 FD BE 00      [19] 3364 	cp	a, 0 (iy)
   0FFC 3E 00         [ 7] 3365 	ld	a, #0x00
   0FFE FD 9E 01      [19] 3366 	sbc	a, 1 (iy)
   1001 E2r06r10      [10] 3367 	jp	PO, 00678$
   1004 EE 80         [ 7] 3368 	xor	a, #0x80
   1006                    3369 00678$:
   1006 F2r1Ar10      [10] 3370 	jp	P, 00219$
                           3371 ;ciclo.c:375: dir=(1+dir) & 15; goto label_1020; // a lo mejor puedo quitar los parentesis
   1009 21 00 00      [10] 3372 	ld	hl, #0+0
   100C 39            [11] 3373 	add	hl, sp
   100D 7E            [ 7] 3374 	ld	a, (hl)
   100E E6 0F         [ 7] 3375 	and	a, #0x0f
   1010 32rE3r00      [13] 3376 	ld	(_dir+0), a
   1013 21rE4r00      [10] 3377 	ld	hl,#_dir + 1
   1016 36 00         [10] 3378 	ld	(hl), #0x00
   1018 18 14         [12] 3379 	jr	00221$
   101A                    3380 00219$:
                           3381 ;ciclo.c:377: dir=dir-1;
   101A ED 43rE3r00   [20] 3382 	ld	(_dir), bc
                           3383 ;ciclo.c:379: label_1010:
   101E                    3384 00220$:
                           3385 ;ciclo.c:380: dir=dir & 15;
   101E FD 21rE3r00   [14] 3386 	ld	iy, #_dir
   1022 FD 7E 00      [19] 3387 	ld	a, 0 (iy)
   1025 E6 0F         [ 7] 3388 	and	a, #0x0f
   1027 32rE3r00      [13] 3389 	ld	(_dir+0), a
   102A FD 36 01 00   [19] 3390 	ld	1 (iy), #0x00
                           3391 ;ciclo.c:382: label_1020:
   102E                    3392 00221$:
                           3393 ;ciclo.c:383: _8BP_setupsp_3(31,7,seq[dir]);
   102E 2ArE3r00      [16] 3394 	ld	hl, (_dir)
   1031 29            [11] 3395 	add	hl, hl
   1032 11r4Er00      [10] 3396 	ld	de, #_seq
   1035 19            [11] 3397 	add	hl, de
   1036 4E            [ 7] 3398 	ld	c, (hl)
   1037 23            [ 6] 3399 	inc	hl
   1038 46            [ 7] 3400 	ld	b, (hl)
   1039 C5            [11] 3401 	push	bc
   103A 21 07 00      [10] 3402 	ld	hl, #0x0007
   103D E5            [11] 3403 	push	hl
   103E 2E 1F         [ 7] 3404 	ld	l, #0x1f
   1040 E5            [11] 3405 	push	hl
   1041 CDr95r03      [17] 3406 	call	__8BP_setupsp_3
   1044 F1            [10] 3407 	pop	af
   1045 F1            [10] 3408 	pop	af
   1046 F1            [10] 3409 	pop	af
                           3410 ;ciclo.c:386: label_1040:
   1047                    3411 00222$:
                           3412 ;ciclo.c:387: _8BP_anima_1(31);
   1047 21 1F 00      [10] 3413 	ld	hl, #0x001f
   104A E5            [11] 3414 	push	hl
   104B CDr3Dr00      [17] 3415 	call	__8BP_anima_1
   104E F1            [10] 3416 	pop	af
                           3417 ;ciclo.c:388: _8BP_locatesp_3(31,y,x);
   104F 2Ar32r00      [16] 3418 	ld	hl, (_x)
   1052 E5            [11] 3419 	push	hl
   1053 2Ar34r00      [16] 3420 	ld	hl, (_y)
   1056 E5            [11] 3421 	push	hl
   1057 3E 1F         [ 7] 3422 	ld	a, #0x1f
   1059 F5            [11] 3423 	push	af
   105A 33            [ 6] 3424 	inc	sp
   105B CDr6Dr01      [17] 3425 	call	__8BP_locatesp_3
   105E F1            [10] 3426 	pop	af
   105F F1            [10] 3427 	pop	af
   1060 33            [ 6] 3428 	inc	sp
                           3429 ;ciclo.c:391: label_1070:
   1061                    3430 00223$:
                           3431 ;ciclo.c:392: if (_basic_inkey(fr)>0){
   1061 3ArDFr00      [13] 3432 	ld	a, (_fr)
   1064 F5            [11] 3433 	push	af
   1065 33            [ 6] 3434 	inc	sp
   1066 CDr60r06      [17] 3435 	call	__basic_inkey
   1069 33            [ 6] 3436 	inc	sp
   106A 7D            [ 4] 3437 	ld	a, l
   106B B7            [ 4] 3438 	or	a, a
   106C 28 16         [12] 3439 	jr	Z,00228$
                           3440 ;ciclo.c:393: if (pres>0){
   106E FD 21rE1r00   [14] 3441 	ld	iy, #_pres
   1072 FD 7E 00      [19] 3442 	ld	a, 0 (iy)
   1075 B7            [ 4] 3443 	or	a, a
   1076 CArFEr10      [10] 3444 	jp	Z, 00235$
                           3445 ;ciclo.c:394: pres=0;bomb=0;goto label_1160;
   1079 FD 36 00 00   [19] 3446 	ld	0 (iy), #0x00
   107D 21rE2r00      [10] 3447 	ld	hl,#_bomb + 0
   1080 36 00         [10] 3448 	ld	(hl), #0x00
   1082 18 7A         [12] 3449 	jr	00235$
                           3450 ;ciclo.c:396: else goto label_1160;
   1084                    3451 00228$:
                           3452 ;ciclo.c:398: if (pres>0){
   1084 3ArE1r00      [13] 3453 	ld	a,(#_pres + 0)
   1087 B7            [ 4] 3454 	or	a, a
   1088 28 15         [12] 3455 	jr	Z,00233$
                           3456 ;ciclo.c:399: bomb=bomb+1;
   108A FD 21rE2r00   [14] 3457 	ld	iy, #_bomb
   108E FD 7E 00      [19] 3458 	ld	a, 0 (iy)
   1091 3C            [ 4] 3459 	inc	a
   1092 32rE2r00      [13] 3460 	ld	(_bomb+0), a
                           3461 ;ciclo.c:400: if (bomb<8) goto label_1160;
   1095 FD 7E 00      [19] 3462 	ld	a, 0 (iy)
   1098 D6 08         [ 7] 3463 	sub	a, #0x08
   109A D2r78r14      [10] 3464 	jp	NC, 00276$
   109D 18 5F         [12] 3465 	jr	00235$
                           3466 ;ciclo.c:401: else goto label_1430;
   109F                    3467 00233$:
                           3468 ;ciclo.c:403: i=23+ (i % 6);
   109F 21 06 00      [10] 3469 	ld	hl, #0x0006
   10A2 E5            [11] 3470 	push	hl
   10A3 2ArD2r00      [16] 3471 	ld	hl, (_i)
   10A6 E5            [11] 3472 	push	hl
   10A7 CDr00r00      [17] 3473 	call	__modsint
   10AA F1            [10] 3474 	pop	af
   10AB F1            [10] 3475 	pop	af
   10AC 01 17 00      [10] 3476 	ld	bc,#0x0017
   10AF 09            [11] 3477 	add	hl,bc
   10B0 22rD2r00      [16] 3478 	ld	(_i), hl
                           3479 ;ciclo.c:406: _8BP_setupsp_3(i,15,dir);
   10B3 2ArE3r00      [16] 3480 	ld	hl, (_dir)
   10B6 E5            [11] 3481 	push	hl
   10B7 21 0F 00      [10] 3482 	ld	hl, #0x000f
   10BA E5            [11] 3483 	push	hl
   10BB 2ArD2r00      [16] 3484 	ld	hl, (_i)
   10BE E5            [11] 3485 	push	hl
   10BF CDr95r03      [17] 3486 	call	__8BP_setupsp_3
   10C2 F1            [10] 3487 	pop	af
   10C3 F1            [10] 3488 	pop	af
   10C4 F1            [10] 3489 	pop	af
                           3490 ;ciclo.c:407: _8BP_locatesp_3(i,y+4,x+2);
   10C5 ED 5Br32r00   [20] 3491 	ld	de, (_x)
   10C9 13            [ 6] 3492 	inc	de
   10CA 13            [ 6] 3493 	inc	de
   10CB FD 21r34r00   [14] 3494 	ld	iy, #_y
   10CF FD 7E 00      [19] 3495 	ld	a, 0 (iy)
   10D2 C6 04         [ 7] 3496 	add	a, #0x04
   10D4 4F            [ 4] 3497 	ld	c, a
   10D5 FD 7E 01      [19] 3498 	ld	a, 1 (iy)
   10D8 CE 00         [ 7] 3499 	adc	a, #0x00
   10DA 47            [ 4] 3500 	ld	b, a
   10DB 3ArD2r00      [13] 3501 	ld	a,(#_i + 0)
   10DE D5            [11] 3502 	push	de
   10DF C5            [11] 3503 	push	bc
   10E0 F5            [11] 3504 	push	af
   10E1 33            [ 6] 3505 	inc	sp
   10E2 CDr6Dr01      [17] 3506 	call	__8BP_locatesp_3
   10E5 F1            [10] 3507 	pop	af
   10E6 F1            [10] 3508 	pop	af
   10E7 33            [ 6] 3509 	inc	sp
                           3510 ;ciclo.c:408: _8BP_setupsp_3(i,0,233);
   10E8 21 E9 00      [10] 3511 	ld	hl, #0x00e9
   10EB E5            [11] 3512 	push	hl
   10EC 2E 00         [ 7] 3513 	ld	l, #0x00
   10EE E5            [11] 3514 	push	hl
   10EF 2ArD2r00      [16] 3515 	ld	hl, (_i)
   10F2 E5            [11] 3516 	push	hl
   10F3 CDr95r03      [17] 3517 	call	__8BP_setupsp_3
   10F6 F1            [10] 3518 	pop	af
   10F7 F1            [10] 3519 	pop	af
   10F8 F1            [10] 3520 	pop	af
                           3521 ;ciclo.c:409: pres=1;
   10F9 21rE1r00      [10] 3522 	ld	hl,#_pres + 0
   10FC 36 01         [10] 3523 	ld	(hl), #0x01
                           3524 ;ciclo.c:412: label_1160:
   10FE                    3525 00235$:
                           3526 ;ciclo.c:413: _8BP_autoall();
   10FE CDr67r00      [17] 3527 	call	__8BP_autoall
                           3528 ;ciclo.c:414: if (modo>0) goto label_1200;
   1101 3ArE0r00      [13] 3529 	ld	a,(#_modo + 0)
   1104 B7            [ 4] 3530 	or	a, a
   1105 20 06         [12] 3531 	jr	NZ,00238$
                           3532 ;ciclo.c:417: _8BP_printspall();goto label_1230;
   1107 CDr0Ar03      [17] 3533 	call	__8BP_printspall
   110A C3r9Fr11      [10] 3534 	jp	00242$
                           3535 ;ciclo.c:421: label_1200:
   110D                    3536 00238$:
                           3537 ;ciclo.c:422: if (m>pfin1) {
   110D 21rE9r00      [10] 3538 	ld	hl, #_pfin1
   1110 7E            [ 7] 3539 	ld	a, (hl)
   1111 FD 21rBEr00   [14] 3540 	ld	iy, #_m
   1115 FD 96 00      [19] 3541 	sub	a, 0 (iy)
   1118 23            [ 6] 3542 	inc	hl
   1119 7E            [ 7] 3543 	ld	a, (hl)
   111A FD 9E 01      [19] 3544 	sbc	a, 1 (iy)
   111D E2r22r11      [10] 3545 	jp	PO, 00679$
   1120 EE 80         [ 7] 3546 	xor	a, #0x80
   1122                    3547 00679$:
   1122 F2r4Br11      [10] 3548 	jp	P, 00240$
                           3549 ;ciclo.c:423: _8BP_setlimits_4(8,72,0,m+p2);
   1125 21rEFr00      [10] 3550 	ld	hl, #_p2
   1128 FD 21rBEr00   [14] 3551 	ld	iy, #_m
   112C FD 7E 00      [19] 3552 	ld	a, 0 (iy)
   112F 86            [ 7] 3553 	add	a, (hl)
   1130 4F            [ 4] 3554 	ld	c, a
   1131 FD 7E 01      [19] 3555 	ld	a, 1 (iy)
   1134 23            [ 6] 3556 	inc	hl
   1135 8E            [ 7] 3557 	adc	a, (hl)
   1136 47            [ 4] 3558 	ld	b, a
   1137 C5            [11] 3559 	push	bc
   1138 21 00 00      [10] 3560 	ld	hl, #0x0000
   113B E5            [11] 3561 	push	hl
   113C 2E 48         [ 7] 3562 	ld	l, #0x48
   113E E5            [11] 3563 	push	hl
   113F 2E 08         [ 7] 3564 	ld	l, #0x08
   1141 E5            [11] 3565 	push	hl
   1142 CDr4Dr03      [17] 3566 	call	__8BP_setlimits_4
   1145 F1            [10] 3567 	pop	af
   1146 F1            [10] 3568 	pop	af
   1147 F1            [10] 3569 	pop	af
   1148 F1            [10] 3570 	pop	af
   1149 18 35         [12] 3571 	jr	00241$
   114B                    3572 00240$:
                           3573 ;ciclo.c:425: _8BP_setlimits_4(8,72,m+p1,200);
   114B 21rEDr00      [10] 3574 	ld	hl, #_p1
   114E D5            [11] 3575 	push	de
   114F FD 21 02 00   [14] 3576 	ld	iy, #2
   1153 FD 39         [15] 3577 	add	iy, sp
   1155 FD E5         [15] 3578 	push	iy
   1157 D1            [10] 3579 	pop	de
   1158 FD 21rBEr00   [14] 3580 	ld	iy, #_m
   115C FD 7E 00      [19] 3581 	ld	a, 0 (iy)
   115F 86            [ 7] 3582 	add	a, (hl)
   1160 12            [ 7] 3583 	ld	(de), a
   1161 FD 7E 01      [19] 3584 	ld	a, 1 (iy)
   1164 23            [ 6] 3585 	inc	hl
   1165 8E            [ 7] 3586 	adc	a, (hl)
   1166 13            [ 6] 3587 	inc	de
   1167 12            [ 7] 3588 	ld	(de), a
   1168 D1            [10] 3589 	pop	de
   1169 21 C8 00      [10] 3590 	ld	hl, #0x00c8
   116C 4D            [ 4] 3591 	ld	c, l
   116D 44            [ 4] 3592 	ld	b, h
   116E E1            [10] 3593 	pop	hl
   116F E5            [11] 3594 	push	hl
   1170 C5            [11] 3595 	push	bc
   1171 E5            [11] 3596 	push	hl
   1172 21 48 00      [10] 3597 	ld	hl, #0x0048
   1175 E5            [11] 3598 	push	hl
   1176 2E 08         [ 7] 3599 	ld	l, #0x08
   1178 E5            [11] 3600 	push	hl
   1179 CDr4Dr03      [17] 3601 	call	__8BP_setlimits_4
   117C F1            [10] 3602 	pop	af
   117D F1            [10] 3603 	pop	af
   117E F1            [10] 3604 	pop	af
   117F F1            [10] 3605 	pop	af
   1180                    3606 00241$:
                           3607 ;ciclo.c:427: _8BP_printsp_1(31);_8BP_setlimits_4(8,72,0,200);_8BP_printspall();
   1180 21 1F 00      [10] 3608 	ld	hl, #0x001f
   1183 E5            [11] 3609 	push	hl
   1184 CDrB6r02      [17] 3610 	call	__8BP_printsp_1
   1187 F1            [10] 3611 	pop	af
   1188 21 C8 00      [10] 3612 	ld	hl, #0x00c8
   118B E5            [11] 3613 	push	hl
   118C 2E 00         [ 7] 3614 	ld	l, #0x00
   118E E5            [11] 3615 	push	hl
   118F 2E 48         [ 7] 3616 	ld	l, #0x48
   1191 E5            [11] 3617 	push	hl
   1192 2E 08         [ 7] 3618 	ld	l, #0x08
   1194 E5            [11] 3619 	push	hl
   1195 CDr4Dr03      [17] 3620 	call	__8BP_setlimits_4
   1198 F1            [10] 3621 	pop	af
   1199 F1            [10] 3622 	pop	af
   119A F1            [10] 3623 	pop	af
   119B F1            [10] 3624 	pop	af
   119C CDr0Ar03      [17] 3625 	call	__8BP_printspall
                           3626 ;ciclo.c:430: label_1230:
   119F                    3627 00242$:
                           3628 ;ciclo.c:431: if (c & 1) {
   119F 21r30r00      [10] 3629 	ld	hl,#_c+0
   11A2 CB 46         [12] 3630 	bit	0, (hl)
   11A4 28 17         [12] 3631 	jr	Z,00246$
                           3632 ;ciclo.c:433: _8BP_colspall();
   11A6 CDr35r01      [17] 3633 	call	__8BP_colspall
                           3634 ;ciclo.c:434: if (cor==32) goto label_CICLO;
   11A9 FD 21r38r00   [14] 3635 	ld	iy, #_cor
   11AD FD 7E 00      [19] 3636 	ld	a, 0 (iy)
   11B0 D6 20         [ 7] 3637 	sub	a, #0x20
   11B2 FD B6 01      [19] 3638 	or	a, 1 (iy)
   11B5 CAr92r0B      [10] 3639 	jp	Z,00112$
   11B8 18 0C         [12] 3640 	jr	00247$
   11BA C3r92r0B      [10] 3641 	jp	00112$
   11BD                    3642 00246$:
                           3643 ;ciclo.c:436: cor=32;goto label_CICLO;
   11BD 21 20 00      [10] 3644 	ld	hl, #0x0020
   11C0 22r38r00      [16] 3645 	ld	(_cor), hl
   11C3 C3r92r0B      [10] 3646 	jp	00112$
   11C6                    3647 00247$:
                           3648 ;ciclo.c:438: if (cor==31) goto label_1360;
   11C6 FD 21r38r00   [14] 3649 	ld	iy, #_cor
   11CA FD 7E 00      [19] 3650 	ld	a, 0 (iy)
   11CD D6 1F         [ 7] 3651 	sub	a, #0x1f
   11CF FD B6 01      [19] 3652 	or	a, 1 (iy)
   11D2 CAr6Br13      [10] 3653 	jp	Z,00268$
                           3654 ;ciclo.c:440: if (cor<29){
   11D5 FD 7E 00      [19] 3655 	ld	a, 0 (iy)
   11D8 D6 1D         [ 7] 3656 	sub	a, #0x1d
   11DA FD 7E 01      [19] 3657 	ld	a, 1 (iy)
   11DD 17            [ 4] 3658 	rla
   11DE 3F            [ 4] 3659 	ccf
   11DF 1F            [ 4] 3660 	rra
   11E0 DE 80         [ 7] 3661 	sbc	a, #0x80
   11E2 30 22         [12] 3662 	jr	NC,00252$
                           3663 ;ciclo.c:441: _8BP_setupsp_3(cor,0,69);_8BP_setupsp_3(cor,7,9);//fire
   11E4 21 45 00      [10] 3664 	ld	hl, #0x0045
   11E7 E5            [11] 3665 	push	hl
   11E8 2E 00         [ 7] 3666 	ld	l, #0x00
   11EA E5            [11] 3667 	push	hl
   11EB 2Ar38r00      [16] 3668 	ld	hl, (_cor)
   11EE E5            [11] 3669 	push	hl
   11EF CDr95r03      [17] 3670 	call	__8BP_setupsp_3
   11F2 F1            [10] 3671 	pop	af
   11F3 F1            [10] 3672 	pop	af
   11F4 F1            [10] 3673 	pop	af
   11F5 21 09 00      [10] 3674 	ld	hl, #0x0009
   11F8 E5            [11] 3675 	push	hl
   11F9 2E 07         [ 7] 3676 	ld	l, #0x07
   11FB E5            [11] 3677 	push	hl
   11FC 2Ar38r00      [16] 3678 	ld	hl, (_cor)
   11FF E5            [11] 3679 	push	hl
   1200 CDr95r03      [17] 3680 	call	__8BP_setupsp_3
   1203 F1            [10] 3681 	pop	af
   1204 F1            [10] 3682 	pop	af
   1205 F1            [10] 3683 	pop	af
   1206                    3684 00252$:
                           3685 ;ciclo.c:444: if (col<15) goto label_CICLO;//disparo a decorado <11 o disp <15
   1206 FD 21r36r00   [14] 3686 	ld	iy, #_col
   120A FD 7E 00      [19] 3687 	ld	a, 0 (iy)
   120D D6 0F         [ 7] 3688 	sub	a, #0x0f
   120F FD 7E 01      [19] 3689 	ld	a, 1 (iy)
   1212 17            [ 4] 3690 	rla
   1213 3F            [ 4] 3691 	ccf
   1214 1F            [ 4] 3692 	rra
   1215 DE 80         [ 7] 3693 	sbc	a, #0x80
   1217 DAr92r0B      [10] 3694 	jp	C, 00112$
                           3695 ;ciclo.c:445: puntos=puntos+5;if (puntos==pot) {
   121A 21r3Ar00      [10] 3696 	ld	hl, #_puntos
   121D 7E            [ 7] 3697 	ld	a, (hl)
   121E C6 05         [ 7] 3698 	add	a, #0x05
   1220 77            [ 7] 3699 	ld	(hl), a
   1221 30 02         [12] 3700 	jr	NC,00684$
   1223 23            [ 6] 3701 	inc	hl
   1224 34            [11] 3702 	inc	(hl)
   1225                    3703 00684$:
   1225 3Ar3Ar00      [13] 3704 	ld	a,(#_puntos + 0)
   1228 FD 21rF1r00   [14] 3705 	ld	iy, #_pot
   122C FD 96 00      [19] 3706 	sub	a, 0 (iy)
   122F 20 21         [12] 3707 	jr	NZ,00256$
   1231 3Ar3Br00      [13] 3708 	ld	a,(#_puntos + 1)
   1234 FD 21rF1r00   [14] 3709 	ld	iy, #_pot
   1238 FD 96 01      [19] 3710 	sub	a, 1 (iy)
   123B 20 15         [12] 3711 	jr	NZ,00256$
                           3712 ;ciclo.c:446: tabu=tabu+2;pot=pot*10;
   123D 2ArF3r00      [16] 3713 	ld	hl, (_tabu)
   1240 23            [ 6] 3714 	inc	hl
   1241 23            [ 6] 3715 	inc	hl
   1242 22rF3r00      [16] 3716 	ld	(_tabu), hl
   1245 ED 4BrF1r00   [20] 3717 	ld	bc, (_pot)
   1249 69            [ 4] 3718 	ld	l, c
   124A 60            [ 4] 3719 	ld	h, b
   124B 29            [11] 3720 	add	hl, hl
   124C 29            [11] 3721 	add	hl, hl
   124D 09            [11] 3722 	add	hl, bc
   124E 29            [11] 3723 	add	hl, hl
   124F 22rF1r00      [16] 3724 	ld	(_pot), hl
   1252                    3725 00256$:
                           3726 ;ciclo.c:448: _8BP_printat_4(0,8,6-tabu,_basic_str(puntos));
   1252 2Ar3Ar00      [16] 3727 	ld	hl, (_puntos)
   1255 E5            [11] 3728 	push	hl
   1256 CDr08r07      [17] 3729 	call	__basic_str
   1259 F1            [10] 3730 	pop	af
   125A 4D            [ 4] 3731 	ld	c, l
   125B 44            [ 4] 3732 	ld	b, h
   125C 21rF3r00      [10] 3733 	ld	hl, #_tabu
   125F 3E 06         [ 7] 3734 	ld	a, #0x06
   1261 96            [ 7] 3735 	sub	a, (hl)
   1262 5F            [ 4] 3736 	ld	e, a
   1263 3E 00         [ 7] 3737 	ld	a, #0x00
   1265 23            [ 6] 3738 	inc	hl
   1266 9E            [ 7] 3739 	sbc	a, (hl)
   1267 57            [ 4] 3740 	ld	d, a
   1268 C5            [11] 3741 	push	bc
   1269 D5            [11] 3742 	push	de
   126A 21 08 00      [10] 3743 	ld	hl, #0x0008
   126D E5            [11] 3744 	push	hl
   126E 2E 00         [ 7] 3745 	ld	l, #0x00
   1270 E5            [11] 3746 	push	hl
   1271 CDr04r02      [17] 3747 	call	__8BP_printat_4
   1274 F1            [10] 3748 	pop	af
   1275 F1            [10] 3749 	pop	af
   1276 F1            [10] 3750 	pop	af
   1277 F1            [10] 3751 	pop	af
                           3752 ;ciclo.c:449: if (_basic_peek(dirsp[col])<128) goto label_1320;
   1278 2Ar36r00      [16] 3753 	ld	hl, (_col)
   127B 29            [11] 3754 	add	hl, hl
   127C 11r6Er00      [10] 3755 	ld	de, #_dirsp
   127F 19            [11] 3756 	add	hl, de
   1280 4E            [ 7] 3757 	ld	c, (hl)
   1281 23            [ 6] 3758 	inc	hl
   1282 46            [ 7] 3759 	ld	b, (hl)
   1283 C5            [11] 3760 	push	bc
   1284 CDr00r08      [17] 3761 	call	__basic_peek
   1287 F1            [10] 3762 	pop	af
   1288 7D            [ 4] 3763 	ld	a, l
   1289 D6 80         [ 7] 3764 	sub	a, #0x80
   128B 38 6C         [12] 3765 	jr	C,00263$
                           3766 ;ciclo.c:453: _8BP_setupsp_3(col,7,15);_8BP_setupsp_3(col,0,85);
   128D 21 0F 00      [10] 3767 	ld	hl, #0x000f
   1290 E5            [11] 3768 	push	hl
   1291 2E 07         [ 7] 3769 	ld	l, #0x07
   1293 E5            [11] 3770 	push	hl
   1294 2Ar36r00      [16] 3771 	ld	hl, (_col)
   1297 E5            [11] 3772 	push	hl
   1298 CDr95r03      [17] 3773 	call	__8BP_setupsp_3
   129B F1            [10] 3774 	pop	af
   129C F1            [10] 3775 	pop	af
   129D F1            [10] 3776 	pop	af
   129E 21 55 00      [10] 3777 	ld	hl, #0x0055
   12A1 E5            [11] 3778 	push	hl
   12A2 2E 00         [ 7] 3779 	ld	l, #0x00
   12A4 E5            [11] 3780 	push	hl
   12A5 2Ar36r00      [16] 3781 	ld	hl, (_col)
   12A8 E5            [11] 3782 	push	hl
   12A9 CDr95r03      [17] 3783 	call	__8BP_setupsp_3
   12AC F1            [10] 3784 	pop	af
   12AD F1            [10] 3785 	pop	af
   12AE F1            [10] 3786 	pop	af
                           3787 ;ciclo.c:454: if (banda>0) {
   12AF AF            [ 4] 3788 	xor	a, a
   12B0 FD 21rD8r00   [14] 3789 	ld	iy, #_banda
   12B4 FD BE 00      [19] 3790 	cp	a, 0 (iy)
   12B7 FD 9E 01      [19] 3791 	sbc	a, 1 (iy)
   12BA E2rBFr12      [10] 3792 	jp	PO, 00687$
   12BD EE 80         [ 7] 3793 	xor	a, #0x80
   12BF                    3794 00687$:
   12BF F2r92r0B      [10] 3795 	jp	P, 00112$
                           3796 ;ciclo.c:455: muertos=muertos+1;
   12C2 2ArD6r00      [16] 3797 	ld	hl, (_muertos)
   12C5 23            [ 6] 3798 	inc	hl
   12C6 22rD6r00      [16] 3799 	ld	(_muertos), hl
                           3800 ;ciclo.c:456: if (muertos==Nbanda){
   12C9 3ArD6r00      [13] 3801 	ld	a,(#_muertos + 0)
   12CC FD 21rF5r00   [14] 3802 	ld	iy, #_Nbanda
   12D0 FD 96 00      [19] 3803 	sub	a, 0 (iy)
   12D3 C2r92r0B      [10] 3804 	jp	NZ,00112$
   12D6 3ArD7r00      [13] 3805 	ld	a,(#_muertos + 1)
   12D9 FD 21rF5r00   [14] 3806 	ld	iy, #_Nbanda
   12DD FD 96 01      [19] 3807 	sub	a, 1 (iy)
   12E0 C2r92r0B      [10] 3808 	jp	NZ,00112$
                           3809 ;ciclo.c:457: level=level+1; 
   12E3 3ArF7r00      [13] 3810 	ld	a,(#_level + 0)
   12E6 3C            [ 4] 3811 	inc	a
   12E7 32rF7r00      [13] 3812 	ld	(_level+0), a
                           3813 ;ciclo.c:458: _basic_poke(42548,0);//para resetear el comienzo a mitad
   12EA AF            [ 4] 3814 	xor	a, a
   12EB F5            [11] 3815 	push	af
   12EC 33            [ 6] 3816 	inc	sp
   12ED 21 34 A6      [10] 3817 	ld	hl, #0xa634
   12F0 E5            [11] 3818 	push	hl
   12F1 CDr12r08      [17] 3819 	call	__basic_poke
   12F4 F1            [10] 3820 	pop	af
   12F5 33            [ 6] 3821 	inc	sp
                           3822 ;ciclo.c:459: goto label_FIN;
   12F6 C3rDEr14      [10] 3823 	jp	00279$
                           3824 ;ciclo.c:465: label_1320:
   12F9                    3825 00263$:
                           3826 ;ciclo.c:466: if (cor<29) {
   12F9 FD 21r38r00   [14] 3827 	ld	iy, #_cor
   12FD FD 7E 00      [19] 3828 	ld	a, 0 (iy)
   1300 D6 1D         [ 7] 3829 	sub	a, #0x1d
   1302 FD 7E 01      [19] 3830 	ld	a, 1 (iy)
   1305 17            [ 4] 3831 	rla
   1306 3F            [ 4] 3832 	ccf
   1307 1F            [ 4] 3833 	rra
   1308 DE 80         [ 7] 3834 	sbc	a, #0x80
   130A 30 3A         [12] 3835 	jr	NC,00267$
                           3836 ;ciclo.c:467: enecount[col-15]=enecount[col-15]-1;if (enecount[col-15]>0) goto label_CICLO;
   130C FD 21r36r00   [14] 3837 	ld	iy, #_col
   1310 FD 7E 00      [19] 3838 	ld	a, 0 (iy)
   1313 C6 F1         [ 7] 3839 	add	a, #0xf1
   1315 6F            [ 4] 3840 	ld	l, a
   1316 17            [ 4] 3841 	rla
   1317 9F            [ 4] 3842 	sbc	a, a
   1318 67            [ 4] 3843 	ld	h, a
   1319 29            [11] 3844 	add	hl, hl
   131A 01rAEr00      [10] 3845 	ld	bc,#_enecount
   131D 09            [11] 3846 	add	hl,bc
   131E EB            [ 4] 3847 	ex	de, hl
   131F 6B            [ 4] 3848 	ld	l, e
   1320 62            [ 4] 3849 	ld	h, d
   1321 4E            [ 7] 3850 	ld	c, (hl)
   1322 23            [ 6] 3851 	inc	hl
   1323 46            [ 7] 3852 	ld	b, (hl)
   1324 0B            [ 6] 3853 	dec	bc
   1325 79            [ 4] 3854 	ld	a, c
   1326 12            [ 7] 3855 	ld	(de), a
   1327 13            [ 6] 3856 	inc	de
   1328 78            [ 4] 3857 	ld	a, b
   1329 12            [ 7] 3858 	ld	(de), a
   132A FD 7E 00      [19] 3859 	ld	a, 0 (iy)
   132D C6 F1         [ 7] 3860 	add	a, #0xf1
   132F 6F            [ 4] 3861 	ld	l, a
   1330 17            [ 4] 3862 	rla
   1331 9F            [ 4] 3863 	sbc	a, a
   1332 67            [ 4] 3864 	ld	h, a
   1333 29            [11] 3865 	add	hl, hl
   1334 11rAEr00      [10] 3866 	ld	de, #_enecount
   1337 19            [11] 3867 	add	hl, de
   1338 4E            [ 7] 3868 	ld	c, (hl)
   1339 23            [ 6] 3869 	inc	hl
   133A 46            [ 7] 3870 	ld	b, (hl)
   133B AF            [ 4] 3871 	xor	a, a
   133C B9            [ 4] 3872 	cp	a, c
   133D 98            [ 4] 3873 	sbc	a, b
   133E E2r43r13      [10] 3874 	jp	PO, 00690$
   1341 EE 80         [ 7] 3875 	xor	a, #0x80
   1343                    3876 00690$:
   1343 FAr92r0B      [10] 3877 	jp	M, 00112$
   1346                    3878 00267$:
                           3879 ;ciclo.c:469: _8BP_setupsp_3(col,7,10);
   1346 21 0A 00      [10] 3880 	ld	hl, #0x000a
   1349 E5            [11] 3881 	push	hl
   134A 2E 07         [ 7] 3882 	ld	l, #0x07
   134C E5            [11] 3883 	push	hl
   134D 2Ar36r00      [16] 3884 	ld	hl, (_col)
   1350 E5            [11] 3885 	push	hl
   1351 CDr95r03      [17] 3886 	call	__8BP_setupsp_3
   1354 F1            [10] 3887 	pop	af
   1355 F1            [10] 3888 	pop	af
   1356 F1            [10] 3889 	pop	af
                           3890 ;ciclo.c:470: _8BP_setupsp_3(col,0,85);
   1357 21 55 00      [10] 3891 	ld	hl, #0x0055
   135A E5            [11] 3892 	push	hl
   135B 2E 00         [ 7] 3893 	ld	l, #0x00
   135D E5            [11] 3894 	push	hl
   135E 2Ar36r00      [16] 3895 	ld	hl, (_col)
   1361 E5            [11] 3896 	push	hl
   1362 CDr95r03      [17] 3897 	call	__8BP_setupsp_3
   1365 F1            [10] 3898 	pop	af
   1366 F1            [10] 3899 	pop	af
   1367 F1            [10] 3900 	pop	af
                           3901 ;ciclo.c:471: goto label_CICLO;  
   1368 C3r92r0B      [10] 3902 	jp	00112$
                           3903 ;ciclo.c:474: label_1360:
   136B                    3904 00268$:
                           3905 ;ciclo.c:475: if (col<11) goto label_CICLO;
   136B FD 21r36r00   [14] 3906 	ld	iy, #_col
   136F FD 7E 00      [19] 3907 	ld	a, 0 (iy)
   1372 D6 0B         [ 7] 3908 	sub	a, #0x0b
   1374 FD 7E 01      [19] 3909 	ld	a, 1 (iy)
   1377 17            [ 4] 3910 	rla
   1378 3F            [ 4] 3911 	ccf
   1379 1F            [ 4] 3912 	rra
   137A DE 80         [ 7] 3913 	sbc	a, #0x80
   137C DAr92r0B      [10] 3914 	jp	C, 00112$
                           3915 ;ciclo.c:477: if (inmune==1) goto label_CICLO;
   137F FD 21rF9r00   [14] 3916 	ld	iy, #_inmune
   1383 FD 7E 00      [19] 3917 	ld	a, 0 (iy)
   1386 3D            [ 4] 3918 	dec	a
   1387 FD B6 01      [19] 3919 	or	a, 1 (iy)
   138A CAr92r0B      [10] 3920 	jp	Z,00112$
                           3921 ;ciclo.c:478: _8BP_setupsp_3(col,0,65);
   138D 21 41 00      [10] 3922 	ld	hl, #0x0041
   1390 E5            [11] 3923 	push	hl
   1391 2E 00         [ 7] 3924 	ld	l, #0x00
   1393 E5            [11] 3925 	push	hl
   1394 2Ar36r00      [16] 3926 	ld	hl, (_col)
   1397 E5            [11] 3927 	push	hl
   1398 CDr95r03      [17] 3928 	call	__8BP_setupsp_3
   139B F1            [10] 3929 	pop	af
   139C F1            [10] 3930 	pop	af
   139D F1            [10] 3931 	pop	af
                           3932 ;ciclo.c:479: vidas=vidas-1;_8BP_music();
   139E 3ArF8r00      [13] 3933 	ld	a,(#_vidas + 0)
   13A1 21rF8r00      [10] 3934 	ld	hl, #_vidas
   13A4 C6 FF         [ 7] 3935 	add	a, #0xff
   13A6 77            [ 7] 3936 	ld	(hl), a
   13A7 CDrCFr01      [17] 3937 	call	__8BP_music
                           3938 ;ciclo.c:480: _8BP_setupsp_3(31,0,64);
   13AA 21 40 00      [10] 3939 	ld	hl, #0x0040
   13AD E5            [11] 3940 	push	hl
   13AE 2E 00         [ 7] 3941 	ld	l, #0x00
   13B0 E5            [11] 3942 	push	hl
   13B1 2E 1F         [ 7] 3943 	ld	l, #0x1f
   13B3 E5            [11] 3944 	push	hl
   13B4 CDr95r03      [17] 3945 	call	__8BP_setupsp_3
   13B7 F1            [10] 3946 	pop	af
   13B8 F1            [10] 3947 	pop	af
   13B9 F1            [10] 3948 	pop	af
                           3949 ;ciclo.c:482: for (int i=y;i<=y+25;i++){
   13BA ED 4Br34r00   [20] 3950 	ld	bc, (_y)
   13BE                    3951 00285$:
   13BE FD 21r34r00   [14] 3952 	ld	iy, #_y
   13C2 FD 7E 00      [19] 3953 	ld	a, 0 (iy)
   13C5 C6 19         [ 7] 3954 	add	a, #0x19
   13C7 5F            [ 4] 3955 	ld	e, a
   13C8 FD 7E 01      [19] 3956 	ld	a, 1 (iy)
   13CB CE 00         [ 7] 3957 	adc	a, #0x00
   13CD 57            [ 4] 3958 	ld	d, a
   13CE 7B            [ 4] 3959 	ld	a, e
   13CF 91            [ 4] 3960 	sub	a, c
   13D0 7A            [ 4] 3961 	ld	a, d
   13D1 98            [ 4] 3962 	sbc	a, b
   13D2 E2rD7r13      [10] 3963 	jp	PO, 00692$
   13D5 EE 80         [ 7] 3964 	xor	a, #0x80
   13D7                    3965 00692$:
   13D7 FAr53r14      [10] 3966 	jp	M, 00273$
                           3967 ;ciclo.c:484: _8BP_autoall();_8BP_printspall();
   13DA C5            [11] 3968 	push	bc
   13DB CDr67r00      [17] 3969 	call	__8BP_autoall
   13DE CDr0Ar03      [17] 3970 	call	__8BP_printspall
   13E1 C1            [10] 3971 	pop	bc
                           3972 ;ciclo.c:486: _8BP_setlimits_4(8,72,y,y+25);
   13E2 FD 21r34r00   [14] 3973 	ld	iy, #_y
   13E6 FD 7E 00      [19] 3974 	ld	a, 0 (iy)
   13E9 C6 19         [ 7] 3975 	add	a, #0x19
   13EB 5F            [ 4] 3976 	ld	e, a
   13EC FD 7E 01      [19] 3977 	ld	a, 1 (iy)
   13EF CE 00         [ 7] 3978 	adc	a, #0x00
   13F1 57            [ 4] 3979 	ld	d, a
   13F2 C5            [11] 3980 	push	bc
   13F3 D5            [11] 3981 	push	de
   13F4 2Ar34r00      [16] 3982 	ld	hl, (_y)
   13F7 E5            [11] 3983 	push	hl
   13F8 21 48 00      [10] 3984 	ld	hl, #0x0048
   13FB E5            [11] 3985 	push	hl
   13FC 2E 08         [ 7] 3986 	ld	l, #0x08
   13FE E5            [11] 3987 	push	hl
   13FF CDr4Dr03      [17] 3988 	call	__8BP_setlimits_4
   1402 F1            [10] 3989 	pop	af
   1403 F1            [10] 3990 	pop	af
   1404 F1            [10] 3991 	pop	af
   1405 F1            [10] 3992 	pop	af
   1406 C1            [10] 3993 	pop	bc
                           3994 ;ciclo.c:487: _8BP_printsp_3(31,i,x);
   1407 C5            [11] 3995 	push	bc
   1408 2Ar32r00      [16] 3996 	ld	hl, (_x)
   140B E5            [11] 3997 	push	hl
   140C C5            [11] 3998 	push	bc
   140D 21 1F 00      [10] 3999 	ld	hl, #0x001f
   1410 E5            [11] 4000 	push	hl
   1411 CDr7Fr02      [17] 4001 	call	__8BP_printsp_3
   1414 F1            [10] 4002 	pop	af
   1415 F1            [10] 4003 	pop	af
   1416 F1            [10] 4004 	pop	af
   1417 C1            [10] 4005 	pop	bc
                           4006 ;ciclo.c:488: _basic_sound(1,i*5,5,14,0,0,0);
   1418 69            [ 4] 4007 	ld	l, c
   1419 60            [ 4] 4008 	ld	h, b
   141A 29            [11] 4009 	add	hl, hl
   141B 29            [11] 4010 	add	hl, hl
   141C 09            [11] 4011 	add	hl, bc
   141D C5            [11] 4012 	push	bc
   141E AF            [ 4] 4013 	xor	a, a
   141F F5            [11] 4014 	push	af
   1420 33            [ 6] 4015 	inc	sp
   1421 AF            [ 4] 4016 	xor	a, a
   1422 F5            [11] 4017 	push	af
   1423 33            [ 6] 4018 	inc	sp
   1424 AF            [ 4] 4019 	xor	a, a
   1425 57            [ 4] 4020 	ld	d,a
   1426 1E 0E         [ 7] 4021 	ld	e,#0x0e
   1428 D5            [11] 4022 	push	de
   1429 11 05 00      [10] 4023 	ld	de, #0x0005
   142C D5            [11] 4024 	push	de
   142D E5            [11] 4025 	push	hl
   142E 3E 01         [ 7] 4026 	ld	a, #0x01
   1430 F5            [11] 4027 	push	af
   1431 33            [ 6] 4028 	inc	sp
   1432 CDrB2r07      [17] 4029 	call	__basic_sound
   1435 21 09 00      [10] 4030 	ld	hl, #9
   1438 39            [11] 4031 	add	hl, sp
   1439 F9            [ 6] 4032 	ld	sp, hl
   143A 21 C8 00      [10] 4033 	ld	hl, #0x00c8
   143D E5            [11] 4034 	push	hl
   143E 2E 00         [ 7] 4035 	ld	l, #0x00
   1440 E5            [11] 4036 	push	hl
   1441 2E 48         [ 7] 4037 	ld	l, #0x48
   1443 E5            [11] 4038 	push	hl
   1444 2E 08         [ 7] 4039 	ld	l, #0x08
   1446 E5            [11] 4040 	push	hl
   1447 CDr4Dr03      [17] 4041 	call	__8BP_setlimits_4
   144A F1            [10] 4042 	pop	af
   144B F1            [10] 4043 	pop	af
   144C F1            [10] 4044 	pop	af
   144D F1            [10] 4045 	pop	af
   144E C1            [10] 4046 	pop	bc
                           4047 ;ciclo.c:482: for (int i=y;i<=y+25;i++){
   144F 03            [ 6] 4048 	inc	bc
   1450 C3rBEr13      [10] 4049 	jp	00285$
   1453                    4050 00273$:
                           4051 ;ciclo.c:492: if (m>800) _basic_poke(42548,1);//para empezar mas tarde
   1453 3E 20         [ 7] 4052 	ld	a, #0x20
   1455 FD 21rBEr00   [14] 4053 	ld	iy, #_m
   1459 FD BE 00      [19] 4054 	cp	a, 0 (iy)
   145C 3E 03         [ 7] 4055 	ld	a, #0x03
   145E FD 9E 01      [19] 4056 	sbc	a, 1 (iy)
   1461 E2r66r14      [10] 4057 	jp	PO, 00693$
   1464 EE 80         [ 7] 4058 	xor	a, #0x80
   1466                    4059 00693$:
   1466 F2rDEr14      [10] 4060 	jp	P, 00279$
   1469 3E 01         [ 7] 4061 	ld	a, #0x01
   146B F5            [11] 4062 	push	af
   146C 33            [ 6] 4063 	inc	sp
   146D 21 34 A6      [10] 4064 	ld	hl, #0xa634
   1470 E5            [11] 4065 	push	hl
   1471 CDr12r08      [17] 4066 	call	__basic_poke
   1474 F1            [10] 4067 	pop	af
   1475 33            [ 6] 4068 	inc	sp
                           4069 ;ciclo.c:493: goto label_FIN;
   1476 18 66         [12] 4070 	jr	00279$
                           4071 ;ciclo.c:497: label_1430:
   1478                    4072 00276$:
                           4073 ;ciclo.c:498: j=29+ (j % 2) ; if (_basic_peek(dirsp[j])>0) goto label_1160;
   1478 21 02 00      [10] 4074 	ld	hl, #0x0002
   147B E5            [11] 4075 	push	hl
   147C 2ArD4r00      [16] 4076 	ld	hl, (_j)
   147F E5            [11] 4077 	push	hl
   1480 CDr00r00      [17] 4078 	call	__modsint
   1483 F1            [10] 4079 	pop	af
   1484 F1            [10] 4080 	pop	af
   1485 01 1D 00      [10] 4081 	ld	bc,#0x001d
   1488 09            [11] 4082 	add	hl,bc
   1489 22rD4r00      [16] 4083 	ld	(_j), hl
   148C 29            [11] 4084 	add	hl, hl
   148D 11r6Er00      [10] 4085 	ld	de, #_dirsp
   1490 19            [11] 4086 	add	hl, de
   1491 4E            [ 7] 4087 	ld	c, (hl)
   1492 23            [ 6] 4088 	inc	hl
   1493 46            [ 7] 4089 	ld	b, (hl)
   1494 C5            [11] 4090 	push	bc
   1495 CDr00r08      [17] 4091 	call	__basic_peek
   1498 F1            [10] 4092 	pop	af
   1499 7D            [ 4] 4093 	ld	a, l
   149A B7            [ 4] 4094 	or	a, a
   149B C2rFEr10      [10] 4095 	jp	NZ, 00235$
                           4096 ;ciclo.c:499: _8BP_setupsp_3(j,15,16);
   149E 21 10 00      [10] 4097 	ld	hl, #0x0010
   14A1 E5            [11] 4098 	push	hl
   14A2 2E 0F         [ 7] 4099 	ld	l, #0x0f
   14A4 E5            [11] 4100 	push	hl
   14A5 2ArD4r00      [16] 4101 	ld	hl, (_j)
   14A8 E5            [11] 4102 	push	hl
   14A9 CDr95r03      [17] 4103 	call	__8BP_setupsp_3
   14AC F1            [10] 4104 	pop	af
   14AD F1            [10] 4105 	pop	af
   14AE F1            [10] 4106 	pop	af
                           4107 ;ciclo.c:500: _8BP_locatesp_3(j,y,x+1);
   14AF ED 4Br32r00   [20] 4108 	ld	bc, (_x)
   14B3 03            [ 6] 4109 	inc	bc
   14B4 21rD4r00      [10] 4110 	ld	hl,#_j + 0
   14B7 56            [ 7] 4111 	ld	d, (hl)
   14B8 C5            [11] 4112 	push	bc
   14B9 2Ar34r00      [16] 4113 	ld	hl, (_y)
   14BC E5            [11] 4114 	push	hl
   14BD D5            [11] 4115 	push	de
   14BE 33            [ 6] 4116 	inc	sp
   14BF CDr6Dr01      [17] 4117 	call	__8BP_locatesp_3
   14C2 F1            [10] 4118 	pop	af
   14C3 F1            [10] 4119 	pop	af
   14C4 33            [ 6] 4120 	inc	sp
                           4121 ;ciclo.c:501: _8BP_setupsp_3(j,0,128+64+8+1+16);//no colisionador
   14C5 21 D9 00      [10] 4122 	ld	hl, #0x00d9
   14C8 E5            [11] 4123 	push	hl
   14C9 2E 00         [ 7] 4124 	ld	l, #0x00
   14CB E5            [11] 4125 	push	hl
   14CC 2ArD4r00      [16] 4126 	ld	hl, (_j)
   14CF E5            [11] 4127 	push	hl
   14D0 CDr95r03      [17] 4128 	call	__8BP_setupsp_3
   14D3 F1            [10] 4129 	pop	af
   14D4 F1            [10] 4130 	pop	af
   14D5 F1            [10] 4131 	pop	af
                           4132 ;ciclo.c:502: bomb=0;
   14D6 21rE2r00      [10] 4133 	ld	hl,#_bomb + 0
   14D9 36 00         [10] 4134 	ld	(hl), #0x00
                           4135 ;ciclo.c:503: goto label_1160;
   14DB C3rFEr10      [10] 4136 	jp	00235$
                           4137 ;ciclo.c:510: label_FIN:
   14DE                    4138 00279$:
                           4139 ;ciclo.c:512: _8BP_poke_2(42540,puntos);
   14DE 2Ar3Ar00      [16] 4140 	ld	hl, (_puntos)
   14E1 E5            [11] 4141 	push	hl
   14E2 21 2C A6      [10] 4142 	ld	hl, #0xa62c
   14E5 E5            [11] 4143 	push	hl
   14E6 CDr3Fr05      [17] 4144 	call	__8BP_poke_2
   14E9 F1            [10] 4145 	pop	af
   14EA F1            [10] 4146 	pop	af
                           4147 ;ciclo.c:513: _basic_poke(42544,level);
   14EB 3ArF7r00      [13] 4148 	ld	a, (_level)
   14EE F5            [11] 4149 	push	af
   14EF 33            [ 6] 4150 	inc	sp
   14F0 21 30 A6      [10] 4151 	ld	hl, #0xa630
   14F3 E5            [11] 4152 	push	hl
   14F4 CDr12r08      [17] 4153 	call	__basic_poke
   14F7 F1            [10] 4154 	pop	af
   14F8 33            [ 6] 4155 	inc	sp
                           4156 ;ciclo.c:514: _basic_poke(42545,vidas);
   14F9 3ArF8r00      [13] 4157 	ld	a, (_vidas)
   14FC F5            [11] 4158 	push	af
   14FD 33            [ 6] 4159 	inc	sp
   14FE 21 31 A6      [10] 4160 	ld	hl, #0xa631
   1501 E5            [11] 4161 	push	hl
   1502 CDr12r08      [17] 4162 	call	__basic_poke
   1505 F1            [10] 4163 	pop	af
   1506 33            [ 6] 4164 	inc	sp
                           4165 ;ciclo.c:519: return 0;
   1507 21 00 00      [10] 4166 	ld	hl, #0x0000
                           4167 ;ciclo.c:520: }
   150A F1            [10] 4168 	pop	af
   150B C9            [10] 4169 	ret
                           4170 ;ciclo.c:522: void creaDispEne_1990() {
                           4171 ;	---------------------------------
                           4172 ; Function creaDispEne_1990
                           4173 ; ---------------------------------
   150C                    4174 _creaDispEne_1990::
                           4175 ;ciclo.c:523: k=11 + k % 4;
   150C 21 04 00      [10] 4176 	ld	hl, #0x0004
   150F E5            [11] 4177 	push	hl
   1510 2ArC4r00      [16] 4178 	ld	hl, (_k)
   1513 E5            [11] 4179 	push	hl
   1514 CDr00r00      [17] 4180 	call	__modsint
   1517 F1            [10] 4181 	pop	af
   1518 F1            [10] 4182 	pop	af
   1519 01 0B 00      [10] 4183 	ld	bc,#0x000b
   151C 09            [11] 4184 	add	hl,bc
                           4185 ;ciclo.c:524: if (_basic_peek(dirsp[k])>0) return;
   151D 22rC4r00      [16] 4186 	ld	(_k), hl
   1520 29            [11] 4187 	add	hl, hl
   1521 11r6Er00      [10] 4188 	ld	de, #_dirsp
   1524 19            [11] 4189 	add	hl, de
   1525 4E            [ 7] 4190 	ld	c, (hl)
   1526 23            [ 6] 4191 	inc	hl
   1527 46            [ 7] 4192 	ld	b, (hl)
   1528 C5            [11] 4193 	push	bc
   1529 CDr00r08      [17] 4194 	call	__basic_peek
   152C F1            [10] 4195 	pop	af
   152D 7D            [ 4] 4196 	ld	a, l
   152E B7            [ 4] 4197 	or	a, a
   152F C0            [11] 4198 	ret	NZ
                           4199 ;ciclo.c:525: enek=15+enek %8;direk=dirsp[enek];
   1530 21 08 00      [10] 4200 	ld	hl, #0x0008
   1533 E5            [11] 4201 	push	hl
   1534 2ArFBr00      [16] 4202 	ld	hl, (_enek)
   1537 E5            [11] 4203 	push	hl
   1538 CDr00r00      [17] 4204 	call	__modsint
   153B F1            [10] 4205 	pop	af
   153C F1            [10] 4206 	pop	af
   153D 01 0F 00      [10] 4207 	ld	bc,#0x000f
   1540 09            [11] 4208 	add	hl,bc
   1541 22rFBr00      [16] 4209 	ld	(_enek), hl
   1544 29            [11] 4210 	add	hl, hl
   1545 11r6Er00      [10] 4211 	ld	de, #_dirsp
   1548 19            [11] 4212 	add	hl, de
   1549 7E            [ 7] 4213 	ld	a, (hl)
   154A 32rFDr00      [13] 4214 	ld	(_direk+0), a
   154D 23            [ 6] 4215 	inc	hl
   154E 7E            [ 7] 4216 	ld	a, (hl)
   154F 32rFEr00      [13] 4217 	ld	(_direk+1), a
                           4218 ;ciclo.c:526: if (_basic_peek(direk)>0) goto label_2030;
   1552 2ArFDr00      [16] 4219 	ld	hl, (_direk)
   1555 E5            [11] 4220 	push	hl
   1556 CDr00r08      [17] 4221 	call	__basic_peek
   1559 F1            [10] 4222 	pop	af
   155A 7D            [ 4] 4223 	ld	a, l
   155B B7            [ 4] 4224 	or	a, a
                           4225 ;ciclo.c:527: else return;
                           4226 ;ciclo.c:529: label_2030:
   155C C8            [11] 4227 	ret	Z
                           4228 ;ciclo.c:530: yene=0;_8BP_peek_2(direk+1,&yene);xene=_basic_peek(direk+3);
   155D 21 00 00      [10] 4229 	ld	hl, #0x0000
   1560 22rFFr00      [16] 4230 	ld	(_yene), hl
   1563 01rFFr00      [10] 4231 	ld	bc, #_yene+0
   1566 2ArFDr00      [16] 4232 	ld	hl, (_direk)
   1569 23            [ 6] 4233 	inc	hl
   156A C5            [11] 4234 	push	bc
   156B E5            [11] 4235 	push	hl
   156C CDr26r05      [17] 4236 	call	__8BP_peek_2
   156F F1            [10] 4237 	pop	af
   1570 F1            [10] 4238 	pop	af
   1571 2ArFDr00      [16] 4239 	ld	hl, (_direk)
   1574 23            [ 6] 4240 	inc	hl
   1575 23            [ 6] 4241 	inc	hl
   1576 23            [ 6] 4242 	inc	hl
   1577 E5            [11] 4243 	push	hl
   1578 CDr00r08      [17] 4244 	call	__basic_peek
   157B F1            [10] 4245 	pop	af
   157C 7D            [ 4] 4246 	ld	a, l
   157D 32r01r01      [13] 4247 	ld	(_xene+0), a
   1580 AF            [ 4] 4248 	xor	a, a
   1581 32r02r01      [13] 4249 	ld	(_xene+1), a
                           4250 ;ciclo.c:531: _8BP_setupsp_3(k,0,128+64+8+2+1);
   1584 21 CB 00      [10] 4251 	ld	hl, #0x00cb
   1587 E5            [11] 4252 	push	hl
   1588 2E 00         [ 7] 4253 	ld	l, #0x00
   158A E5            [11] 4254 	push	hl
   158B 2ArC4r00      [16] 4255 	ld	hl, (_k)
   158E E5            [11] 4256 	push	hl
   158F CDr95r03      [17] 4257 	call	__8BP_setupsp_3
   1592 F1            [10] 4258 	pop	af
   1593 F1            [10] 4259 	pop	af
   1594 F1            [10] 4260 	pop	af
                           4261 ;ciclo.c:532: _8BP_locatesp_3(k,yene,xene);offr=31;
   1595 21rC4r00      [10] 4262 	ld	hl,#_k + 0
   1598 46            [ 7] 4263 	ld	b, (hl)
   1599 2Ar01r01      [16] 4264 	ld	hl, (_xene)
   159C E5            [11] 4265 	push	hl
   159D 2ArFFr00      [16] 4266 	ld	hl, (_yene)
   15A0 E5            [11] 4267 	push	hl
   15A1 C5            [11] 4268 	push	bc
   15A2 33            [ 6] 4269 	inc	sp
   15A3 CDr6Dr01      [17] 4270 	call	__8BP_locatesp_3
   15A6 F1            [10] 4271 	pop	af
   15A7 F1            [10] 4272 	pop	af
   15A8 33            [ 6] 4273 	inc	sp
   15A9 21 1F 00      [10] 4274 	ld	hl, #0x001f
   15AC 22r03r01      [16] 4275 	ld	(_offr), hl
                           4276 ;ciclo.c:533: if (x<xene){
   15AF 21r01r01      [10] 4277 	ld	hl, #_xene
   15B2 FD 21r32r00   [14] 4278 	ld	iy, #_x
   15B6 FD 7E 00      [19] 4279 	ld	a, 0 (iy)
   15B9 96            [ 7] 4280 	sub	a, (hl)
   15BA FD 7E 01      [19] 4281 	ld	a, 1 (iy)
   15BD 23            [ 6] 4282 	inc	hl
   15BE 9E            [ 7] 4283 	sbc	a, (hl)
   15BF E2rC4r15      [10] 4284 	jp	PO, 00141$
   15C2 EE 80         [ 7] 4285 	xor	a, #0x80
   15C4                    4286 00141$:
   15C4 F2rEDr15      [10] 4287 	jp	P, 00112$
                           4288 ;ciclo.c:534: offr=offr+8;
   15C7 21 27 00      [10] 4289 	ld	hl, #0x0027
   15CA 22r03r01      [16] 4290 	ld	(_offr), hl
                           4291 ;ciclo.c:535: if (y<yene) offr=offr+4;
   15CD 21rFFr00      [10] 4292 	ld	hl, #_yene
   15D0 FD 21r34r00   [14] 4293 	ld	iy, #_y
   15D4 FD 7E 00      [19] 4294 	ld	a, 0 (iy)
   15D7 96            [ 7] 4295 	sub	a, (hl)
   15D8 FD 7E 01      [19] 4296 	ld	a, 1 (iy)
   15DB 23            [ 6] 4297 	inc	hl
   15DC 9E            [ 7] 4298 	sbc	a, (hl)
   15DD E2rE2r15      [10] 4299 	jp	PO, 00142$
   15E0 EE 80         [ 7] 4300 	xor	a, #0x80
   15E2                    4301 00142$:
   15E2 F2r0Br16      [10] 4302 	jp	P, 00113$
   15E5 21 2B 00      [10] 4303 	ld	hl, #0x002b
   15E8 22r03r01      [16] 4304 	ld	(_offr), hl
   15EB 18 1E         [12] 4305 	jr	00113$
   15ED                    4306 00112$:
                           4307 ;ciclo.c:537: if (y>yene) offr=offr+4;
   15ED 21rFFr00      [10] 4308 	ld	hl, #_yene
   15F0 7E            [ 7] 4309 	ld	a, (hl)
   15F1 FD 21r34r00   [14] 4310 	ld	iy, #_y
   15F5 FD 96 00      [19] 4311 	sub	a, 0 (iy)
   15F8 23            [ 6] 4312 	inc	hl
   15F9 7E            [ 7] 4313 	ld	a, (hl)
   15FA FD 9E 01      [19] 4314 	sbc	a, 1 (iy)
   15FD E2r02r16      [10] 4315 	jp	PO, 00143$
   1600 EE 80         [ 7] 4316 	xor	a, #0x80
   1602                    4317 00143$:
   1602 F2r0Br16      [10] 4318 	jp	P, 00113$
   1605 21 23 00      [10] 4319 	ld	hl, #0x0023
   1608 22r03r01      [16] 4320 	ld	(_offr), hl
   160B                    4321 00113$:
                           4322 ;ciclo.c:539: rk=1+rk %4;
   160B 21 04 00      [10] 4323 	ld	hl, #0x0004
   160E E5            [11] 4324 	push	hl
   160F 2Ar05r01      [16] 4325 	ld	hl, (_rk)
   1612 E5            [11] 4326 	push	hl
   1613 CDr00r00      [17] 4327 	call	__modsint
   1616 F1            [10] 4328 	pop	af
   1617 F1            [10] 4329 	pop	af
   1618 23            [ 6] 4330 	inc	hl
   1619 4D            [ 4] 4331 	ld	c,l
   161A 44            [ 4] 4332 	ld	b,h
   161B ED 43r05r01   [20] 4333 	ld	(_rk), bc
                           4334 ;ciclo.c:540: _8BP_setupsp_3(k,15,offr+rk);
   161F 21r05r01      [10] 4335 	ld	hl, #_rk
   1622 FD 21r03r01   [14] 4336 	ld	iy, #_offr
   1626 FD 7E 00      [19] 4337 	ld	a, 0 (iy)
   1629 86            [ 7] 4338 	add	a, (hl)
   162A 4F            [ 4] 4339 	ld	c, a
   162B FD 7E 01      [19] 4340 	ld	a, 1 (iy)
   162E 23            [ 6] 4341 	inc	hl
   162F 8E            [ 7] 4342 	adc	a, (hl)
   1630 47            [ 4] 4343 	ld	b, a
   1631 C5            [11] 4344 	push	bc
   1632 21 0F 00      [10] 4345 	ld	hl, #0x000f
   1635 E5            [11] 4346 	push	hl
   1636 2ArC4r00      [16] 4347 	ld	hl, (_k)
   1639 E5            [11] 4348 	push	hl
   163A CDr95r03      [17] 4349 	call	__8BP_setupsp_3
   163D F1            [10] 4350 	pop	af
   163E F1            [10] 4351 	pop	af
   163F F1            [10] 4352 	pop	af
                           4353 ;ciclo.c:541: }
   1640 C9            [10] 4354 	ret
                           4355 ;ciclo.c:544: void procesaEvento_1500(){
                           4356 ;	---------------------------------
                           4357 ; Function procesaEvento_1500
                           4358 ; ---------------------------------
   1641                    4359 _procesaEvento_1500::
   1641 F5            [11] 4360 	push	af
                           4361 ;ciclo.c:545: _8BP_peek_2(evdir+2,&evtipo);
   1642 01r09r01      [10] 4362 	ld	bc, #_evtipo+0
   1645 2Ar07r01      [16] 4363 	ld	hl, (_evdir)
   1648 23            [ 6] 4364 	inc	hl
   1649 23            [ 6] 4365 	inc	hl
   164A C5            [11] 4366 	push	bc
   164B E5            [11] 4367 	push	hl
   164C CDr26r05      [17] 4368 	call	__8BP_peek_2
   164F F1            [10] 4369 	pop	af
   1650 F1            [10] 4370 	pop	af
                           4371 ;ciclo.c:547: switch (evtipo)  {
   1651 FD 21r09r01   [14] 4372 	ld	iy, #_evtipo
   1655 FD 7E 00      [19] 4373 	ld	a, 0 (iy)
   1658 D6 01         [ 7] 4374 	sub	a, #0x01
   165A FD 7E 01      [19] 4375 	ld	a, 1 (iy)
   165D 17            [ 4] 4376 	rla
   165E 3F            [ 4] 4377 	ccf
   165F 1F            [ 4] 4378 	rra
   1660 DE 80         [ 7] 4379 	sbc	a, #0x80
   1662 DArA0r19      [10] 4380 	jp	C, 00110$
   1665 3E 07         [ 7] 4381 	ld	a, #0x07
   1667 FD BE 00      [19] 4382 	cp	a, 0 (iy)
   166A 3E 00         [ 7] 4383 	ld	a, #0x00
   166C FD 9E 01      [19] 4384 	sbc	a, 1 (iy)
   166F E2r74r16      [10] 4385 	jp	PO, 00128$
   1672 EE 80         [ 7] 4386 	xor	a, #0x80
   1674                    4387 00128$:
   1674 FArA0r19      [10] 4388 	jp	M, 00110$
   1677 3Ar09r01      [13] 4389 	ld	a,(#_evtipo + 0)
   167A C6 FF         [ 7] 4390 	add	a, #0xff
   167C 4F            [ 4] 4391 	ld	c, a
                           4392 ;ciclo.c:552: _8BP_peek_2(evdir+4,&pini);pfin1=pini+44;pfin2=pfin1+80;p2=-pfin1+112;p1=-pini+120;
   167D 21 00 00      [10] 4393 	ld	hl, #0
   1680 39            [11] 4394 	add	hl, sp
   1681 FD 21r07r01   [14] 4395 	ld	iy, #_evdir
   1685 FD 7E 00      [19] 4396 	ld	a, 0 (iy)
   1688 C6 04         [ 7] 4397 	add	a, #0x04
   168A 77            [ 7] 4398 	ld	(hl), a
   168B FD 7E 01      [19] 4399 	ld	a, 1 (iy)
   168E CE 00         [ 7] 4400 	adc	a, #0x00
   1690 23            [ 6] 4401 	inc	hl
   1691 77            [ 7] 4402 	ld	(hl), a
                           4403 ;ciclo.c:547: switch (evtipo)  {
   1692 06 00         [ 7] 4404 	ld	b, #0x00
   1694 21r9Br16      [10] 4405 	ld	hl, #00129$
   1697 09            [11] 4406 	add	hl, bc
   1698 09            [11] 4407 	add	hl, bc
   1699 09            [11] 4408 	add	hl, bc
   169A E9            [ 4] 4409 	jp	(hl)
   169B                    4410 00129$:
   169B C3rB0r16      [10] 4411 	jp	00101$
   169E C3r40r17      [10] 4412 	jp	00102$
   16A1 C3r86r17      [10] 4413 	jp	00105$
   16A4 C3rAEr17      [10] 4414 	jp	00106$
   16A7 C3rD7r17      [10] 4415 	jp	00107$
   16AA C3rDDr17      [10] 4416 	jp	00108$
   16AD C3rA4r18      [10] 4417 	jp	00109$
                           4418 ;ciclo.c:549: case 1: //evento puente
   16B0                    4419 00101$:
                           4420 ;ciclo.c:550: modo=1;_8BP_setupsp_3(31,0,64);
   16B0 21rE0r00      [10] 4421 	ld	hl,#_modo + 0
   16B3 36 01         [10] 4422 	ld	(hl), #0x01
   16B5 21 40 00      [10] 4423 	ld	hl, #0x0040
   16B8 E5            [11] 4424 	push	hl
   16B9 2E 00         [ 7] 4425 	ld	l, #0x00
   16BB E5            [11] 4426 	push	hl
   16BC 2E 1F         [ 7] 4427 	ld	l, #0x1f
   16BE E5            [11] 4428 	push	hl
   16BF CDr95r03      [17] 4429 	call	__8BP_setupsp_3
   16C2 F1            [10] 4430 	pop	af
   16C3 F1            [10] 4431 	pop	af
   16C4 F1            [10] 4432 	pop	af
                           4433 ;ciclo.c:551: pini=0;
   16C5 21 00 00      [10] 4434 	ld	hl, #0x0000
   16C8 22rE7r00      [16] 4435 	ld	(_pini), hl
                           4436 ;ciclo.c:552: _8BP_peek_2(evdir+4,&pini);pfin1=pini+44;pfin2=pfin1+80;p2=-pfin1+112;p1=-pini+120;
   16CB 11rE7r00      [10] 4437 	ld	de, #_pini+0
   16CE FD 21r07r01   [14] 4438 	ld	iy, #_evdir
   16D2 FD 7E 00      [19] 4439 	ld	a, 0 (iy)
   16D5 C6 04         [ 7] 4440 	add	a, #0x04
   16D7 4F            [ 4] 4441 	ld	c, a
   16D8 FD 7E 01      [19] 4442 	ld	a, 1 (iy)
   16DB CE 00         [ 7] 4443 	adc	a, #0x00
   16DD 47            [ 4] 4444 	ld	b, a
   16DE D5            [11] 4445 	push	de
   16DF C5            [11] 4446 	push	bc
   16E0 CDr26r05      [17] 4447 	call	__8BP_peek_2
   16E3 F1            [10] 4448 	pop	af
   16E4 F1            [10] 4449 	pop	af
   16E5 21rE9r00      [10] 4450 	ld	hl, #_pfin1
   16E8 FD 21rE7r00   [14] 4451 	ld	iy, #_pini
   16EC FD 7E 00      [19] 4452 	ld	a, 0 (iy)
   16EF C6 2C         [ 7] 4453 	add	a, #0x2c
   16F1 77            [ 7] 4454 	ld	(hl), a
   16F2 FD 7E 01      [19] 4455 	ld	a, 1 (iy)
   16F5 CE 00         [ 7] 4456 	adc	a, #0x00
   16F7 23            [ 6] 4457 	inc	hl
   16F8 77            [ 7] 4458 	ld	(hl), a
   16F9 21rEBr00      [10] 4459 	ld	hl, #_pfin2
   16FC FD 21rE9r00   [14] 4460 	ld	iy, #_pfin1
   1700 FD 7E 00      [19] 4461 	ld	a, 0 (iy)
   1703 C6 50         [ 7] 4462 	add	a, #0x50
   1705 77            [ 7] 4463 	ld	(hl), a
   1706 FD 7E 01      [19] 4464 	ld	a, 1 (iy)
   1709 CE 00         [ 7] 4465 	adc	a, #0x00
   170B 23            [ 6] 4466 	inc	hl
   170C 77            [ 7] 4467 	ld	(hl), a
   170D 21rE9r00      [10] 4468 	ld	hl, #_pfin1
   1710 AF            [ 4] 4469 	xor	a, a
   1711 96            [ 7] 4470 	sub	a, (hl)
   1712 4F            [ 4] 4471 	ld	c, a
   1713 3E 00         [ 7] 4472 	ld	a, #0x00
   1715 23            [ 6] 4473 	inc	hl
   1716 9E            [ 7] 4474 	sbc	a, (hl)
   1717 47            [ 4] 4475 	ld	b, a
   1718 21 70 00      [10] 4476 	ld	hl, #0x0070
   171B 09            [11] 4477 	add	hl, bc
   171C 22rEFr00      [16] 4478 	ld	(_p2), hl
   171F 21rE7r00      [10] 4479 	ld	hl, #_pini
   1722 AF            [ 4] 4480 	xor	a, a
   1723 96            [ 7] 4481 	sub	a, (hl)
   1724 4F            [ 4] 4482 	ld	c, a
   1725 3E 00         [ 7] 4483 	ld	a, #0x00
   1727 23            [ 6] 4484 	inc	hl
   1728 9E            [ 7] 4485 	sbc	a, (hl)
   1729 47            [ 4] 4486 	ld	b, a
   172A 21 78 00      [10] 4487 	ld	hl, #0x0078
   172D 09            [11] 4488 	add	hl, bc
   172E 22rEDr00      [16] 4489 	ld	(_p1), hl
                           4490 ;ciclo.c:553: evdir=evdir +6;
   1731 21r07r01      [10] 4491 	ld	hl, #_evdir
   1734 7E            [ 7] 4492 	ld	a, (hl)
   1735 C6 06         [ 7] 4493 	add	a, #0x06
   1737 77            [ 7] 4494 	ld	(hl), a
   1738 D2rA0r19      [10] 4495 	jp	NC,00110$
   173B 23            [ 6] 4496 	inc	hl
   173C 34            [11] 4497 	inc	(hl)
                           4498 ;ciclo.c:554: break;
   173D C3rA0r19      [10] 4499 	jp	00110$
                           4500 ;ciclo.c:556: case 2: //fin puente
   1740                    4501 00102$:
                           4502 ;ciclo.c:557: if (y==120) {
   1740 FD 21r34r00   [14] 4503 	ld	iy, #_y
   1744 FD 7E 00      [19] 4504 	ld	a, 0 (iy)
   1747 D6 78         [ 7] 4505 	sub	a, #0x78
   1749 FD B6 01      [19] 4506 	or	a, 1 (iy)
   174C 20 29         [12] 4507 	jr	NZ,00104$
                           4508 ;ciclo.c:558: _8BP_setlimits_4(8,72,0,200);_8BP_setupsp_3(31,0,64+32+1);modo=0;
   174E 21 C8 00      [10] 4509 	ld	hl, #0x00c8
   1751 E5            [11] 4510 	push	hl
   1752 2E 00         [ 7] 4511 	ld	l, #0x00
   1754 E5            [11] 4512 	push	hl
   1755 2E 48         [ 7] 4513 	ld	l, #0x48
   1757 E5            [11] 4514 	push	hl
   1758 2E 08         [ 7] 4515 	ld	l, #0x08
   175A E5            [11] 4516 	push	hl
   175B CDr4Dr03      [17] 4517 	call	__8BP_setlimits_4
   175E F1            [10] 4518 	pop	af
   175F F1            [10] 4519 	pop	af
   1760 F1            [10] 4520 	pop	af
   1761 F1            [10] 4521 	pop	af
   1762 21 61 00      [10] 4522 	ld	hl, #0x0061
   1765 E5            [11] 4523 	push	hl
   1766 2E 00         [ 7] 4524 	ld	l, #0x00
   1768 E5            [11] 4525 	push	hl
   1769 2E 1F         [ 7] 4526 	ld	l, #0x1f
   176B E5            [11] 4527 	push	hl
   176C CDr95r03      [17] 4528 	call	__8BP_setupsp_3
   176F F1            [10] 4529 	pop	af
   1770 F1            [10] 4530 	pop	af
   1771 F1            [10] 4531 	pop	af
   1772 21rE0r00      [10] 4532 	ld	hl,#_modo + 0
   1775 36 00         [10] 4533 	ld	(hl), #0x00
   1777                    4534 00104$:
                           4535 ;ciclo.c:560: evdir=evdir +4;
   1777 21r07r01      [10] 4536 	ld	hl, #_evdir
   177A 7E            [ 7] 4537 	ld	a, (hl)
   177B C6 04         [ 7] 4538 	add	a, #0x04
   177D 77            [ 7] 4539 	ld	(hl), a
   177E D2rA0r19      [10] 4540 	jp	NC,00110$
   1781 23            [ 6] 4541 	inc	hl
   1782 34            [11] 4542 	inc	(hl)
                           4543 ;ciclo.c:561: break;
   1783 C3rA0r19      [10] 4544 	jp	00110$
                           4545 ;ciclo.c:563: case 3://ink
   1786                    4546 00105$:
                           4547 ;ciclo.c:565: _8BP_peek_2(evdir+4,&tinta);
   1786 21r0Dr01      [10] 4548 	ld	hl, #_tinta
   1789 4D            [ 4] 4549 	ld	c, l
   178A 44            [ 4] 4550 	ld	b, h
   178B E1            [10] 4551 	pop	hl
   178C E5            [11] 4552 	push	hl
   178D C5            [11] 4553 	push	bc
   178E E5            [11] 4554 	push	hl
   178F CDr26r05      [17] 4555 	call	__8BP_peek_2
   1792 F1            [10] 4556 	pop	af
   1793 F1            [10] 4557 	pop	af
                           4558 ;ciclo.c:566: _basic_ink(1,tinta);
   1794 3Ar0Dr01      [13] 4559 	ld	a,(#_tinta + 0)
   1797 57            [ 4] 4560 	ld	d,a
   1798 1E 01         [ 7] 4561 	ld	e,#0x01
   179A D5            [11] 4562 	push	de
   179B CDrEFr07      [17] 4563 	call	__basic_ink
   179E F1            [10] 4564 	pop	af
                           4565 ;ciclo.c:567: evdir=evdir +6;
   179F 21r07r01      [10] 4566 	ld	hl, #_evdir
   17A2 7E            [ 7] 4567 	ld	a, (hl)
   17A3 C6 06         [ 7] 4568 	add	a, #0x06
   17A5 77            [ 7] 4569 	ld	(hl), a
   17A6 D2rA0r19      [10] 4570 	jp	NC,00110$
   17A9 23            [ 6] 4571 	inc	hl
   17AA 34            [11] 4572 	inc	(hl)
                           4573 ;ciclo.c:568: break;
   17AB C3rA0r19      [10] 4574 	jp	00110$
                           4575 ;ciclo.c:570: case 4://finscroll
   17AE                    4576 00106$:
                           4577 ;ciclo.c:571: scroll=1;_8BP_map2sp_1(2);_8BP_map2sp_2(m,0);
   17AE 21rDAr00      [10] 4578 	ld	hl,#_scroll + 0
   17B1 36 01         [10] 4579 	ld	(hl), #0x01
   17B3 3E 02         [ 7] 4580 	ld	a, #0x02
   17B5 F5            [11] 4581 	push	af
   17B6 33            [ 6] 4582 	inc	sp
   17B7 CDrB9r04      [17] 4583 	call	__8BP_map2sp_1
   17BA 33            [ 6] 4584 	inc	sp
   17BB 21 00 00      [10] 4585 	ld	hl, #0x0000
   17BE E5            [11] 4586 	push	hl
   17BF 2ArBEr00      [16] 4587 	ld	hl, (_m)
   17C2 E5            [11] 4588 	push	hl
   17C3 CDrA6r04      [17] 4589 	call	__8BP_map2sp_2
   17C6 F1            [10] 4590 	pop	af
   17C7 F1            [10] 4591 	pop	af
                           4592 ;ciclo.c:572: evdir=evdir +4;
   17C8 21r07r01      [10] 4593 	ld	hl, #_evdir
   17CB 7E            [ 7] 4594 	ld	a, (hl)
   17CC C6 04         [ 7] 4595 	add	a, #0x04
   17CE 77            [ 7] 4596 	ld	(hl), a
   17CF D2rA0r19      [10] 4597 	jp	NC,00110$
   17D2 23            [ 6] 4598 	inc	hl
   17D3 34            [11] 4599 	inc	(hl)
                           4600 ;ciclo.c:573: break;
   17D4 C3rA0r19      [10] 4601 	jp	00110$
                           4602 ;ciclo.c:575: case 5: //banda
   17D7                    4603 00107$:
                           4604 ;ciclo.c:576: procesaEventoBanda_1880();
   17D7 CDrAFr19      [17] 4605 	call	_procesaEventoBanda_1880
                           4606 ;ciclo.c:577: break;
   17DA C3rA0r19      [10] 4607 	jp	00110$
                           4608 ;ciclo.c:579: case 6://enemigo fijo
   17DD                    4609 00108$:
                           4610 ;ciclo.c:581: eneim=0;_8BP_peek_2(evdir+4,&eneim);
   17DD 21 00 00      [10] 4611 	ld	hl, #0x0000
   17E0 22r10r01      [16] 4612 	ld	(_eneim), hl
   17E3 21r10r01      [10] 4613 	ld	hl, #_eneim
   17E6 4D            [ 4] 4614 	ld	c, l
   17E7 44            [ 4] 4615 	ld	b, h
   17E8 E1            [10] 4616 	pop	hl
   17E9 E5            [11] 4617 	push	hl
   17EA C5            [11] 4618 	push	bc
   17EB E5            [11] 4619 	push	hl
   17EC CDr26r05      [17] 4620 	call	__8BP_peek_2
   17EF F1            [10] 4621 	pop	af
                           4622 ;ciclo.c:582: enesp=15 + enesp % 8; // 8 enemigos del 15 al 22
   17F0 21 08 00      [10] 4623 	ld	hl, #0x0008
   17F3 E3            [19] 4624 	ex	(sp),hl
   17F4 2ArC2r00      [16] 4625 	ld	hl, (_enesp)
   17F7 E5            [11] 4626 	push	hl
   17F8 CDr00r00      [17] 4627 	call	__modsint
   17FB F1            [10] 4628 	pop	af
   17FC F1            [10] 4629 	pop	af
   17FD 01 0F 00      [10] 4630 	ld	bc,#0x000f
   1800 09            [11] 4631 	add	hl,bc
   1801 22rC2r00      [16] 4632 	ld	(_enesp), hl
                           4633 ;ciclo.c:583: _8BP_peek_2(evdir+6,&enecount[enesp-15]);//disparos para morir
   1804 01rAEr00      [10] 4634 	ld	bc, #_enecount+0
   1807 3ArC2r00      [13] 4635 	ld	a,(#_enesp + 0)
   180A C6 F1         [ 7] 4636 	add	a, #0xf1
   180C 6F            [ 4] 4637 	ld	l, a
   180D 17            [ 4] 4638 	rla
   180E 9F            [ 4] 4639 	sbc	a, a
   180F 67            [ 4] 4640 	ld	h, a
   1810 29            [11] 4641 	add	hl, hl
   1811 09            [11] 4642 	add	hl, bc
   1812 EB            [ 4] 4643 	ex	de, hl
   1813 FD 21r07r01   [14] 4644 	ld	iy, #_evdir
   1817 FD 7E 00      [19] 4645 	ld	a, 0 (iy)
   181A C6 06         [ 7] 4646 	add	a, #0x06
   181C 4F            [ 4] 4647 	ld	c, a
   181D FD 7E 01      [19] 4648 	ld	a, 1 (iy)
   1820 CE 00         [ 7] 4649 	adc	a, #0x00
   1822 47            [ 4] 4650 	ld	b, a
   1823 D5            [11] 4651 	push	de
   1824 C5            [11] 4652 	push	bc
   1825 CDr26r05      [17] 4653 	call	__8BP_peek_2
   1828 F1            [10] 4654 	pop	af
   1829 F1            [10] 4655 	pop	af
                           4656 ;ciclo.c:584: _8BP_peek_2(evdir+8,&eney);_8BP_peek_2(evdir+10,&enex);
   182A 11r14r01      [10] 4657 	ld	de, #_eney+0
   182D FD 21r07r01   [14] 4658 	ld	iy, #_evdir
   1831 FD 7E 00      [19] 4659 	ld	a, 0 (iy)
   1834 C6 08         [ 7] 4660 	add	a, #0x08
   1836 4F            [ 4] 4661 	ld	c, a
   1837 FD 7E 01      [19] 4662 	ld	a, 1 (iy)
   183A CE 00         [ 7] 4663 	adc	a, #0x00
   183C 47            [ 4] 4664 	ld	b, a
   183D D5            [11] 4665 	push	de
   183E C5            [11] 4666 	push	bc
   183F CDr26r05      [17] 4667 	call	__8BP_peek_2
   1842 F1            [10] 4668 	pop	af
   1843 F1            [10] 4669 	pop	af
   1844 11r12r01      [10] 4670 	ld	de, #_enex+0
   1847 FD 21r07r01   [14] 4671 	ld	iy, #_evdir
   184B FD 7E 00      [19] 4672 	ld	a, 0 (iy)
   184E C6 0A         [ 7] 4673 	add	a, #0x0a
   1850 4F            [ 4] 4674 	ld	c, a
   1851 FD 7E 01      [19] 4675 	ld	a, 1 (iy)
   1854 CE 00         [ 7] 4676 	adc	a, #0x00
   1856 47            [ 4] 4677 	ld	b, a
   1857 D5            [11] 4678 	push	de
   1858 C5            [11] 4679 	push	bc
   1859 CDr26r05      [17] 4680 	call	__8BP_peek_2
   185C F1            [10] 4681 	pop	af
   185D F1            [10] 4682 	pop	af
                           4683 ;ciclo.c:585: _8BP_setupsp_3(enesp,9,eneim);
   185E 2Ar10r01      [16] 4684 	ld	hl, (_eneim)
   1861 E5            [11] 4685 	push	hl
   1862 21 09 00      [10] 4686 	ld	hl, #0x0009
   1865 E5            [11] 4687 	push	hl
   1866 2ArC2r00      [16] 4688 	ld	hl, (_enesp)
   1869 E5            [11] 4689 	push	hl
   186A CDr95r03      [17] 4690 	call	__8BP_setupsp_3
   186D F1            [10] 4691 	pop	af
   186E F1            [10] 4692 	pop	af
   186F F1            [10] 4693 	pop	af
                           4694 ;ciclo.c:586: _8BP_locatesp_3(enesp,eney,enex);
   1870 21rC2r00      [10] 4695 	ld	hl,#_enesp + 0
   1873 46            [ 7] 4696 	ld	b, (hl)
   1874 2Ar12r01      [16] 4697 	ld	hl, (_enex)
   1877 E5            [11] 4698 	push	hl
   1878 2Ar14r01      [16] 4699 	ld	hl, (_eney)
   187B E5            [11] 4700 	push	hl
   187C C5            [11] 4701 	push	bc
   187D 33            [ 6] 4702 	inc	sp
   187E CDr6Dr01      [17] 4703 	call	__8BP_locatesp_3
   1881 F1            [10] 4704 	pop	af
   1882 F1            [10] 4705 	pop	af
   1883 33            [ 6] 4706 	inc	sp
                           4707 ;ciclo.c:587: _8BP_setupsp_3(enesp,0,1+16+64+2);
   1884 21 53 00      [10] 4708 	ld	hl, #0x0053
   1887 E5            [11] 4709 	push	hl
   1888 2E 00         [ 7] 4710 	ld	l, #0x00
   188A E5            [11] 4711 	push	hl
   188B 2ArC2r00      [16] 4712 	ld	hl, (_enesp)
   188E E5            [11] 4713 	push	hl
   188F CDr95r03      [17] 4714 	call	__8BP_setupsp_3
   1892 F1            [10] 4715 	pop	af
   1893 F1            [10] 4716 	pop	af
   1894 F1            [10] 4717 	pop	af
                           4718 ;ciclo.c:589: evdir=evdir+12;
   1895 21r07r01      [10] 4719 	ld	hl, #_evdir
   1898 7E            [ 7] 4720 	ld	a, (hl)
   1899 C6 0C         [ 7] 4721 	add	a, #0x0c
   189B 77            [ 7] 4722 	ld	(hl), a
   189C D2rA0r19      [10] 4723 	jp	NC,00110$
   189F 23            [ 6] 4724 	inc	hl
   18A0 34            [11] 4725 	inc	(hl)
                           4726 ;ciclo.c:590: break;
   18A1 C3rA0r19      [10] 4727 	jp	00110$
                           4728 ;ciclo.c:592: case 7://enemigo movil
   18A4                    4729 00109$:
                           4730 ;ciclo.c:593: _8BP_peek_2(evdir+4,&enesq);//macroseq
   18A4 21r16r01      [10] 4731 	ld	hl, #_enesq
   18A7 4D            [ 4] 4732 	ld	c, l
   18A8 44            [ 4] 4733 	ld	b, h
   18A9 E1            [10] 4734 	pop	hl
   18AA E5            [11] 4735 	push	hl
   18AB C5            [11] 4736 	push	bc
   18AC E5            [11] 4737 	push	hl
   18AD CDr26r05      [17] 4738 	call	__8BP_peek_2
   18B0 F1            [10] 4739 	pop	af
   18B1 F1            [10] 4740 	pop	af
                           4741 ;ciclo.c:594: _8BP_peek_2(evdir+6,&eney);_8BP_peek_2(evdir+8,&enex);
   18B2 11r14r01      [10] 4742 	ld	de, #_eney+0
   18B5 FD 21r07r01   [14] 4743 	ld	iy, #_evdir
   18B9 FD 7E 00      [19] 4744 	ld	a, 0 (iy)
   18BC C6 06         [ 7] 4745 	add	a, #0x06
   18BE 4F            [ 4] 4746 	ld	c, a
   18BF FD 7E 01      [19] 4747 	ld	a, 1 (iy)
   18C2 CE 00         [ 7] 4748 	adc	a, #0x00
   18C4 47            [ 4] 4749 	ld	b, a
   18C5 D5            [11] 4750 	push	de
   18C6 C5            [11] 4751 	push	bc
   18C7 CDr26r05      [17] 4752 	call	__8BP_peek_2
   18CA F1            [10] 4753 	pop	af
   18CB F1            [10] 4754 	pop	af
   18CC 11r12r01      [10] 4755 	ld	de, #_enex+0
   18CF FD 21r07r01   [14] 4756 	ld	iy, #_evdir
   18D3 FD 7E 00      [19] 4757 	ld	a, 0 (iy)
   18D6 C6 08         [ 7] 4758 	add	a, #0x08
   18D8 4F            [ 4] 4759 	ld	c, a
   18D9 FD 7E 01      [19] 4760 	ld	a, 1 (iy)
   18DC CE 00         [ 7] 4761 	adc	a, #0x00
   18DE 47            [ 4] 4762 	ld	b, a
   18DF D5            [11] 4763 	push	de
   18E0 C5            [11] 4764 	push	bc
   18E1 CDr26r05      [17] 4765 	call	__8BP_peek_2
   18E4 F1            [10] 4766 	pop	af
   18E5 F1            [10] 4767 	pop	af
                           4768 ;ciclo.c:595: _8BP_peek_2(evdir+10,&ener);//ruta
   18E6 11r18r01      [10] 4769 	ld	de, #_ener+0
   18E9 FD 21r07r01   [14] 4770 	ld	iy, #_evdir
   18ED FD 7E 00      [19] 4771 	ld	a, 0 (iy)
   18F0 C6 0A         [ 7] 4772 	add	a, #0x0a
   18F2 4F            [ 4] 4773 	ld	c, a
   18F3 FD 7E 01      [19] 4774 	ld	a, 1 (iy)
   18F6 CE 00         [ 7] 4775 	adc	a, #0x00
   18F8 47            [ 4] 4776 	ld	b, a
   18F9 D5            [11] 4777 	push	de
   18FA C5            [11] 4778 	push	bc
   18FB CDr26r05      [17] 4779 	call	__8BP_peek_2
   18FE F1            [10] 4780 	pop	af
   18FF F1            [10] 4781 	pop	af
                           4782 ;ciclo.c:596: _8BP_peek_2(evdir+12,&tr);//transparencia
   1900 11r1Ar01      [10] 4783 	ld	de, #_tr+0
   1903 FD 21r07r01   [14] 4784 	ld	iy, #_evdir
   1907 FD 7E 00      [19] 4785 	ld	a, 0 (iy)
   190A C6 0C         [ 7] 4786 	add	a, #0x0c
   190C 4F            [ 4] 4787 	ld	c, a
   190D FD 7E 01      [19] 4788 	ld	a, 1 (iy)
   1910 CE 00         [ 7] 4789 	adc	a, #0x00
   1912 47            [ 4] 4790 	ld	b, a
   1913 D5            [11] 4791 	push	de
   1914 C5            [11] 4792 	push	bc
   1915 CDr26r05      [17] 4793 	call	__8BP_peek_2
   1918 F1            [10] 4794 	pop	af
                           4795 ;ciclo.c:597: enesp=15 + enesp % 8;//del 15 al 22
   1919 21 08 00      [10] 4796 	ld	hl, #0x0008
   191C E3            [19] 4797 	ex	(sp),hl
   191D 2ArC2r00      [16] 4798 	ld	hl, (_enesp)
   1920 E5            [11] 4799 	push	hl
   1921 CDr00r00      [17] 4800 	call	__modsint
   1924 F1            [10] 4801 	pop	af
   1925 F1            [10] 4802 	pop	af
   1926 01 0F 00      [10] 4803 	ld	bc,#0x000f
   1929 09            [11] 4804 	add	hl,bc
   192A 22rC2r00      [16] 4805 	ld	(_enesp), hl
                           4806 ;ciclo.c:598: _8BP_setupsp_3(enesp,5,1);
   192D 21 01 00      [10] 4807 	ld	hl, #0x0001
   1930 E5            [11] 4808 	push	hl
   1931 2E 05         [ 7] 4809 	ld	l, #0x05
   1933 E5            [11] 4810 	push	hl
   1934 2ArC2r00      [16] 4811 	ld	hl, (_enesp)
   1937 E5            [11] 4812 	push	hl
   1938 CDr95r03      [17] 4813 	call	__8BP_setupsp_3
   193B F1            [10] 4814 	pop	af
   193C F1            [10] 4815 	pop	af
   193D F1            [10] 4816 	pop	af
                           4817 ;ciclo.c:599: _8BP_setupsp_3(enesp,7,enesq);
   193E 2Ar16r01      [16] 4818 	ld	hl, (_enesq)
   1941 E5            [11] 4819 	push	hl
   1942 21 07 00      [10] 4820 	ld	hl, #0x0007
   1945 E5            [11] 4821 	push	hl
   1946 2ArC2r00      [16] 4822 	ld	hl, (_enesp)
   1949 E5            [11] 4823 	push	hl
   194A CDr95r03      [17] 4824 	call	__8BP_setupsp_3
   194D F1            [10] 4825 	pop	af
   194E F1            [10] 4826 	pop	af
   194F F1            [10] 4827 	pop	af
                           4828 ;ciclo.c:600: _8BP_locatesp_3(enesp,eney,enex);
   1950 21rC2r00      [10] 4829 	ld	hl,#_enesp + 0
   1953 46            [ 7] 4830 	ld	b, (hl)
   1954 2Ar12r01      [16] 4831 	ld	hl, (_enex)
   1957 E5            [11] 4832 	push	hl
   1958 2Ar14r01      [16] 4833 	ld	hl, (_eney)
   195B E5            [11] 4834 	push	hl
   195C C5            [11] 4835 	push	bc
   195D 33            [ 6] 4836 	inc	sp
   195E CDr6Dr01      [17] 4837 	call	__8BP_locatesp_3
   1961 F1            [10] 4838 	pop	af
   1962 F1            [10] 4839 	pop	af
   1963 33            [ 6] 4840 	inc	sp
                           4841 ;ciclo.c:601: _8BP_setupsp_3(enesp,0,159+tr);
   1964 FD 21r1Ar01   [14] 4842 	ld	iy, #_tr
   1968 FD 7E 00      [19] 4843 	ld	a, 0 (iy)
   196B C6 9F         [ 7] 4844 	add	a, #0x9f
   196D 4F            [ 4] 4845 	ld	c, a
   196E FD 7E 01      [19] 4846 	ld	a, 1 (iy)
   1971 CE 00         [ 7] 4847 	adc	a, #0x00
   1973 47            [ 4] 4848 	ld	b, a
   1974 C5            [11] 4849 	push	bc
   1975 21 00 00      [10] 4850 	ld	hl, #0x0000
   1978 E5            [11] 4851 	push	hl
   1979 2ArC2r00      [16] 4852 	ld	hl, (_enesp)
   197C E5            [11] 4853 	push	hl
   197D CDr95r03      [17] 4854 	call	__8BP_setupsp_3
   1980 F1            [10] 4855 	pop	af
   1981 F1            [10] 4856 	pop	af
   1982 F1            [10] 4857 	pop	af
                           4858 ;ciclo.c:602: _8BP_setupsp_3(enesp,15,ener);
   1983 2Ar18r01      [16] 4859 	ld	hl, (_ener)
   1986 E5            [11] 4860 	push	hl
   1987 21 0F 00      [10] 4861 	ld	hl, #0x000f
   198A E5            [11] 4862 	push	hl
   198B 2ArC2r00      [16] 4863 	ld	hl, (_enesp)
   198E E5            [11] 4864 	push	hl
   198F CDr95r03      [17] 4865 	call	__8BP_setupsp_3
   1992 F1            [10] 4866 	pop	af
   1993 F1            [10] 4867 	pop	af
   1994 F1            [10] 4868 	pop	af
                           4869 ;ciclo.c:603: evdir=evdir+14;
   1995 21r07r01      [10] 4870 	ld	hl, #_evdir
   1998 7E            [ 7] 4871 	ld	a, (hl)
   1999 C6 0E         [ 7] 4872 	add	a, #0x0e
   199B 77            [ 7] 4873 	ld	(hl), a
   199C 30 02         [12] 4874 	jr	NC,00137$
   199E 23            [ 6] 4875 	inc	hl
   199F 34            [11] 4876 	inc	(hl)
   19A0                    4877 00137$:
                           4878 ;ciclo.c:607: }
   19A0                    4879 00110$:
                           4880 ;ciclo.c:608: _8BP_peek_2(evdir,&nextm);
   19A0 21rC0r00      [10] 4881 	ld	hl, #_nextm
   19A3 E5            [11] 4882 	push	hl
   19A4 2Ar07r01      [16] 4883 	ld	hl, (_evdir)
   19A7 E5            [11] 4884 	push	hl
   19A8 CDr26r05      [17] 4885 	call	__8BP_peek_2
   19AB F1            [10] 4886 	pop	af
   19AC F1            [10] 4887 	pop	af
                           4888 ;ciclo.c:610: }
   19AD F1            [10] 4889 	pop	af
   19AE C9            [10] 4890 	ret
                           4891 ;ciclo.c:612: void procesaEventoBanda_1880(){
                           4892 ;	---------------------------------
                           4893 ; Function procesaEventoBanda_1880
                           4894 ; ---------------------------------
   19AF                    4895 _procesaEventoBanda_1880::
                           4896 ;ciclo.c:613: if (banda==0){
   19AF FD 21rD8r00   [14] 4897 	ld	iy, #_banda
   19B3 FD 7E 01      [19] 4898 	ld	a, 1 (iy)
   19B6 FD B6 00      [19] 4899 	or	a, 0 (iy)
   19B9 20 36         [12] 4900 	jr	NZ,00103$
                           4901 ;ciclo.c:614: for (int i=15 ;i<=22;i++){
   19BB 01 0F 00      [10] 4902 	ld	bc, #0x000f
   19BE                    4903 00113$:
   19BE 3E 16         [ 7] 4904 	ld	a, #0x16
   19C0 B9            [ 4] 4905 	cp	a, c
   19C1 3E 00         [ 7] 4906 	ld	a, #0x00
   19C3 98            [ 4] 4907 	sbc	a, b
   19C4 E2rC9r19      [10] 4908 	jp	PO, 00153$
   19C7 EE 80         [ 7] 4909 	xor	a, #0x80
   19C9                    4910 00153$:
   19C9 FArDFr19      [10] 4911 	jp	M, 00101$
                           4912 ;ciclo.c:615: _8BP_setupsp_3(i,0,0);
   19CC C5            [11] 4913 	push	bc
   19CD 21 00 00      [10] 4914 	ld	hl, #0x0000
   19D0 E5            [11] 4915 	push	hl
   19D1 2E 00         [ 7] 4916 	ld	l, #0x00
   19D3 E5            [11] 4917 	push	hl
   19D4 C5            [11] 4918 	push	bc
   19D5 CDr95r03      [17] 4919 	call	__8BP_setupsp_3
   19D8 F1            [10] 4920 	pop	af
   19D9 F1            [10] 4921 	pop	af
   19DA F1            [10] 4922 	pop	af
   19DB C1            [10] 4923 	pop	bc
                           4924 ;ciclo.c:614: for (int i=15 ;i<=22;i++){
   19DC 03            [ 6] 4925 	inc	bc
   19DD 18 DF         [12] 4926 	jr	00113$
   19DF                    4927 00101$:
                           4928 ;ciclo.c:617: rb=26;
   19DF 21 1A 00      [10] 4929 	ld	hl, #0x001a
   19E2 22r0Br01      [16] 4930 	ld	(_rb), hl
                           4931 ;ciclo.c:618: muertos=0;
   19E5 2E 00         [ 7] 4932 	ld	l, #0x00
   19E7 22rD6r00      [16] 4933 	ld	(_muertos), hl
                           4934 ;ciclo.c:619: m=m+1;
   19EA 2ArBEr00      [16] 4935 	ld	hl, (_m)
   19ED 23            [ 6] 4936 	inc	hl
   19EE 22rBEr00      [16] 4937 	ld	(_m), hl
   19F1                    4938 00103$:
                           4939 ;ciclo.c:621: if (banda>Nbanda-1) return;
   19F1 ED 4BrF5r00   [20] 4940 	ld	bc, (_Nbanda)
   19F5 0B            [ 6] 4941 	dec	bc
   19F6 79            [ 4] 4942 	ld	a, c
   19F7 FD 21rD8r00   [14] 4943 	ld	iy, #_banda
   19FB FD 96 00      [19] 4944 	sub	a, 0 (iy)
   19FE 78            [ 4] 4945 	ld	a, b
   19FF FD 9E 01      [19] 4946 	sbc	a, 1 (iy)
   1A02 E2r07r1A      [10] 4947 	jp	PO, 00154$
   1A05 EE 80         [ 7] 4948 	xor	a, #0x80
   1A07                    4949 00154$:
   1A07 F2r0Br1A      [10] 4950 	jp	P, 00105$
   1A0A C9            [10] 4951 	ret
   1A0B                    4952 00105$:
                           4953 ;ciclo.c:622: if (banda-muertos==8) return;
   1A0B 2ArD8r00      [16] 4954 	ld	hl, (_banda)
   1A0E ED 4BrD6r00   [20] 4955 	ld	bc, (_muertos)
   1A12 BF            [ 4] 4956 	cp	a, a
   1A13 ED 42         [15] 4957 	sbc	hl, bc
   1A15 7D            [ 4] 4958 	ld	a, l
   1A16 D6 08         [ 7] 4959 	sub	a, #0x08
   1A18 B4            [ 4] 4960 	or	a, h
   1A19 C8            [11] 4961 	ret	Z
   1A1A 18 00         [12] 4962 	jr	00107$
   1A1C                    4963 00107$:
                           4964 ;ciclo.c:623: enesp=15 +enesp % 8;
   1A1C 21 08 00      [10] 4965 	ld	hl, #0x0008
   1A1F E5            [11] 4966 	push	hl
   1A20 2ArC2r00      [16] 4967 	ld	hl, (_enesp)
   1A23 E5            [11] 4968 	push	hl
   1A24 CDr00r00      [17] 4969 	call	__modsint
   1A27 F1            [10] 4970 	pop	af
   1A28 F1            [10] 4971 	pop	af
   1A29 01 0F 00      [10] 4972 	ld	bc,#0x000f
   1A2C 09            [11] 4973 	add	hl,bc
                           4974 ;ciclo.c:625: if (_basic_peek(dirsp[enesp])>0) return;
   1A2D 22rC2r00      [16] 4975 	ld	(_enesp), hl
   1A30 29            [11] 4976 	add	hl, hl
   1A31 11r6Er00      [10] 4977 	ld	de, #_dirsp
   1A34 19            [11] 4978 	add	hl, de
   1A35 4E            [ 7] 4979 	ld	c, (hl)
   1A36 23            [ 6] 4980 	inc	hl
   1A37 46            [ 7] 4981 	ld	b, (hl)
   1A38 C5            [11] 4982 	push	bc
   1A39 CDr00r08      [17] 4983 	call	__basic_peek
   1A3C F1            [10] 4984 	pop	af
   1A3D 7D            [ 4] 4985 	ld	a, l
   1A3E B7            [ 4] 4986 	or	a, a
   1A3F C0            [11] 4987 	ret	NZ
                           4988 ;ciclo.c:626: banda=banda+1;
   1A40 2ArD8r00      [16] 4989 	ld	hl, (_banda)
   1A43 23            [ 6] 4990 	inc	hl
   1A44 22rD8r00      [16] 4991 	ld	(_banda), hl
                           4992 ;ciclo.c:627: _8BP_setupsp_3(enesp,5,1);
   1A47 21 01 00      [10] 4993 	ld	hl, #0x0001
   1A4A E5            [11] 4994 	push	hl
   1A4B 2E 05         [ 7] 4995 	ld	l, #0x05
   1A4D E5            [11] 4996 	push	hl
   1A4E 2ArC2r00      [16] 4997 	ld	hl, (_enesp)
   1A51 E5            [11] 4998 	push	hl
   1A52 CDr95r03      [17] 4999 	call	__8BP_setupsp_3
   1A55 F1            [10] 5000 	pop	af
   1A56 F1            [10] 5001 	pop	af
   1A57 F1            [10] 5002 	pop	af
                           5003 ;ciclo.c:628: _8BP_setupsp_3(enesp,7,32);
   1A58 21 20 00      [10] 5004 	ld	hl, #0x0020
   1A5B E5            [11] 5005 	push	hl
   1A5C 2E 07         [ 7] 5006 	ld	l, #0x07
   1A5E E5            [11] 5007 	push	hl
   1A5F 2ArC2r00      [16] 5008 	ld	hl, (_enesp)
   1A62 E5            [11] 5009 	push	hl
   1A63 CDr95r03      [17] 5010 	call	__8BP_setupsp_3
   1A66 F1            [10] 5011 	pop	af
   1A67 F1            [10] 5012 	pop	af
   1A68 F1            [10] 5013 	pop	af
                           5014 ;ciclo.c:629: _8BP_locatesp_3(enesp,0,40);
   1A69 21rC2r00      [10] 5015 	ld	hl,#_enesp + 0
   1A6C 46            [ 7] 5016 	ld	b, (hl)
   1A6D 21 28 00      [10] 5017 	ld	hl, #0x0028
   1A70 E5            [11] 5018 	push	hl
   1A71 2E 00         [ 7] 5019 	ld	l, #0x00
   1A73 E5            [11] 5020 	push	hl
   1A74 C5            [11] 5021 	push	bc
   1A75 33            [ 6] 5022 	inc	sp
   1A76 CDr6Dr01      [17] 5023 	call	__8BP_locatesp_3
   1A79 F1            [10] 5024 	pop	af
   1A7A F1            [10] 5025 	pop	af
   1A7B 33            [ 6] 5026 	inc	sp
                           5027 ;ciclo.c:630: _8BP_setupsp_3(enesp,0,223);
   1A7C 21 DF 00      [10] 5028 	ld	hl, #0x00df
   1A7F E5            [11] 5029 	push	hl
   1A80 2E 00         [ 7] 5030 	ld	l, #0x00
   1A82 E5            [11] 5031 	push	hl
   1A83 2ArC2r00      [16] 5032 	ld	hl, (_enesp)
   1A86 E5            [11] 5033 	push	hl
   1A87 CDr95r03      [17] 5034 	call	__8BP_setupsp_3
   1A8A F1            [10] 5035 	pop	af
   1A8B F1            [10] 5036 	pop	af
   1A8C F1            [10] 5037 	pop	af
                           5038 ;ciclo.c:631: rb=rb+1;if (rb==31) rb=26;
   1A8D 2Ar0Br01      [16] 5039 	ld	hl, (_rb)
   1A90 23            [ 6] 5040 	inc	hl
   1A91 22r0Br01      [16] 5041 	ld	(_rb), hl
   1A94 FD 21r0Br01   [14] 5042 	ld	iy, #_rb
   1A98 FD 7E 00      [19] 5043 	ld	a, 0 (iy)
   1A9B D6 1F         [ 7] 5044 	sub	a, #0x1f
   1A9D FD B6 01      [19] 5045 	or	a, 1 (iy)
   1AA0 20 06         [12] 5046 	jr	NZ,00111$
   1AA2 21 1A 00      [10] 5047 	ld	hl, #0x001a
   1AA5 22r0Br01      [16] 5048 	ld	(_rb), hl
   1AA8                    5049 00111$:
                           5050 ;ciclo.c:632: _8BP_setupsp_3(enesp,15,rb);
   1AA8 2Ar0Br01      [16] 5051 	ld	hl, (_rb)
   1AAB E5            [11] 5052 	push	hl
   1AAC 21 0F 00      [10] 5053 	ld	hl, #0x000f
   1AAF E5            [11] 5054 	push	hl
   1AB0 2ArC2r00      [16] 5055 	ld	hl, (_enesp)
   1AB3 E5            [11] 5056 	push	hl
   1AB4 CDr95r03      [17] 5057 	call	__8BP_setupsp_3
   1AB7 F1            [10] 5058 	pop	af
   1AB8 F1            [10] 5059 	pop	af
   1AB9 F1            [10] 5060 	pop	af
                           5061 ;ciclo.c:633: }
   1ABA C9            [10] 5062 	ret
                           5063 	.area _CODE
                           5064 	.area _INITIALIZER
   0000                    5065 __xinit___basic_rnd_x:
   0000 00 00              5066 	.dw #0x0000
                           5067 	.area _CABS (ABS)
